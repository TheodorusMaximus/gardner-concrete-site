// src/blog-v3-tag-tags.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl(opts) {
  const domainToMappings = {
    _: [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "apps._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/v3/tags",
        destPath: "/v3/tags"
      },
      {
        srcPath: "/blog/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v2/tags",
        destPath: "/v2/tags"
      },
      {
        srcPath: "/_api/communities-blog-node-api/v3/bulk/tag",
        destPath: "/v3/bulk/tag"
      },
      {
        srcPath: "/_api/communities-blog-node-api/v3/bulk/tags",
        destPath: "/v3/bulk/tags"
      },
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ],
    "social-blog._base_domain_": [
      {
        srcPath: "/_api/communities-blog-node-api/v3/tags",
        destPath: "/v3/tags"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_blog_tags";
function createTag(payload) {
  function __createTag({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "POST",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.CreateTag",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "tag.createdDate" }, { path: "tag.updatedDate" }]
        }
      ])
    };
    return metadata;
  }
  return __createTag;
}
function getTagByLabel(payload) {
  function __getTagByLabel({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "GET",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.GetTagByLabel",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags/labels/{label}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "tag.createdDate" }, { path: "tag.updatedDate" }]
        }
      ])
    };
    return metadata;
  }
  return __getTagByLabel;
}
function getTag(payload) {
  function __getTag({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "GET",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.GetTag",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags/{tagId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "tag.createdDate" }, { path: "tag.updatedDate" }]
        }
      ])
    };
    return metadata;
  }
  return __getTag;
}
function getTagBySlug(payload) {
  function __getTagBySlug({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "GET",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.GetTagBySlug",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags/slugs/{slug}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "tag.createdDate" }, { path: "tag.updatedDate" }]
        }
      ])
    };
    return metadata;
  }
  return __getTagBySlug;
}
function queryTags(payload) {
  function __queryTags({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "POST",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.QueryTags",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "tags.createdDate" }, { path: "tags.updatedDate" }]
        }
      ])
    };
    return metadata;
  }
  return __queryTags;
}
function deleteTag(payload) {
  function __deleteTag({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v3.tag",
      method: "DELETE",
      methodFqn: "com.wixpress.npm.communities.platformized.blog.TagService.DeleteTag",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressNpmCommunitiesPlatformizedBlogTagServiceUrl({
        protoPath: "/v3/tags/{tagId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteTag;
}

// src/blog-v3-tag-tags.meta.ts
function createTag2() {
  const payload = {};
  const getRequestOptions = createTag(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/tags",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTagByLabel2() {
  const payload = { label: ":label" };
  const getRequestOptions = getTagByLabel(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/tags/labels/{label}",
    pathParams: { label: "label" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTag2() {
  const payload = { tagId: ":tagId" };
  const getRequestOptions = getTag(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/tags/{tagId}",
    pathParams: { tagId: "tagId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTagBySlug2() {
  const payload = { slug: ":slug" };
  const getRequestOptions = getTagBySlug(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/tags/slugs/{slug}",
    pathParams: { slug: "slug" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryTags2() {
  const payload = {};
  const getRequestOptions = queryTags(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/tags/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteTag2() {
  const payload = { tagId: ":tagId" };
  const getRequestOptions = deleteTag(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/tags/{tagId}",
    pathParams: { tagId: "tagId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  createTag2 as createTag,
  deleteTag2 as deleteTag,
  getTag2 as getTag,
  getTagByLabel2 as getTagByLabel,
  getTagBySlug2 as getTagBySlug,
  queryTags2 as queryTags
};
//# sourceMappingURL=meta.mjs.map