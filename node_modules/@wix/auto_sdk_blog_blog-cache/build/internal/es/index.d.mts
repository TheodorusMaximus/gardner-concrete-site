import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { GetBlogCacheResponse } from './index.typings.mjs';
export { ActionEvent, Address, AddressHint, BlogCache, BusinessSchedule, Categories, ChangeContext, ChangeContextPayloadOneOf, ConsentPolicy, DayOfWeek, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, Flag, GeoCoordinates, GetBlogCacheRequest, Locale, LocaleStatus, Multilingual, PageInfo, PagesData, PlacementType, Properties, PropertiesChange, ResolutionMethod, RestoreInfo, SiteCloned, SiteCreated, SiteProperties, SitePropertiesEvent, SitePropertiesNotification, SiteSupportedLanguage, SpecialHourPeriod, SupportedLanguage, TimePeriod, Translation, UrlInvalidationNotification } from './index.typings.mjs';

type BlogCacheNonNullablePaths = `siteSupportedLanguages` | `siteSupportedLanguages.${number}.languageCode` | `siteSupportedLanguages.${number}.status` | `siteSupportedLanguages.${number}.flag` | `siteSupportedLanguages.${number}.resolutionMethod` | `pagesData.blogPage.title` | `pagesData.blogPage.pageId` | `pagesData.blogPage.hidden` | `pagesData.blogPage.path` | `pagesData.blogPage.url` | `pagesData.blogPage.isSmProtected` | `pagesData.blogPage.isDynamic` | `pagesData.blogPage.platformApps`;
declare function getBlogCache$1(httpClient: HttpClient): GetBlogCacheSignature;
interface GetBlogCacheSignature {
    /**
     * Gets blog cache.
     */
    (): Promise<NonNullablePaths<GetBlogCacheResponse, {
        [P in BlogCacheNonNullablePaths]: `blogCache.${P}`;
    }[BlogCacheNonNullablePaths]>>;
}

declare const getBlogCache: MaybeContext<BuildRESTFunction<typeof getBlogCache$1> & typeof getBlogCache$1>;

export { GetBlogCacheResponse, getBlogCache };
