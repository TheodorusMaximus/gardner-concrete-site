{"version":3,"sources":["../../src/blog-v3-draft-draft-posts.public.ts","../../src/blog-v3-draft-draft-posts.universal.ts","../../src/blog-v3-draft-draft-posts.http.ts","../../src/blog-v3-draft-draft-posts.context.ts"],"sourcesContent":["import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTPageURLToSDKPageURL } from '@wix/sdk-runtime/transformations/page-url';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { transformRESTVideoToSDKVideo } from '@wix/sdk-runtime/transformations/video';\nimport { transformRESTVideoV2ToSDKVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  BulkCreateDraftPostsOptions,\n  BulkCreateDraftPostsResponse,\n  BulkDeleteDraftPostsOptions,\n  BulkDeleteDraftPostsResponse,\n  BulkUpdateDraftPostsOptions,\n  BulkUpdateDraftPostsResponse,\n  CreateDraftPostOptions,\n  CreateDraftPostResponse,\n  DeleteDraftPostOptions,\n  DraftCreatedEnvelope,\n  DraftDeletedEnvelope,\n  DraftPost,\n  DraftPostsQueryBuilder,\n  DraftUpdatedEnvelope,\n  GetDeletedDraftPostResponse,\n  GetDraftPostOptions,\n  GetDraftPostResponse,\n  ListDeletedDraftPostsOptions,\n  ListDeletedDraftPostsResponse,\n  ListDraftPostsOptions,\n  ListDraftPostsResponse,\n  PublishDraftPostResponse,\n  QueryDraftPostsOptions,\n  RestoreFromTrashBinResponse,\n  UpdateDraftPost,\n  UpdateDraftPostOptions,\n  UpdateDraftPostResponse,\n  bulkCreateDraftPosts as universalBulkCreateDraftPosts,\n  bulkDeleteDraftPosts as universalBulkDeleteDraftPosts,\n  bulkUpdateDraftPosts as universalBulkUpdateDraftPosts,\n  createDraftPost as universalCreateDraftPost,\n  deleteDraftPost as universalDeleteDraftPost,\n  getDeletedDraftPost as universalGetDeletedDraftPost,\n  getDraftPost as universalGetDraftPost,\n  listDeletedDraftPosts as universalListDeletedDraftPosts,\n  listDraftPosts as universalListDraftPosts,\n  publishDraftPost as universalPublishDraftPost,\n  queryDraftPosts as universalQueryDraftPosts,\n  removeFromTrashBin as universalRemoveFromTrashBin,\n  restoreFromTrashBin as universalRestoreFromTrashBin,\n  updateDraftPost as universalUpdateDraftPost,\n} from './blog-v3-draft-draft-posts.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/blog' };\n\ntype DraftNonNullablePaths =\n  | `_id`\n  | `title`\n  | `categoryIds`\n  | `hashtags`\n  | `minutesToRead`\n  | `tagIds`\n  | `relatedPostIds`\n  | `pricingPlanIds`\n  | `status`\n  | `moderationDetails.submittedBy`\n  | `moderationDetails.status`\n  | `hasUnpublishedChanges`\n  | `seoData.tags`\n  | `seoData.tags.${number}.type`\n  | `seoData.tags.${number}.children`\n  | `seoData.tags.${number}.custom`\n  | `seoData.tags.${number}.disabled`\n  | `seoData.settings.preventAutoRedirect`\n  | `seoData.settings.keywords`\n  | `seoData.settings.keywords.${number}.term`\n  | `seoData.settings.keywords.${number}.isMain`\n  | `media.embedMedia.thumbnail.url`\n  | `media.embedMedia.thumbnail.width`\n  | `media.embedMedia.thumbnail.height`\n  | `media.embedMedia.video.url`\n  | `media.embedMedia.video.width`\n  | `media.embedMedia.video.height`\n  | `media.displayed`\n  | `media.custom`;\n\nexport function createDraftPost(\n  httpClient: HttpClient\n): CreateDraftPostSignature {\n  return (\n    draftPost: NonNullablePaths<DraftPost, `title`>,\n    options?: CreateDraftPostOptions\n  ) =>\n    universalCreateDraftPost(\n      draftPost,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateDraftPostSignature {\n  /**\n   * Creates a draft post.\n   *\n   * For 3rd-party apps, `memberId` is a required field.\n   *\n   * In `categoryIds`, only categories that already exist will be added to the draft post. Including\n   * `categoryIds` that do not exist will not return an error, but they will not be added to the `categoryIds` array.\n   * If some of the categories exist, those will be added while those that do not exist will not be added to `categoryIds`.\n   * You can check which categories are available with\n   * List Categories ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/list-categories) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/category/list-categories)).\n   * @param - Draft post to create.\n   * @param - Options for creating a draft post.\n   */\n  (\n    draftPost: NonNullablePaths<DraftPost, `title`>,\n    options?: CreateDraftPostOptions\n  ): Promise<\n    NonNullablePaths<\n      CreateDraftPostResponse,\n      { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function bulkCreateDraftPosts(\n  httpClient: HttpClient\n): BulkCreateDraftPostsSignature {\n  return (\n    draftPosts: NonNullablePaths<DraftPost, `title`>[],\n    options?: BulkCreateDraftPostsOptions\n  ) =>\n    universalBulkCreateDraftPosts(\n      draftPosts,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkCreateDraftPostsSignature {\n  /**\n   * Creates multiple draft posts.\n   * @param - Draft posts to create.\n   * @param - Options for creating multiple draft posts.\n   */\n  (\n    draftPosts: NonNullablePaths<DraftPost, `title`>[],\n    options?: BulkCreateDraftPostsOptions\n  ): Promise<\n    NonNullablePaths<\n      BulkCreateDraftPostsResponse,\n      | `results`\n      | `results.${number}.itemMetadata.originalIndex`\n      | `results.${number}.itemMetadata.success`\n      | `results.${number}.itemMetadata.error.code`\n      | `results.${number}.itemMetadata.error.description`\n      | {\n          [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n        }[DraftNonNullablePaths]\n      | `bulkActionMetadata.totalSuccesses`\n      | `bulkActionMetadata.totalFailures`\n      | `bulkActionMetadata.undetailedFailures`\n    >\n  >;\n}\n\nexport function bulkUpdateDraftPosts(\n  httpClient: HttpClient\n): BulkUpdateDraftPostsSignature {\n  return (\n    options?: NonNullablePaths<\n      BulkUpdateDraftPostsOptions,\n      `draftPosts.${number}.draftPost` | `draftPosts.${number}.draftPost._id`\n    >\n  ) =>\n    universalBulkUpdateDraftPosts(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkUpdateDraftPostsSignature {\n  /**\n   * Updates multiple draft posts.\n   * @param - Options for updating multiple draft posts.\n   */\n  (\n    options?: NonNullablePaths<\n      BulkUpdateDraftPostsOptions,\n      `draftPosts.${number}.draftPost` | `draftPosts.${number}.draftPost._id`\n    >\n  ): Promise<\n    NonNullablePaths<\n      BulkUpdateDraftPostsResponse,\n      | `results`\n      | `results.${number}.itemMetadata.originalIndex`\n      | `results.${number}.itemMetadata.success`\n      | `results.${number}.itemMetadata.error.code`\n      | `results.${number}.itemMetadata.error.description`\n      | {\n          [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n        }[DraftNonNullablePaths]\n      | `bulkActionMetadata.totalSuccesses`\n      | `bulkActionMetadata.totalFailures`\n      | `bulkActionMetadata.undetailedFailures`\n    >\n  >;\n}\n\nexport function listDeletedDraftPosts(\n  httpClient: HttpClient\n): ListDeletedDraftPostsSignature {\n  return (options?: ListDeletedDraftPostsOptions) =>\n    universalListDeletedDraftPosts(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListDeletedDraftPostsSignature {\n  /**\n   * Retrieves a list of up to 100 deleted draft posts.\n   *\n   * List Draft Posts runs with these defaults, which you can override:\n   * - `editedDate` is sorted in descending order. In this case,`editedDate` implies the date the post was deleted.\n   * - `paging.limit` is `50`.\n   * - `paging.offset` is `0`.\n   * @param - Options for listing deleted draft posts.\n   */\n  (options?: ListDeletedDraftPostsOptions): Promise<\n    NonNullablePaths<\n      ListDeletedDraftPostsResponse,\n      {\n        [P in DraftNonNullablePaths]: `draftPosts.${number}.${P}`;\n      }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function getDraftPost(httpClient: HttpClient): GetDraftPostSignature {\n  return (draftPostId: string, options?: GetDraftPostOptions) =>\n    universalGetDraftPost(\n      draftPostId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetDraftPostSignature {\n  /**\n   * Retrieves a draft post by the provided ID.\n   * @param - Draft post ID.\n   * @param - Options for getting a draft post.\n   */\n  (draftPostId: string, options?: GetDraftPostOptions): Promise<\n    NonNullablePaths<\n      GetDraftPostResponse,\n      { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function updateDraftPost(\n  httpClient: HttpClient\n): UpdateDraftPostSignature {\n  return (\n    _id: string,\n    draftPost: UpdateDraftPost,\n    options?: UpdateDraftPostOptions\n  ) =>\n    universalUpdateDraftPost(\n      _id,\n      draftPost,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateDraftPostSignature {\n  /**\n   * Updates a draft post.\n   * @param - Draft post ID.\n   * @param - Options for updating a draft post.\n   * @param - Draft Post info.\n   */\n  (\n    _id: string,\n    draftPost: UpdateDraftPost,\n    options?: UpdateDraftPostOptions\n  ): Promise<\n    NonNullablePaths<\n      UpdateDraftPostResponse,\n      { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function deleteDraftPost(\n  httpClient: HttpClient\n): DeleteDraftPostSignature {\n  return (draftPostId: string, options?: DeleteDraftPostOptions) =>\n    universalDeleteDraftPost(\n      draftPostId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteDraftPostSignature {\n  /**\n   * Moves a draft post to the trash bin.\n   * A published post can also be deleted by the `post.id`. See the Posts API ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object)) for more information about posts.\n   *\n   * To permanently delete a post bypassing the trash bin, set the `permanent` field value to `true`. The post can't be restored after this.\n   * @param - Draft post ID.\n   * @param - Options for deleting a draft post.\n   */\n  (draftPostId: string, options?: DeleteDraftPostOptions): Promise<void>;\n}\n\nexport function removeFromTrashBin(\n  httpClient: HttpClient\n): RemoveFromTrashBinSignature {\n  return (draftPostId: string) =>\n    universalRemoveFromTrashBin(\n      draftPostId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface RemoveFromTrashBinSignature {\n  /**\n   * Permanently deletes a draft post that is currently in the trash bin.\n   *\n   * This action is permanent and can't be reversed.\n   * @param - Draft post ID.\n   */\n  (draftPostId: string): Promise<void>;\n}\n\nexport function bulkDeleteDraftPosts(\n  httpClient: HttpClient\n): BulkDeleteDraftPostsSignature {\n  return (postIds: string[], options?: BulkDeleteDraftPostsOptions) =>\n    universalBulkDeleteDraftPosts(\n      postIds,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkDeleteDraftPostsSignature {\n  /**\n   * Deletes multiple draft posts.\n   * @param - Post IDs.\n   * @param - Options for deleting multiple draft posts.\n   */\n  (postIds: string[], options?: BulkDeleteDraftPostsOptions): Promise<\n    NonNullablePaths<\n      BulkDeleteDraftPostsResponse,\n      | `results`\n      | `results.${number}.itemMetadata.originalIndex`\n      | `results.${number}.itemMetadata.success`\n      | `results.${number}.itemMetadata.error.code`\n      | `results.${number}.itemMetadata.error.description`\n      | {\n          [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n        }[DraftNonNullablePaths]\n      | `bulkActionMetadata.totalSuccesses`\n      | `bulkActionMetadata.totalFailures`\n      | `bulkActionMetadata.undetailedFailures`\n    >\n  >;\n}\n\nexport function listDraftPosts(\n  httpClient: HttpClient\n): ListDraftPostsSignature {\n  return (options?: ListDraftPostsOptions) =>\n    universalListDraftPosts(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListDraftPostsSignature {\n  /**\n   * Retrieves a list of up to 100 draft posts per request.\n   *\n   * List Draft Posts runs with these defaults, which you can override:\n   * - `editedDate` is sorted in descending order.\n   * - `paging.limit` is `50`.\n   * - `paging.offset` is `0`.\n   * @param - Options for listing multiple draft posts.\n   */\n  (options?: ListDraftPostsOptions): Promise<\n    NonNullablePaths<\n      ListDraftPostsResponse,\n      | {\n          [P in DraftNonNullablePaths]: `draftPosts.${number}.${P}`;\n        }[DraftNonNullablePaths]\n      | `metaData.count`\n      | `metaData.offset`\n      | `metaData.total`\n    >\n  >;\n}\n\nexport function getDeletedDraftPost(\n  httpClient: HttpClient\n): GetDeletedDraftPostSignature {\n  return (draftPostId: string) =>\n    universalGetDeletedDraftPost(\n      draftPostId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetDeletedDraftPostSignature {\n  /**\n   * Retrieves a deleted draft post from the trash bin by the provided ID.\n   * @param - Draft post ID.\n   */\n  (draftPostId: string): Promise<\n    NonNullablePaths<\n      GetDeletedDraftPostResponse,\n      { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function restoreFromTrashBin(\n  httpClient: HttpClient\n): RestoreFromTrashBinSignature {\n  return (draftPostId: string) =>\n    universalRestoreFromTrashBin(\n      draftPostId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface RestoreFromTrashBinSignature {\n  /**\n   * Restores a deleted draft post from the trash bin by the provided ID.\n   * @param - Draft post ID.\n   */\n  (draftPostId: string): Promise<\n    NonNullablePaths<\n      RestoreFromTrashBinResponse,\n      { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n    >\n  >;\n}\n\nexport function queryDraftPosts(\n  httpClient: HttpClient\n): QueryDraftPostsSignature {\n  return (options?: QueryDraftPostsOptions) =>\n    universalQueryDraftPosts(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryDraftPostsSignature {\n  /**\n   * Creates a query to retrieve a list of up to 100 draft posts.\n   *\n   *\n   * The `queryDraftPosts()` function builds a query to retrieve a list of up to 100 draft posts, and returns a `DraftPostsQueryBuilder` object.\n   *\n   * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n   *\n   * You can refine the query by chaining `DraftPostsQueryBuilder` functions onto the query. `DraftPostsQueryBuilder` functions enable you to sort, filter, and control the results that `queryDraftPosts()` returns.\n   *\n   * `queryDraftPosts()` runs with these `DraftPostsQueryBuilder` defaults that can be overridden:\n   * - `limit(50)`\n   * - `ascending('_id')`\n   *\n   * The following `DraftPostsQueryBuilder` functions are supported for `queryDraftPosts()`. For a full description of the Draft Posts object, see the object returned for the `items` property in `DraftPostsQueryResult`.\n   * @param - Options for querying draft posts.\n   */\n  (options?: QueryDraftPostsOptions): DraftPostsQueryBuilder;\n}\n\nexport function publishDraftPost(\n  httpClient: HttpClient\n): PublishDraftPostSignature {\n  return (draftPostId: string) =>\n    universalPublishDraftPost(\n      draftPostId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface PublishDraftPostSignature {\n  /**\n   * Publishes a draft post by ID. This creates a new post ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object))\n   * with the data from the draft post.\n   *\n   * If the draft post was already published, the published post will be updated with the latest values\n   * from the draft post.\n   * @param - Draft post ID.\n   */\n  (draftPostId: string): Promise<\n    NonNullablePaths<PublishDraftPostResponse, `postId`>\n  >;\n}\n\nexport const onDraftCreated = EventDefinition(\n  'wix.blog.v3.draft_created',\n  true,\n  (event: DraftCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'entity.heroImage' },\n            { path: 'entity.coverMedia.image' },\n            { path: 'entity.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.editedDate' },\n            { path: 'entity.scheduledPublishDate' },\n            { path: 'entity.firstPublishedDate' },\n            { path: 'entity.createdDate' },\n            { path: 'entity.richContent.metadata.createdTimestamp' },\n            { path: 'entity.richContent.metadata.updatedTimestamp' },\n            { path: 'entity.moderationDetails.submittedDate' },\n            { path: 'entity.moderationDetails.moderationDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'entity.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'entity.richContent.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },\n            { path: 'entity.richContent.nodes.imageData.image.duration' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },\n            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },\n            {\n              path: 'entity.richContent.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },\n            { path: 'entity.richContent.nodes.videoData.video.duration' },\n            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },\n            { path: 'entity.richContent.nodes.audioData.audio.duration' },\n            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'entity.media.wixMedia.videoV2' }],\n        },\n      ])\n    )\n)<DraftCreatedEnvelope>();\nexport const onDraftDeleted = EventDefinition(\n  'wix.blog.v3.draft_deleted',\n  true,\n  (event: DraftDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'entity.heroImage' },\n            { path: 'entity.coverMedia.image' },\n            { path: 'entity.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.editedDate' },\n            { path: 'entity.scheduledPublishDate' },\n            { path: 'entity.firstPublishedDate' },\n            { path: 'entity.createdDate' },\n            { path: 'entity.richContent.metadata.createdTimestamp' },\n            { path: 'entity.richContent.metadata.updatedTimestamp' },\n            { path: 'entity.moderationDetails.submittedDate' },\n            { path: 'entity.moderationDetails.moderationDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'entity.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'entity.richContent.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },\n            { path: 'entity.richContent.nodes.imageData.image.duration' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },\n            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },\n            {\n              path: 'entity.richContent.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },\n            { path: 'entity.richContent.nodes.videoData.video.duration' },\n            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },\n            { path: 'entity.richContent.nodes.audioData.audio.duration' },\n            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'entity.media.wixMedia.videoV2' }],\n        },\n      ])\n    )\n)<DraftDeletedEnvelope>();\nexport const onDraftUpdated = EventDefinition(\n  'wix.blog.v3.draft_updated',\n  true,\n  (event: DraftUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'entity.heroImage' },\n            { path: 'entity.coverMedia.image' },\n            { path: 'entity.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.editedDate' },\n            { path: 'entity.scheduledPublishDate' },\n            { path: 'entity.firstPublishedDate' },\n            { path: 'entity.createdDate' },\n            { path: 'entity.richContent.metadata.createdTimestamp' },\n            { path: 'entity.richContent.metadata.updatedTimestamp' },\n            { path: 'entity.moderationDetails.submittedDate' },\n            { path: 'entity.moderationDetails.moderationDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [{ path: 'entity.url' }, { path: 'entity.translations.url' }],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'entity.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'entity.richContent.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            { path: 'entity.richContent.nodes.galleryData.options.item.ratio' },\n            { path: 'entity.richContent.nodes.imageData.image.duration' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lat' },\n            { path: 'entity.richContent.nodes.mapData.mapSettings.lng' },\n            { path: 'entity.richContent.nodes.pollData.poll.image.duration' },\n            {\n              path: 'entity.richContent.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'entity.richContent.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'entity.richContent.nodes.appEmbedData.image.duration' },\n            { path: 'entity.richContent.nodes.videoData.video.duration' },\n            { path: 'entity.richContent.nodes.videoData.thumbnail.duration' },\n            { path: 'entity.richContent.nodes.audioData.audio.duration' },\n            { path: 'entity.richContent.nodes.audioData.coverImage.duration' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'entity.media.wixMedia.videoV2' }],\n        },\n      ])\n    )\n)<DraftUpdatedEnvelope>();\n\nexport {\n  Action,\n  ActionEvent,\n  Alignment,\n  AnchorData,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  AppType,\n  ApplicationError,\n  ApproveDraftPostRequest,\n  ApproveDraftPostResponse,\n  AspectRatio,\n  AudioData,\n  Background,\n  BackgroundBackgroundOneOf,\n  BackgroundType,\n  BaseEventMetadata,\n  BlockquoteData,\n  BlogPaging,\n  BookingData,\n  Border,\n  BorderColors,\n  BulkActionMetadata,\n  BulkCreateDraftPostsOptions,\n  BulkCreateDraftPostsRequest,\n  BulkCreateDraftPostsResponse,\n  BulkDeleteDraftPostsOptions,\n  BulkDeleteDraftPostsRequest,\n  BulkDeleteDraftPostsResponse,\n  BulkDraftPostResult,\n  BulkRejectDraftPostRequest,\n  BulkRejectDraftPostResponse,\n  BulkRevertToUnpublishedRequest,\n  BulkRevertToUnpublishedResponse,\n  BulkUpdateDraftPostLanguageRequest,\n  BulkUpdateDraftPostLanguageResponse,\n  BulkUpdateDraftPostsOptions,\n  BulkUpdateDraftPostsRequest,\n  BulkUpdateDraftPostsResponse,\n  BulletedListData,\n  ButtonData,\n  ButtonDataType,\n  ButtonStyles,\n  CaptionData,\n  CardStyles,\n  CardStylesType,\n  Category,\n  CategoryTranslation,\n  CellStyle,\n  CodeBlockData,\n  CollapsibleListData,\n  ColorData,\n  Colors,\n  CoverMedia,\n  CoverMediaMediaOneOf,\n  CreateDraftPostOptions,\n  CreateDraftPostRequest,\n  CreateDraftPostResponse,\n  Crop,\n  CursorPaging,\n  Cursors,\n  Decoration,\n  DecorationDataOneOf,\n  DecorationType,\n  DeleteDraftPostOptions,\n  DeleteDraftPostRequest,\n  DeleteDraftPostResponse,\n  Design,\n  Dimensions,\n  Direction,\n  DividerData,\n  DividerDataAlignment,\n  DocumentStyle,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  DraftCategoriesUpdated,\n  DraftCreatedEnvelope,\n  DraftDeletedEnvelope,\n  DraftPost,\n  DraftPostOwnerChanged,\n  DraftPostTranslation,\n  DraftPostsQueryBuilder,\n  DraftPostsQueryResult,\n  DraftTagsUpdated,\n  DraftUpdatedEnvelope,\n  EmbedData,\n  EmbedMedia,\n  EmbedThumbnail,\n  EmbedVideo,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventData,\n  EventMetadata,\n  Field,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  FocalPoint,\n  FontSizeData,\n  FontType,\n  GIF,\n  GIFData,\n  GIFType,\n  GalleryData,\n  GalleryOptions,\n  GalleryOptionsLayout,\n  GetDeletedDraftPostRequest,\n  GetDeletedDraftPostResponse,\n  GetDraftPostOptions,\n  GetDraftPostRequest,\n  GetDraftPostResponse,\n  GetDraftPostTotalsRequest,\n  GetDraftPostTotalsResponse,\n  GetDraftPostsSort,\n  GetPostAmountsByLanguageRequest,\n  GetPostAmountsByLanguageResponse,\n  Gradient,\n  HTMLData,\n  HTMLDataDataOneOf,\n  HeadingData,\n  Height,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  Image,\n  ImageData,\n  ImageDataStyles,\n  ImageStyles,\n  InitialDraftPostsCopied,\n  InitialExpandedItems,\n  IsDraftPostAutoTranslatableRequest,\n  IsDraftPostAutoTranslatableResponse,\n  Item,\n  ItemDataOneOf,\n  ItemMetadata,\n  ItemStyle,\n  Keyword,\n  Layout,\n  LayoutCellData,\n  LayoutType,\n  LineStyle,\n  Link,\n  LinkData,\n  LinkDataOneOf,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  ListDeletedDraftPostsOptions,\n  ListDeletedDraftPostsRequest,\n  ListDeletedDraftPostsResponse,\n  ListDraftPostsOptions,\n  ListDraftPostsRequest,\n  ListDraftPostsResponse,\n  ListValue,\n  MapData,\n  MapSettings,\n  MapType,\n  MarkPostAsInModerationRequest,\n  MarkPostAsInModerationResponse,\n  MaskedDraftPosts,\n  Media,\n  MediaMediaOneOf,\n  MentionData,\n  MessageEnvelope,\n  MetaData,\n  Metadata,\n  ModerationDetails,\n  ModerationStatusStatus,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  NodeType,\n  NullValue,\n  Oembed,\n  Option,\n  OptionDesign,\n  OptionLayout,\n  OrderedListData,\n  Orientation,\n  Origin,\n  PDFSettings,\n  Paging,\n  PagingMetadataV2,\n  ParagraphData,\n  Permissions,\n  Placement,\n  PlatformQuery,\n  PlatformQueryPagingMethodOneOf,\n  PlaybackOptions,\n  PluginContainerData,\n  PluginContainerDataAlignment,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Poll,\n  PollData,\n  PollDataLayout,\n  PollDesign,\n  PollLayout,\n  PollLayoutDirection,\n  PollLayoutType,\n  PollSettings,\n  Position,\n  PostAmountByLanguage,\n  PricingData,\n  PublishDraftPostRequest,\n  PublishDraftPostResponse,\n  QueryDraftPostsOptions,\n  QueryDraftPostsRequest,\n  QueryDraftPostsResponse,\n  RejectDraftPostRequest,\n  RejectDraftPostResponse,\n  Rel,\n  RemoveFromTrashBinRequest,\n  RemoveFromTrashBinResponse,\n  Resizing,\n  RestoreFromTrashBinRequest,\n  RestoreFromTrashBinResponse,\n  RestoreInfo,\n  RevertToUnpublishedRequest,\n  RevertToUnpublishedResponse,\n  RibbonStyles,\n  RichContent,\n  SeoSchema,\n  Settings,\n  SortOrder,\n  Sorting,\n  Source,\n  Spoiler,\n  SpoilerData,\n  Status,\n  Styles,\n  StylesBorder,\n  StylesPosition,\n  TableCellData,\n  TableData,\n  Tag,\n  Target,\n  TextAlignment,\n  TextData,\n  TextNodeStyle,\n  TextStyle,\n  Thumbnails,\n  ThumbnailsAlignment,\n  TotalDraftPosts,\n  TotalDraftPostsGroupingField,\n  TranslateCategoryRequest,\n  TranslateCategoryResponse,\n  TranslateDraftRequest,\n  TranslateDraftResponse,\n  Type,\n  UnpublishPostRequest,\n  UnpublishPostResponse,\n  UpdateDraftPost,\n  UpdateDraftPostContentRequest,\n  UpdateDraftPostContentResponse,\n  UpdateDraftPostLanguageRequest,\n  UpdateDraftPostLanguageResponse,\n  UpdateDraftPostOptions,\n  UpdateDraftPostRequest,\n  UpdateDraftPostResponse,\n  V1Media,\n  VerticalAlignment,\n  Video,\n  VideoData,\n  VideoResolution,\n  ViewMode,\n  ViewRole,\n  VoteRole,\n  WebhookIdentityType,\n  Width,\n  WidthType,\n  WixMedia,\n} from './blog-v3-draft-draft-posts.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixBlogV3Draft from './blog-v3-draft-draft-posts.http.js';\n// @ts-ignore\nimport { transformSDKImageToRESTImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformSDKVideoV2ToRESTVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';\nimport { transformRESTVideoV2ToSDKVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';\nimport { transformSDKVideoToRESTVideo } from '@wix/sdk-runtime/transformations/video';\nimport { transformRESTVideoToSDKVideo } from '@wix/sdk-runtime/transformations/video';\nimport { transformSDKPageURLToRESTPageURL } from '@wix/sdk-runtime/transformations/page-url';\nimport { transformRESTPageURLToSDKPageURL } from '@wix/sdk-runtime/transformations/page-url';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface DraftPost {\n  /**\n   * Draft post ID.\n   * @readonly\n   * @maxLength 38\n   */\n  _id?: string;\n  /**\n   * Draft post title.\n   * @maxLength 200\n   */\n  title?: string;\n  /**\n   * Draft post excerpt.\n   *\n   * If no excerpt has been manually set, an excerpt is automatically generated from the post's text.\n   * This can be retrieved using the `GENERATED_EXCERPT` fieldset.\n   * @maxLength 500\n   */\n  excerpt?: string | null;\n  /** Whether the draft post is marked as featured. */\n  featured?: boolean | null;\n  /**\n   * Category IDs of the draft post.\n   * @maxSize 10\n   * @maxLength 38\n   */\n  categoryIds?: string[];\n  /**\n   * Draft post owner's member ID.\n   * @format GUID\n   */\n  memberId?: string | null;\n  /**\n   * Hashtags in the post.\n   * @maxSize 100\n   * @maxLength 100\n   */\n  hashtags?: string[];\n  /** Whether commenting on the draft post is enabled. */\n  commentingEnabled?: boolean | null;\n  /**\n   * Estimated reading time of the draft post (calculated automatically).\n   * @readonly\n   */\n  minutesToRead?: number;\n  /** Image placed at the top of the blog page. */\n  heroImage?: string;\n  /**\n   * Tag IDs the draft post is tagged with.\n   * @maxSize 30\n   * @maxLength 38\n   */\n  tagIds?: string[];\n  /**\n   * IDs of posts related to this draft post.\n   * @maxSize 3\n   * @maxLength 38\n   */\n  relatedPostIds?: string[];\n  /**\n   * Pricing plan IDs. Only relevant if a post is assigned to a specific pricing plan. See the Pricing Plans API for more info.\n   * @maxSize 100\n   * @format GUID\n   */\n  pricingPlanIds?: string[];\n  /**\n   * ID of the draft post's translations.\n   *\n   * All translations of a single post share the same `translationId`.\n   * Available only if the [Multilingual](https://support.wix.com/en/article/wix-multilingual-an-overview) app is installed.\n   * @format GUID\n   */\n  translationId?: string | null;\n  /**\n   * Language the draft post is written in.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Draft Post rich content.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"image.gallery.video.audio.divider.linkButton.html.giphy.codeBlock.file.hashtag.lineSpacing.indent.link.textColor.textHighlight.heading.verticalEmbed.table.collapsibleList.poll\" exampleid=\"72c23a25-524f-4f70-a260-4a2777b6f5d5\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   */\n  richContent?: RichContent;\n  /**\n   * Status of the draft post.\n   * @readonly\n   */\n  status?: StatusWithLiterals;\n  /** Details of the draft post in review. Only relevant to posts submitted by guest writers. */\n  moderationDetails?: ModerationDetails;\n  /**\n   * Indicates if there are changes made to the draft post that have not yet been published.\n   * @readonly\n   */\n  hasUnpublishedChanges?: boolean;\n  /**\n   * Date the draft post was last edited.\n   * @readonly\n   */\n  editedDate?: Date | null;\n  /**\n   * Date the draft post is scheduled to be published.\n   * @readonly\n   */\n  scheduledPublishDate?: Date | null;\n  /** Date the post was first published. */\n  firstPublishedDate?: Date | null;\n  /** SEO data. */\n  seoData?: SeoSchema;\n  /**\n   * Draft post URL preview. What the URL will look like once the post is published.\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Date the draft post was first created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * SEO slug.\n   * @maxLength 100\n   */\n  seoSlug?: string | null;\n  /** Post cover media. */\n  media?: Media;\n  /** Number of paragraphs to display in a paid content preview for non-paying users. */\n  previewTextParagraph?: number | null;\n}\n\nexport interface CoverMedia extends CoverMediaMediaOneOf {\n  /** Image url. */\n  image?: string;\n  /** Video url. */\n  video?: string;\n  /**\n   * Is cover media enabled.\n   * Selected by user whether to display cover media on the feed\n   * @deprecated Is cover media enabled.\n   * Selected by user whether to display cover media on the feed\n   * @replacedBy displayed\n   * @targetRemovalDate 2024-06-30\n   */\n  enabled?: boolean;\n  /** Whether cover media is displayed. */\n  displayed?: boolean;\n  /** Whether cover media is custom. If `false` the cover image is set to the first media item that appears in the content. */\n  custom?: boolean;\n  /**\n   * Alternative text is a short phrase that describes what the image depicts.\n   *\n   * The alternative text is used:\n   * + If the browser cannot display the image.\n   * + If the user is utilizing a screen reader.\n   * + By search engines to understand what images are on a site.\n   * @minLength 1\n   * @maxLength 1000\n   */\n  altText?: string | null;\n}\n\n/** @oneof */\nexport interface CoverMediaMediaOneOf {\n  /** Image url. */\n  image?: string;\n  /** Video url. */\n  video?: string;\n}\n\nexport interface FocalPoint {\n  /** X-coordinate of the focal point. */\n  x?: number;\n  /** Y-coordinate of the focal point. */\n  y?: number;\n  /** crop by height */\n  height?: number | null;\n  /** crop by width */\n  width?: number | null;\n}\n\nexport enum Origin {\n  UNKNOWN = 'UNKNOWN',\n  /** Changed by admin */\n  ADMIN = 'ADMIN',\n  /** Categories were changed */\n  ADD_CATEGORIES = 'ADD_CATEGORIES',\n  /** Saved automatically */\n  AUTO_SAVE = 'AUTO_SAVE',\n  /** Copied from template */\n  COPY_TEMPLATE = 'COPY_TEMPLATE',\n  /** Imported */\n  IMPORT = 'IMPORT',\n  /** Imported in bulk */\n  IMPORT_BULK = 'IMPORT_BULK',\n  /** Imported with html import */\n  IMPORT_HTML = 'IMPORT_HTML',\n  /** Patch import */\n  IMPORT_PATCH = 'IMPORT_PATCH',\n  /** Changed language */\n  LANGUAGE_CHANGE = 'LANGUAGE_CHANGE',\n  /** Saved manually */\n  MANUAL_SAVE = 'MANUAL_SAVE',\n  /** Affected by migration */\n  MIGRATION = 'MIGRATION',\n  /** Affected by moderation */\n  MODERATION = 'MODERATION',\n  /** Moved to trash */\n  MOVE_TO_TRASH = 'MOVE_TO_TRASH',\n  /** Pricing plans were changed */\n  PRICING_PLANS_CHANGE = 'PRICING_PLANS_CHANGE',\n  /** Was provisioned */\n  PROVISION = 'PROVISION',\n  /** Was published */\n  PUBLISH = 'PUBLISH',\n  /** Owner was reassigned */\n  REASSIGN_OWNER = 'REASSIGN_OWNER',\n  /** Was reblogged */\n  REBLOG = 'REBLOG',\n  /** Was restored */\n  RESTORE = 'RESTORE',\n  /** Reverted to draft */\n  REVERT_TO_DRAFT = 'REVERT_TO_DRAFT',\n  /** Was translated */\n  TRANSLATION = 'TRANSLATION',\n  /** Was unpublished */\n  UNPUBLISH = 'UNPUBLISH',\n  /** Was unscheduled */\n  UNSCHEDULE = 'UNSCHEDULE',\n  /** New edit session started which updated editing_session_id id */\n  NEW_EDIT_SESSION = 'NEW_EDIT_SESSION',\n  /** Was scheduled by Later */\n  SCHEDULING_SERVICE_SCHEDULE = 'SCHEDULING_SERVICE_SCHEDULE',\n  /** Was unscheduled by Later */\n  SCHEDULING_SERVICE_UNSCHEDULE = 'SCHEDULING_SERVICE_UNSCHEDULE',\n  /** Was published by Later */\n  SCHEDULING_SERVICE_PUBLISH = 'SCHEDULING_SERVICE_PUBLISH',\n  /** Was scheduled */\n  SCHEDULE = 'SCHEDULE',\n  /** Was removed from moderation */\n  REMOVE_FROM_MODERATION = 'REMOVE_FROM_MODERATION',\n  /** Was rejected from moderation */\n  REJECT_FROM_MODERATION = 'REJECT_FROM_MODERATION',\n  /** Was approved in moderation */\n  APPROVE_IN_MODERATION = 'APPROVE_IN_MODERATION',\n  /** Tag was deleted */\n  DELETE_TAG = 'DELETE_TAG',\n  /** Post was pinned */\n  PIN = 'PIN',\n  /** Post was unpinned */\n  UNPIN = 'UNPIN',\n  /** Saved automatically by AI tool. */\n  AI_AUTO_SAVE = 'AI_AUTO_SAVE',\n}\n\n/** @enumType */\nexport type OriginWithLiterals =\n  | Origin\n  | 'UNKNOWN'\n  | 'ADMIN'\n  | 'ADD_CATEGORIES'\n  | 'AUTO_SAVE'\n  | 'COPY_TEMPLATE'\n  | 'IMPORT'\n  | 'IMPORT_BULK'\n  | 'IMPORT_HTML'\n  | 'IMPORT_PATCH'\n  | 'LANGUAGE_CHANGE'\n  | 'MANUAL_SAVE'\n  | 'MIGRATION'\n  | 'MODERATION'\n  | 'MOVE_TO_TRASH'\n  | 'PRICING_PLANS_CHANGE'\n  | 'PROVISION'\n  | 'PUBLISH'\n  | 'REASSIGN_OWNER'\n  | 'REBLOG'\n  | 'RESTORE'\n  | 'REVERT_TO_DRAFT'\n  | 'TRANSLATION'\n  | 'UNPUBLISH'\n  | 'UNSCHEDULE'\n  | 'NEW_EDIT_SESSION'\n  | 'SCHEDULING_SERVICE_SCHEDULE'\n  | 'SCHEDULING_SERVICE_UNSCHEDULE'\n  | 'SCHEDULING_SERVICE_PUBLISH'\n  | 'SCHEDULE'\n  | 'REMOVE_FROM_MODERATION'\n  | 'REJECT_FROM_MODERATION'\n  | 'APPROVE_IN_MODERATION'\n  | 'DELETE_TAG'\n  | 'PIN'\n  | 'UNPIN'\n  | 'AI_AUTO_SAVE';\n\nexport interface RichContent {\n  /** Node objects representing a rich content document. */\n  nodes?: Node[];\n  /** Object metadata. */\n  metadata?: Metadata;\n  /** Global styling for header, paragraph, block quote, and code block nodes in the object. */\n  documentStyle?: DocumentStyle;\n}\n\nexport interface Node extends NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n  /** Node type. Use `APP_EMBED` for nodes that embed content from other Wix apps. Use `EMBED` to embed content in [oEmbed](https://oembed.com/) format. */\n  type?: NodeTypeWithLiterals;\n  /** Node ID. */\n  id?: string;\n  /** A list of child nodes. */\n  nodes?: Node[];\n  /** Padding and background color styling for the node. */\n  style?: NodeStyle;\n}\n\n/** @oneof */\nexport interface NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n}\n\nexport enum NodeType {\n  PARAGRAPH = 'PARAGRAPH',\n  TEXT = 'TEXT',\n  HEADING = 'HEADING',\n  BULLETED_LIST = 'BULLETED_LIST',\n  ORDERED_LIST = 'ORDERED_LIST',\n  LIST_ITEM = 'LIST_ITEM',\n  BLOCKQUOTE = 'BLOCKQUOTE',\n  CODE_BLOCK = 'CODE_BLOCK',\n  VIDEO = 'VIDEO',\n  DIVIDER = 'DIVIDER',\n  FILE = 'FILE',\n  GALLERY = 'GALLERY',\n  GIF = 'GIF',\n  HTML = 'HTML',\n  IMAGE = 'IMAGE',\n  LINK_PREVIEW = 'LINK_PREVIEW',\n  /** @deprecated */\n  MAP = 'MAP',\n  POLL = 'POLL',\n  APP_EMBED = 'APP_EMBED',\n  BUTTON = 'BUTTON',\n  COLLAPSIBLE_LIST = 'COLLAPSIBLE_LIST',\n  TABLE = 'TABLE',\n  EMBED = 'EMBED',\n  COLLAPSIBLE_ITEM = 'COLLAPSIBLE_ITEM',\n  COLLAPSIBLE_ITEM_TITLE = 'COLLAPSIBLE_ITEM_TITLE',\n  COLLAPSIBLE_ITEM_BODY = 'COLLAPSIBLE_ITEM_BODY',\n  TABLE_CELL = 'TABLE_CELL',\n  TABLE_ROW = 'TABLE_ROW',\n  EXTERNAL = 'EXTERNAL',\n  AUDIO = 'AUDIO',\n  CAPTION = 'CAPTION',\n  LAYOUT = 'LAYOUT',\n  LAYOUT_CELL = 'LAYOUT_CELL',\n}\n\n/** @enumType */\nexport type NodeTypeWithLiterals =\n  | NodeType\n  | 'PARAGRAPH'\n  | 'TEXT'\n  | 'HEADING'\n  | 'BULLETED_LIST'\n  | 'ORDERED_LIST'\n  | 'LIST_ITEM'\n  | 'BLOCKQUOTE'\n  | 'CODE_BLOCK'\n  | 'VIDEO'\n  | 'DIVIDER'\n  | 'FILE'\n  | 'GALLERY'\n  | 'GIF'\n  | 'HTML'\n  | 'IMAGE'\n  | 'LINK_PREVIEW'\n  | 'MAP'\n  | 'POLL'\n  | 'APP_EMBED'\n  | 'BUTTON'\n  | 'COLLAPSIBLE_LIST'\n  | 'TABLE'\n  | 'EMBED'\n  | 'COLLAPSIBLE_ITEM'\n  | 'COLLAPSIBLE_ITEM_TITLE'\n  | 'COLLAPSIBLE_ITEM_BODY'\n  | 'TABLE_CELL'\n  | 'TABLE_ROW'\n  | 'EXTERNAL'\n  | 'AUDIO'\n  | 'CAPTION'\n  | 'LAYOUT'\n  | 'LAYOUT_CELL';\n\nexport interface NodeStyle {\n  /** The top padding value in pixels. */\n  paddingTop?: string | null;\n  /** The bottom padding value in pixels. */\n  paddingBottom?: string | null;\n  /** The background color as a hexadecimal value. */\n  backgroundColor?: string | null;\n}\n\nexport interface ButtonData {\n  /** Styling for the button's container. */\n  containerData?: PluginContainerData;\n  /** The button type. */\n  type?: ButtonDataTypeWithLiterals;\n  /** Styling for the button. */\n  styles?: Styles;\n  /** The text to display on the button. */\n  text?: string | null;\n  /** Button link details. */\n  link?: Link;\n}\n\nexport interface Border {\n  /**\n   * Deprecated: Use `borderWidth` in `styles` instead.\n   * @deprecated\n   */\n  width?: number | null;\n  /**\n   * Deprecated: Use `borderRadius` in `styles` instead.\n   * @deprecated\n   */\n  radius?: number | null;\n}\n\nexport interface Colors {\n  /**\n   * Deprecated: Use `textColor` in `styles` instead.\n   * @deprecated\n   */\n  text?: string | null;\n  /**\n   * Deprecated: Use `borderColor` in `styles` instead.\n   * @deprecated\n   */\n  border?: string | null;\n  /**\n   * Deprecated: Use `backgroundColor` in `styles` instead.\n   * @deprecated\n   */\n  background?: string | null;\n}\n\nexport interface PluginContainerData {\n  /** The width of the node when it's displayed. */\n  width?: PluginContainerDataWidth;\n  /** The node's alignment within its container. */\n  alignment?: PluginContainerDataAlignmentWithLiterals;\n  /** Spoiler cover settings for the node. */\n  spoiler?: Spoiler;\n  /** The height of the node when it's displayed. */\n  height?: Height;\n  /** Sets whether text should wrap around this node when it's displayed. If `textWrap` is `false`, the node takes up the width of its container. Defaults to `true` for all node types except 'DIVIVDER' where it defaults to `false`. */\n  textWrap?: boolean | null;\n}\n\nexport enum WidthType {\n  /** Width matches the content width */\n  CONTENT = 'CONTENT',\n  /** Small Width */\n  SMALL = 'SMALL',\n  /** Width will match the original asset width */\n  ORIGINAL = 'ORIGINAL',\n  /** coast-to-coast display */\n  FULL_WIDTH = 'FULL_WIDTH',\n}\n\n/** @enumType */\nexport type WidthTypeWithLiterals =\n  | WidthType\n  | 'CONTENT'\n  | 'SMALL'\n  | 'ORIGINAL'\n  | 'FULL_WIDTH';\n\nexport interface PluginContainerDataWidth\n  extends PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\n/** @oneof */\nexport interface PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\nexport enum PluginContainerDataAlignment {\n  /** Center Alignment */\n  CENTER = 'CENTER',\n  /** Left Alignment */\n  LEFT = 'LEFT',\n  /** Right Alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type PluginContainerDataAlignmentWithLiterals =\n  | PluginContainerDataAlignment\n  | 'CENTER'\n  | 'LEFT'\n  | 'RIGHT';\n\nexport interface Spoiler {\n  /** Sets whether the spoiler cover is enabled for this node. Defaults to `false`. */\n  enabled?: boolean | null;\n  /** The description displayed on top of the spoiler cover. */\n  description?: string | null;\n  /** The text for the button used to remove the spoiler cover. */\n  buttonText?: string | null;\n}\n\nexport interface Height {\n  /** A custom height value in pixels. */\n  custom?: string | null;\n}\n\nexport enum ButtonDataType {\n  /** Regular link button */\n  LINK = 'LINK',\n  /** Triggers custom action that is defined in plugin configuration by the consumer */\n  ACTION = 'ACTION',\n}\n\n/** @enumType */\nexport type ButtonDataTypeWithLiterals = ButtonDataType | 'LINK' | 'ACTION';\n\nexport interface Styles {\n  /**\n   * Deprecated: Use `borderWidth` and `borderRadius` instead.\n   * @deprecated\n   */\n  border?: Border;\n  /**\n   * Deprecated: Use `textColor`, `borderColor` and `backgroundColor` instead.\n   * @deprecated\n   */\n  colors?: Colors;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /**\n   * Deprecated: Use `borderWidth` for normal/hover states instead.\n   * @deprecated\n   */\n  borderWidthHover?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /**\n   * Border color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  borderColorHover?: string | null;\n  /**\n   * Text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n  /**\n   * Text color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  textColorHover?: string | null;\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Background color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  backgroundColorHover?: string | null;\n  /** Button size option, one of `SMALL`, `MEDIUM` or `LARGE`. Defaults to `MEDIUM`. */\n  buttonSize?: string | null;\n}\n\nexport interface Link extends LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n  /**\n   * he HTML `target` attribute value for the link. This property defines where the linked document opens as follows:\n   * `SELF` - Default. Opens the linked document in the same frame as the link.\n   * `BLANK` - Opens the linked document in a new browser tab or window.\n   * `PARENT` - Opens the linked document in the link's parent frame.\n   * `TOP` - Opens the linked document in the full body of the link's browser tab or window.\n   */\n  target?: TargetWithLiterals;\n  /** The HTML `rel` attribute value for the link. This object specifies the relationship between the current document and the linked document. */\n  rel?: Rel;\n  /** A serialized object used for a custom or external link panel. */\n  customData?: string | null;\n}\n\n/** @oneof */\nexport interface LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n}\n\nexport enum Target {\n  /** Opens the linked document in the same frame as it was clicked (this is default) */\n  SELF = 'SELF',\n  /** Opens the linked document in a new window or tab */\n  BLANK = 'BLANK',\n  /** Opens the linked document in the parent frame */\n  PARENT = 'PARENT',\n  /** Opens the linked document in the full body of the window */\n  TOP = 'TOP',\n}\n\n/** @enumType */\nexport type TargetWithLiterals = Target | 'SELF' | 'BLANK' | 'PARENT' | 'TOP';\n\nexport interface Rel {\n  /** Indicates to search engine crawlers not to follow the link. Defaults to `false`. */\n  nofollow?: boolean | null;\n  /** Indicates to search engine crawlers that the link is a paid placement such as sponsored content or an advertisement. Defaults to `false`. */\n  sponsored?: boolean | null;\n  /** Indicates that this link is user-generated content and isn't necessarily trusted or endorsed by the page’s author. For example, a link in a fourm post. Defaults to `false`. */\n  ugc?: boolean | null;\n  /** Indicates that this link protect referral information from being passed to the target website. */\n  noreferrer?: boolean | null;\n}\n\nexport interface CodeBlockData {\n  /** Styling for the code block's text. */\n  textStyle?: TextStyle;\n}\n\nexport interface TextStyle {\n  /** Text alignment. Defaults to `AUTO`. */\n  textAlignment?: TextAlignmentWithLiterals;\n  /** A CSS `line-height` value for the text expressed as a ratio relative to the font size. For example, if the font size is 20px, a `lineHeight` value of `'1.5'`` results in a line height of 30px. */\n  lineHeight?: string | null;\n}\n\nexport enum TextAlignment {\n  /** browser default, eqivalent to `initial` */\n  AUTO = 'AUTO',\n  /** Left align */\n  LEFT = 'LEFT',\n  /** Right align */\n  RIGHT = 'RIGHT',\n  /** Center align */\n  CENTER = 'CENTER',\n  /** Text is spaced to line up its left and right edges to the left and right edges of the line box, except for the last line */\n  JUSTIFY = 'JUSTIFY',\n}\n\n/** @enumType */\nexport type TextAlignmentWithLiterals =\n  | TextAlignment\n  | 'AUTO'\n  | 'LEFT'\n  | 'RIGHT'\n  | 'CENTER'\n  | 'JUSTIFY';\n\nexport interface DividerData {\n  /** Styling for the divider's container. */\n  containerData?: PluginContainerData;\n  /** Divider line style. */\n  lineStyle?: LineStyleWithLiterals;\n  /** Divider width. */\n  width?: WidthWithLiterals;\n  /** Divider alignment. */\n  alignment?: DividerDataAlignmentWithLiterals;\n}\n\nexport enum LineStyle {\n  /** Single Line */\n  SINGLE = 'SINGLE',\n  /** Double Line */\n  DOUBLE = 'DOUBLE',\n  /** Dashed Line */\n  DASHED = 'DASHED',\n  /** Dotted Line */\n  DOTTED = 'DOTTED',\n}\n\n/** @enumType */\nexport type LineStyleWithLiterals =\n  | LineStyle\n  | 'SINGLE'\n  | 'DOUBLE'\n  | 'DASHED'\n  | 'DOTTED';\n\nexport enum Width {\n  /** Large line */\n  LARGE = 'LARGE',\n  /** Medium line */\n  MEDIUM = 'MEDIUM',\n  /** Small line */\n  SMALL = 'SMALL',\n}\n\n/** @enumType */\nexport type WidthWithLiterals = Width | 'LARGE' | 'MEDIUM' | 'SMALL';\n\nexport enum DividerDataAlignment {\n  /** Center alignment */\n  CENTER = 'CENTER',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type DividerDataAlignmentWithLiterals =\n  | DividerDataAlignment\n  | 'CENTER'\n  | 'LEFT'\n  | 'RIGHT';\n\nexport interface FileData {\n  /** Styling for the file's container. */\n  containerData?: PluginContainerData;\n  /** The source for the file's data. */\n  src?: FileSource;\n  /** File name. */\n  name?: string | null;\n  /** File type. */\n  type?: string | null;\n  /**\n   * Use `sizeInKb` instead.\n   * @deprecated\n   */\n  size?: number | null;\n  /** Settings for PDF files. */\n  pdfSettings?: PDFSettings;\n  /** File MIME type. */\n  mimeType?: string | null;\n  /** File path. */\n  path?: string | null;\n  /** File size in KB. */\n  sizeInKb?: string | null;\n}\n\nexport enum ViewMode {\n  /** No PDF view */\n  NONE = 'NONE',\n  /** Full PDF view */\n  FULL = 'FULL',\n  /** Mini PDF view */\n  MINI = 'MINI',\n}\n\n/** @enumType */\nexport type ViewModeWithLiterals = ViewMode | 'NONE' | 'FULL' | 'MINI';\n\nexport interface FileSource extends FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n  /** Indicates whether the file's source is private. Defaults to `false`. */\n  private?: boolean | null;\n}\n\n/** @oneof */\nexport interface FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n}\n\nexport interface PDFSettings {\n  /**\n   * PDF view mode. One of the following:\n   * `NONE` : The PDF isn't displayed.\n   * `FULL` : A full page view of the PDF is displayed.\n   * `MINI` : A mini view of the PDF is displayed.\n   */\n  viewMode?: ViewModeWithLiterals;\n  /** Sets whether the PDF download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the PDF print button is disabled. Defaults to `false`. */\n  disablePrint?: boolean | null;\n}\n\nexport interface GalleryData {\n  /** Styling for the gallery's container. */\n  containerData?: PluginContainerData;\n  /** The items in the gallery. */\n  items?: Item[];\n  /** Options for defining the gallery's appearance. */\n  options?: GalleryOptions;\n  /** Sets whether the gallery's expand button is disabled. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Sets whether the gallery's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n}\n\nexport interface V1Media {\n  /** The source for the media's data. */\n  src?: FileSource;\n  /** Media width in pixels. */\n  width?: number | null;\n  /** Media height in pixels. */\n  height?: number | null;\n  /** Media duration in seconds. Only relevant for audio and video files. */\n  duration?: number | null;\n}\n\nexport interface Image {\n  /** Image file details. */\n  media?: V1Media;\n  /** Link details for images that are links. */\n  link?: Link;\n}\n\nexport interface Video {\n  /** Video file details. */\n  media?: V1Media;\n  /** Video thumbnail file details. */\n  thumbnail?: V1Media;\n}\n\nexport interface Item extends ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n  /** Item title. */\n  title?: string | null;\n  /** Item's alternative text. */\n  altText?: string | null;\n}\n\n/** @oneof */\nexport interface ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n}\n\nexport interface GalleryOptions {\n  /** Gallery layout. */\n  layout?: GalleryOptionsLayout;\n  /** Styling for gallery items. */\n  item?: ItemStyle;\n  /** Styling for gallery thumbnail images. */\n  thumbnails?: Thumbnails;\n}\n\nexport enum LayoutType {\n  /** Collage type */\n  COLLAGE = 'COLLAGE',\n  /** Masonry type */\n  MASONRY = 'MASONRY',\n  /** Grid type */\n  GRID = 'GRID',\n  /** Thumbnail type */\n  THUMBNAIL = 'THUMBNAIL',\n  /** Slider type */\n  SLIDER = 'SLIDER',\n  /** Slideshow type */\n  SLIDESHOW = 'SLIDESHOW',\n  /** Panorama type */\n  PANORAMA = 'PANORAMA',\n  /** Column type */\n  COLUMN = 'COLUMN',\n  /** Magic type */\n  MAGIC = 'MAGIC',\n  /** Fullsize images type */\n  FULLSIZE = 'FULLSIZE',\n}\n\n/** @enumType */\nexport type LayoutTypeWithLiterals =\n  | LayoutType\n  | 'COLLAGE'\n  | 'MASONRY'\n  | 'GRID'\n  | 'THUMBNAIL'\n  | 'SLIDER'\n  | 'SLIDESHOW'\n  | 'PANORAMA'\n  | 'COLUMN'\n  | 'MAGIC'\n  | 'FULLSIZE';\n\nexport enum Orientation {\n  /** Rows Orientation */\n  ROWS = 'ROWS',\n  /** Columns Orientation */\n  COLUMNS = 'COLUMNS',\n}\n\n/** @enumType */\nexport type OrientationWithLiterals = Orientation | 'ROWS' | 'COLUMNS';\n\nexport enum Crop {\n  /** Crop to fill */\n  FILL = 'FILL',\n  /** Crop to fit */\n  FIT = 'FIT',\n}\n\n/** @enumType */\nexport type CropWithLiterals = Crop | 'FILL' | 'FIT';\n\nexport enum ThumbnailsAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** No thumbnail */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type ThumbnailsAlignmentWithLiterals =\n  | ThumbnailsAlignment\n  | 'TOP'\n  | 'RIGHT'\n  | 'BOTTOM'\n  | 'LEFT'\n  | 'NONE';\n\nexport interface GalleryOptionsLayout {\n  /** Gallery layout type. */\n  type?: LayoutTypeWithLiterals;\n  /** Sets whether horizontal scroll is enabled. Defaults to `true` unless the layout `type` is set to `GRID` or `COLLAGE`. */\n  horizontalScroll?: boolean | null;\n  /** Gallery orientation. */\n  orientation?: OrientationWithLiterals;\n  /** The number of columns to display on full size screens. */\n  numberOfColumns?: number | null;\n  /** The number of columns to display on mobile screens. */\n  mobileNumberOfColumns?: number | null;\n}\n\nexport interface ItemStyle {\n  /** Desirable dimension for each item in pixels (behvaior changes according to gallery type) */\n  targetSize?: number | null;\n  /** Item ratio */\n  ratio?: number | null;\n  /** Sets how item images are cropped. */\n  crop?: CropWithLiterals;\n  /** The spacing between items in pixels. */\n  spacing?: number | null;\n}\n\nexport interface Thumbnails {\n  /** Thumbnail alignment. */\n  placement?: ThumbnailsAlignmentWithLiterals;\n  /** Spacing between thumbnails in pixels. */\n  spacing?: number | null;\n}\n\nexport interface GIFData {\n  /** Styling for the GIF's container. */\n  containerData?: PluginContainerData;\n  /** The source of the full size GIF. */\n  original?: GIF;\n  /** The source of the downsized GIF. */\n  downsized?: GIF;\n  /** Height in pixels. */\n  height?: number;\n  /** Width in pixels. */\n  width?: number;\n  /** Type of GIF (Sticker or NORMAL). Defaults to `NORMAL`. */\n  gifType?: GIFTypeWithLiterals;\n}\n\nexport interface GIF {\n  /**\n   * GIF format URL.\n   * @format WEB_URL\n   */\n  gif?: string | null;\n  /**\n   * MP4 format URL.\n   * @format WEB_URL\n   */\n  mp4?: string | null;\n  /**\n   * Thumbnail URL.\n   * @format WEB_URL\n   */\n  still?: string | null;\n}\n\nexport enum GIFType {\n  NORMAL = 'NORMAL',\n  STICKER = 'STICKER',\n}\n\n/** @enumType */\nexport type GIFTypeWithLiterals = GIFType | 'NORMAL' | 'STICKER';\n\nexport interface HeadingData {\n  /** Heading level from 1-6. */\n  level?: number;\n  /** Styling for the heading text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n}\n\nexport interface HTMLData extends HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n  /** Styling for the HTML node's container. Height property is irrelevant for HTML embeds when autoHeight is set to `true`. */\n  containerData?: PluginContainerData;\n  /** The type of HTML code. */\n  source?: SourceWithLiterals;\n  /** If container height is aligned with its content height. Defaults to `true`. */\n  autoHeight?: boolean | null;\n}\n\n/** @oneof */\nexport interface HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n}\n\nexport enum Source {\n  HTML = 'HTML',\n  ADSENSE = 'ADSENSE',\n}\n\n/** @enumType */\nexport type SourceWithLiterals = Source | 'HTML' | 'ADSENSE';\n\nexport interface ImageData {\n  /** Styling for the image's container. */\n  containerData?: PluginContainerData;\n  /** Image file details. */\n  image?: V1Media;\n  /** Link details for images that are links. */\n  link?: Link;\n  /** Sets whether the image expands to full screen when clicked. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Image's alternative text. */\n  altText?: string | null;\n  /**\n   * Deprecated: use Caption node instead.\n   * @deprecated\n   */\n  caption?: string | null;\n  /** Sets whether the image's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the image is decorative and does not need an explanation. Defaults to `false`. */\n  decorative?: boolean | null;\n  /** Styling for the image. */\n  styles?: ImageDataStyles;\n}\n\nexport interface StylesBorder {\n  /** Border width in pixels. */\n  width?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** Border radius in pixels. */\n  radius?: number | null;\n}\n\nexport interface ImageDataStyles {\n  /** Border attributes. */\n  border?: StylesBorder;\n}\n\nexport interface LinkPreviewData {\n  /** Styling for the link preview's container. */\n  containerData?: PluginContainerData;\n  /** Link details. */\n  link?: Link;\n  /** Preview title. */\n  title?: string | null;\n  /** Preview thumbnail URL. */\n  thumbnailUrl?: string | null;\n  /** Preview description. */\n  description?: string | null;\n  /** The preview content as HTML. */\n  html?: string | null;\n  /** Styling for the link preview. */\n  styles?: LinkPreviewDataStyles;\n}\n\nexport enum StylesPosition {\n  /** Thumbnail positioned at the start (left in LTR layouts, right in RTL layouts) */\n  START = 'START',\n  /** Thumbnail positioned at the end (right in LTR layouts, left in RTL layouts) */\n  END = 'END',\n  /** Thumbnail positioned at the top */\n  TOP = 'TOP',\n  /** Thumbnail hidden and not displayed */\n  HIDDEN = 'HIDDEN',\n}\n\n/** @enumType */\nexport type StylesPositionWithLiterals =\n  | StylesPosition\n  | 'START'\n  | 'END'\n  | 'TOP'\n  | 'HIDDEN';\n\nexport interface LinkPreviewDataStyles {\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Title color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  titleColor?: string | null;\n  /**\n   * Subtitle color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  subtitleColor?: string | null;\n  /**\n   * Link color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  linkColor?: string | null;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Position of thumbnail. Defaults to `START`. */\n  thumbnailPosition?: StylesPositionWithLiterals;\n}\n\nexport interface MapData {\n  /** Styling for the map's container. */\n  containerData?: PluginContainerData;\n  /** Map settings. */\n  mapSettings?: MapSettings;\n}\n\nexport interface MapSettings {\n  /** The address to display on the map. */\n  address?: string | null;\n  /** Sets whether the map is draggable. */\n  draggable?: boolean | null;\n  /** Sets whether the location marker is visible. */\n  marker?: boolean | null;\n  /** Sets whether street view control is enabled. */\n  streetViewControl?: boolean | null;\n  /** Sets whether zoom control is enabled. */\n  zoomControl?: boolean | null;\n  /** Location latitude. */\n  lat?: number | null;\n  /** Location longitude. */\n  lng?: number | null;\n  /** Location name. */\n  locationName?: string | null;\n  /** Sets whether view mode control is enabled. */\n  viewModeControl?: boolean | null;\n  /** Initial zoom value. */\n  initialZoom?: number | null;\n  /** Map type. `HYBRID` is a combination of the `ROADMAP` and `SATELLITE` map types. */\n  mapType?: MapTypeWithLiterals;\n}\n\nexport enum MapType {\n  /** Roadmap map type */\n  ROADMAP = 'ROADMAP',\n  /** Satellite map type */\n  SATELITE = 'SATELITE',\n  /** Hybrid map type */\n  HYBRID = 'HYBRID',\n  /** Terrain map type */\n  TERRAIN = 'TERRAIN',\n}\n\n/** @enumType */\nexport type MapTypeWithLiterals =\n  | MapType\n  | 'ROADMAP'\n  | 'SATELITE'\n  | 'HYBRID'\n  | 'TERRAIN';\n\nexport interface ParagraphData {\n  /** Styling for the paragraph text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n  /** Paragraph level */\n  level?: number | null;\n}\n\nexport interface PollData {\n  /** Styling for the poll's container. */\n  containerData?: PluginContainerData;\n  /** Poll data. */\n  poll?: Poll;\n  /** Layout settings for the poll and voting options. */\n  layout?: PollDataLayout;\n  /** Styling for the poll and voting options. */\n  design?: Design;\n}\n\nexport enum ViewRole {\n  /** Only Poll creator can view the results */\n  CREATOR = 'CREATOR',\n  /** Anyone who voted can see the results */\n  VOTERS = 'VOTERS',\n  /** Anyone can see the results, even if one didn't vote */\n  EVERYONE = 'EVERYONE',\n}\n\n/** @enumType */\nexport type ViewRoleWithLiterals = ViewRole | 'CREATOR' | 'VOTERS' | 'EVERYONE';\n\nexport enum VoteRole {\n  /** Logged in member */\n  SITE_MEMBERS = 'SITE_MEMBERS',\n  /** Anyone */\n  ALL = 'ALL',\n}\n\n/** @enumType */\nexport type VoteRoleWithLiterals = VoteRole | 'SITE_MEMBERS' | 'ALL';\n\nexport interface Permissions {\n  /** Sets who can view the poll results. */\n  view?: ViewRoleWithLiterals;\n  /** Sets who can vote. */\n  vote?: VoteRoleWithLiterals;\n  /** Sets whether one voter can vote multiple times. Defaults to `false`. */\n  allowMultipleVotes?: boolean | null;\n}\n\nexport interface Option {\n  /** Option ID. */\n  id?: string | null;\n  /** Option title. */\n  title?: string | null;\n  /** The image displayed with the option. */\n  image?: V1Media;\n}\n\nexport interface PollSettings {\n  /** Permissions settings for voting. */\n  permissions?: Permissions;\n  /** Sets whether voters are displayed in the vote results. Defaults to `true`. */\n  showVoters?: boolean | null;\n  /** Sets whether the vote count is displayed. Defaults to `true`. */\n  showVotesCount?: boolean | null;\n}\n\nexport enum PollLayoutType {\n  /** List */\n  LIST = 'LIST',\n  /** Grid */\n  GRID = 'GRID',\n}\n\n/** @enumType */\nexport type PollLayoutTypeWithLiterals = PollLayoutType | 'LIST' | 'GRID';\n\nexport enum PollLayoutDirection {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type PollLayoutDirectionWithLiterals =\n  | PollLayoutDirection\n  | 'LTR'\n  | 'RTL';\n\nexport interface PollLayout {\n  /** The layout for displaying the voting options. */\n  type?: PollLayoutTypeWithLiterals;\n  /** The direction of the text displayed in the voting options. Text can be displayed either right-to-left or left-to-right. */\n  direction?: PollLayoutDirectionWithLiterals;\n  /** Sets whether to display the main poll image. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport interface OptionLayout {\n  /** Sets whether to display option images. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport enum BackgroundType {\n  /** Color background type */\n  COLOR = 'COLOR',\n  /** Image background type */\n  IMAGE = 'IMAGE',\n  /** Gradiant background type */\n  GRADIENT = 'GRADIENT',\n}\n\n/** @enumType */\nexport type BackgroundTypeWithLiterals =\n  | BackgroundType\n  | 'COLOR'\n  | 'IMAGE'\n  | 'GRADIENT';\n\nexport interface Gradient {\n  /** The gradient angle in degrees. */\n  angle?: number | null;\n  /**\n   * The start color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  startColor?: string | null;\n  /**\n   * The end color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  lastColor?: string | null;\n}\n\nexport interface Background extends BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: V1Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n  /** Background type. For each option, include the relevant details. */\n  type?: BackgroundTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: V1Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n}\n\nexport interface PollDesign {\n  /** Background styling. */\n  background?: Background;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface OptionDesign {\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface Poll {\n  /** Poll ID. */\n  id?: string | null;\n  /** Poll title. */\n  title?: string | null;\n  /** Poll creator ID. */\n  creatorId?: string | null;\n  /** Main poll image. */\n  image?: V1Media;\n  /** Voting options. */\n  options?: Option[];\n  /** The poll's permissions and display settings. */\n  settings?: PollSettings;\n}\n\nexport interface PollDataLayout {\n  /** Poll layout settings. */\n  poll?: PollLayout;\n  /** Voting otpions layout settings. */\n  options?: OptionLayout;\n}\n\nexport interface Design {\n  /** Styling for the poll. */\n  poll?: PollDesign;\n  /** Styling for voting options. */\n  options?: OptionDesign;\n}\n\nexport interface TextData {\n  /** The text to apply decorations to. */\n  text?: string;\n  /** The decorations to apply. */\n  decorations?: Decoration[];\n}\n\n/** Adds appearence changes to text */\nexport interface Decoration extends DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n  /** The type of decoration to apply. */\n  type?: DecorationTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n}\n\nexport enum DecorationType {\n  BOLD = 'BOLD',\n  ITALIC = 'ITALIC',\n  UNDERLINE = 'UNDERLINE',\n  SPOILER = 'SPOILER',\n  ANCHOR = 'ANCHOR',\n  MENTION = 'MENTION',\n  LINK = 'LINK',\n  COLOR = 'COLOR',\n  FONT_SIZE = 'FONT_SIZE',\n  EXTERNAL = 'EXTERNAL',\n  STRIKETHROUGH = 'STRIKETHROUGH',\n  SUPERSCRIPT = 'SUPERSCRIPT',\n  SUBSCRIPT = 'SUBSCRIPT',\n}\n\n/** @enumType */\nexport type DecorationTypeWithLiterals =\n  | DecorationType\n  | 'BOLD'\n  | 'ITALIC'\n  | 'UNDERLINE'\n  | 'SPOILER'\n  | 'ANCHOR'\n  | 'MENTION'\n  | 'LINK'\n  | 'COLOR'\n  | 'FONT_SIZE'\n  | 'EXTERNAL'\n  | 'STRIKETHROUGH'\n  | 'SUPERSCRIPT'\n  | 'SUBSCRIPT';\n\nexport interface AnchorData {\n  /** The target node's ID. */\n  anchor?: string;\n}\n\nexport interface ColorData {\n  /** The text's background color as a hexadecimal value. */\n  background?: string | null;\n  /** The text's foreground color as a hexadecimal value. */\n  foreground?: string | null;\n}\n\nexport interface LinkData {\n  /** Link details. */\n  link?: Link;\n}\n\nexport interface MentionData {\n  /** The mentioned user's name. */\n  name?: string;\n  /** The version of the user's name that appears after the `@` character in the mention. */\n  slug?: string;\n  /** Mentioned user's ID. */\n  id?: string | null;\n}\n\nexport interface FontSizeData {\n  /** The units used for the font size. */\n  unit?: FontTypeWithLiterals;\n  /** Font size value. */\n  value?: number | null;\n}\n\nexport enum FontType {\n  PX = 'PX',\n  EM = 'EM',\n}\n\n/** @enumType */\nexport type FontTypeWithLiterals = FontType | 'PX' | 'EM';\n\nexport interface SpoilerData {\n  /** Spoiler ID. */\n  id?: string | null;\n}\n\nexport interface AppEmbedData extends AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n  /** The type of Wix App content being embedded. */\n  type?: AppTypeWithLiterals;\n  /** The ID of the embedded content. */\n  itemId?: string | null;\n  /** The name of the embedded content. */\n  name?: string | null;\n  /**\n   * Deprecated: Use `image` instead.\n   * @deprecated\n   */\n  imageSrc?: string | null;\n  /** The URL for the embedded content. */\n  url?: string | null;\n  /** An image for the embedded content. */\n  image?: V1Media;\n  /** Whether to hide the image. */\n  hideImage?: boolean | null;\n  /** Whether to hide the title. */\n  hideTitle?: boolean | null;\n  /** Whether to hide the price. */\n  hidePrice?: boolean | null;\n  /** Whether to hide the description (Event and Booking). */\n  hideDescription?: boolean | null;\n  /** Whether to hide the date and time (Event). */\n  hideDateTime?: boolean | null;\n  /** Whether to hide the location (Event). */\n  hideLocation?: boolean | null;\n  /** Whether to hide the duration (Booking). */\n  hideDuration?: boolean | null;\n  /** Whether to hide the button. */\n  hideButton?: boolean | null;\n  /** Whether to hide the ribbon. */\n  hideRibbon?: boolean | null;\n  /** Button styling options. */\n  buttonStyles?: ButtonStyles;\n  /** Image styling options. */\n  imageStyles?: ImageStyles;\n  /** Ribbon styling options. */\n  ribbonStyles?: RibbonStyles;\n  /** Card styling options. */\n  cardStyles?: CardStyles;\n  /** Styling for the app embed's container. */\n  containerData?: PluginContainerData;\n  /** Pricing data for embedded Wix App content. */\n  pricingData?: PricingData;\n}\n\n/** @oneof */\nexport interface AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n}\n\nexport enum Position {\n  /** Image positioned at the start (left in LTR layouts, right in RTL layouts) */\n  START = 'START',\n  /** Image positioned at the end (right in LTR layouts, left in RTL layouts) */\n  END = 'END',\n  /** Image positioned at the top */\n  TOP = 'TOP',\n}\n\n/** @enumType */\nexport type PositionWithLiterals = Position | 'START' | 'END' | 'TOP';\n\nexport enum AspectRatio {\n  /** 1:1 aspect ratio */\n  SQUARE = 'SQUARE',\n  /** 16:9 aspect ratio */\n  RECTANGLE = 'RECTANGLE',\n}\n\n/** @enumType */\nexport type AspectRatioWithLiterals = AspectRatio | 'SQUARE' | 'RECTANGLE';\n\nexport enum Resizing {\n  /** Fill the container, may crop the image */\n  FILL = 'FILL',\n  /** Fit the image within the container */\n  FIT = 'FIT',\n}\n\n/** @enumType */\nexport type ResizingWithLiterals = Resizing | 'FILL' | 'FIT';\n\nexport enum Placement {\n  /** Ribbon placed on the image */\n  IMAGE = 'IMAGE',\n  /** Ribbon placed on the product information */\n  PRODUCT_INFO = 'PRODUCT_INFO',\n}\n\n/** @enumType */\nexport type PlacementWithLiterals = Placement | 'IMAGE' | 'PRODUCT_INFO';\n\nexport enum CardStylesType {\n  /** Card with visible border and background */\n  CONTAINED = 'CONTAINED',\n  /** Card without visible border */\n  FRAMELESS = 'FRAMELESS',\n}\n\n/** @enumType */\nexport type CardStylesTypeWithLiterals =\n  | CardStylesType\n  | 'CONTAINED'\n  | 'FRAMELESS';\n\nexport enum Alignment {\n  /** Content aligned to start (left in LTR layouts, right in RTL layouts) */\n  START = 'START',\n  /** Content centered */\n  CENTER = 'CENTER',\n  /** Content aligned to end (right in LTR layouts, left in RTL layouts) */\n  END = 'END',\n}\n\n/** @enumType */\nexport type AlignmentWithLiterals = Alignment | 'START' | 'CENTER' | 'END';\n\nexport enum Layout {\n  /** Elements stacked vertically */\n  STACKED = 'STACKED',\n  /** Elements arranged horizontally */\n  SIDE_BY_SIDE = 'SIDE_BY_SIDE',\n}\n\n/** @enumType */\nexport type LayoutWithLiterals = Layout | 'STACKED' | 'SIDE_BY_SIDE';\n\nexport enum AppType {\n  PRODUCT = 'PRODUCT',\n  EVENT = 'EVENT',\n  BOOKING = 'BOOKING',\n}\n\n/** @enumType */\nexport type AppTypeWithLiterals = AppType | 'PRODUCT' | 'EVENT' | 'BOOKING';\n\nexport interface BookingData {\n  /** Booking duration in minutes. */\n  durations?: string | null;\n}\n\nexport interface EventData {\n  /** Event schedule. */\n  scheduling?: string | null;\n  /** Event location. */\n  location?: string | null;\n}\n\nexport interface ButtonStyles {\n  /** Text to display on the button. */\n  buttonText?: string | null;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /**\n   * Text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Border color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  borderColorHover?: string | null;\n  /**\n   * Text color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  textColorHover?: string | null;\n  /**\n   * Background color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  backgroundColorHover?: string | null;\n  /** Button size option, one of `SMALL`, `MEDIUM` or `LARGE`. Defaults to `MEDIUM`. */\n  buttonSize?: string | null;\n}\n\nexport interface ImageStyles {\n  /** Whether to hide the image. */\n  hideImage?: boolean | null;\n  /** Position of image. Defaults to `START`. */\n  imagePosition?: PositionWithLiterals;\n  /** Aspect ratio for the image. Defaults to `SQUARE`. */\n  aspectRatio?: AspectRatioWithLiterals;\n  /** How the image should be resized. Defaults to `FILL`. */\n  resizing?: ResizingWithLiterals;\n  /**\n   * Image border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Image border width in pixels. */\n  borderWidth?: number | null;\n  /** Image border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface RibbonStyles {\n  /** Text to display on the ribbon. */\n  ribbonText?: string | null;\n  /**\n   * Ribbon background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Ribbon text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n  /**\n   * Ribbon border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Ribbon border width in pixels. */\n  borderWidth?: number | null;\n  /** Ribbon border radius in pixels. */\n  borderRadius?: number | null;\n  /** Placement of the ribbon. Defaults to `IMAGE`. */\n  ribbonPlacement?: PlacementWithLiterals;\n}\n\nexport interface CardStyles {\n  /**\n   * Card background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Card border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Card border width in pixels. */\n  borderWidth?: number | null;\n  /** Card border radius in pixels. */\n  borderRadius?: number | null;\n  /** Card type. Defaults to `CONTAINED`. */\n  type?: CardStylesTypeWithLiterals;\n  /** Content alignment. Defaults to `START`. */\n  alignment?: AlignmentWithLiterals;\n  /** Layout for title and price. Defaults to `STACKED`. */\n  titlePriceLayout?: LayoutWithLiterals;\n  /**\n   * Title text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  titleColor?: string | null;\n  /**\n   * Text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n}\n\nexport interface PricingData {\n  /**\n   * Minimum numeric price value as string (e.g., \"10.99\").\n   * @decimalValue options { maxScale:2 }\n   */\n  valueFrom?: string | null;\n  /**\n   * Maximum numeric price value as string (e.g., \"19.99\").\n   * @decimalValue options { maxScale:2 }\n   */\n  valueTo?: string | null;\n  /**\n   * Numeric price value as string after discount application (e.g., \"15.99\").\n   * @decimalValue options { maxScale:2 }\n   */\n  discountedValue?: string | null;\n  /**\n   * Currency of the value in ISO 4217 format (e.g., \"USD\", \"EUR\").\n   * @format CURRENCY\n   */\n  currency?: string | null;\n  /**\n   * Pricing plan ID.\n   * @format GUID\n   */\n  pricingPlanId?: string | null;\n}\n\nexport interface VideoData {\n  /** Styling for the video's container. */\n  containerData?: PluginContainerData;\n  /** Video details. */\n  video?: V1Media;\n  /** Video thumbnail details. */\n  thumbnail?: V1Media;\n  /** Sets whether the video's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Video title. */\n  title?: string | null;\n  /** Video options. */\n  options?: PlaybackOptions;\n}\n\nexport interface PlaybackOptions {\n  /** Sets whether the media will automatically start playing. */\n  autoPlay?: boolean | null;\n  /** Sets whether media's will be looped. */\n  playInLoop?: boolean | null;\n  /** Sets whether media's controls will be shown. */\n  showControls?: boolean | null;\n}\n\nexport interface EmbedData {\n  /** Styling for the oEmbed node's container. */\n  containerData?: PluginContainerData;\n  /** An [oEmbed](https://www.oembed.com) object. */\n  oembed?: Oembed;\n  /** Origin asset source. */\n  src?: string | null;\n}\n\nexport interface Oembed {\n  /** The resource type. */\n  type?: string | null;\n  /** The width of the resource specified in the `url` property in pixels. */\n  width?: number | null;\n  /** The height of the resource specified in the `url` property in pixels. */\n  height?: number | null;\n  /** Resource title. */\n  title?: string | null;\n  /** The source URL for the resource. */\n  url?: string | null;\n  /** HTML for embedding a video player. The HTML should have no padding or margins. */\n  html?: string | null;\n  /** The name of the author or owner of the resource. */\n  authorName?: string | null;\n  /** The URL for the author or owner of the resource. */\n  authorUrl?: string | null;\n  /** The name of the resource provider. */\n  providerName?: string | null;\n  /** The URL for the resource provider. */\n  providerUrl?: string | null;\n  /** The URL for a thumbnail image for the resource. If this property is defined, `thumbnailWidth` and `thumbnailHeight` must also be defined. */\n  thumbnailUrl?: string | null;\n  /** The width of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailHeight` must also be defined. */\n  thumbnailWidth?: string | null;\n  /** The height of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailWidth`must also be defined. */\n  thumbnailHeight?: string | null;\n  /** The URL for an embedded viedo. */\n  videoUrl?: string | null;\n  /** The oEmbed version number.  This value must be `1.0`. */\n  version?: string | null;\n}\n\nexport interface CollapsibleListData {\n  /** Styling for the collapsible list's container. */\n  containerData?: PluginContainerData;\n  /** If `true`, only one item can be expanded at a time. Defaults to `false`. */\n  expandOnlyOne?: boolean | null;\n  /** Sets which items are expanded when the page loads. */\n  initialExpandedItems?: InitialExpandedItemsWithLiterals;\n  /** The direction of the text in the list. Either left-to-right or right-to-left. */\n  direction?: DirectionWithLiterals;\n  /** If `true`, The collapsible item will appear in search results as an FAQ. */\n  isQapageData?: boolean | null;\n}\n\nexport enum InitialExpandedItems {\n  /** First item will be expended initally */\n  FIRST = 'FIRST',\n  /** All items will expended initally */\n  ALL = 'ALL',\n  /** All items collapsed initally */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type InitialExpandedItemsWithLiterals =\n  | InitialExpandedItems\n  | 'FIRST'\n  | 'ALL'\n  | 'NONE';\n\nexport enum Direction {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type DirectionWithLiterals = Direction | 'LTR' | 'RTL';\n\nexport interface TableData {\n  /** Styling for the table's container. */\n  containerData?: PluginContainerData;\n  /** The table's dimensions. */\n  dimensions?: Dimensions;\n  /**\n   * Deprecated: Use `rowHeader` and `columnHeader` instead.\n   * @deprecated\n   */\n  header?: boolean | null;\n  /** Sets whether the table's first row is a header. Defaults to `false`. */\n  rowHeader?: boolean | null;\n  /** Sets whether the table's first column is a header. Defaults to `false`. */\n  columnHeader?: boolean | null;\n}\n\nexport interface Dimensions {\n  /** An array representing relative width of each column in relation to the other columns. */\n  colsWidthRatio?: number[];\n  /** An array representing the height of each row in pixels. */\n  rowsHeight?: number[];\n  /** An array representing the minimum width of each column in pixels. */\n  colsMinWidth?: number[];\n}\n\nexport interface TableCellData {\n  /** Styling for the cell's background color and text alignment. */\n  cellStyle?: CellStyle;\n  /** The cell's border colors. */\n  borderColors?: BorderColors;\n}\n\nexport enum VerticalAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Middle alignment */\n  MIDDLE = 'MIDDLE',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n}\n\n/** @enumType */\nexport type VerticalAlignmentWithLiterals =\n  | VerticalAlignment\n  | 'TOP'\n  | 'MIDDLE'\n  | 'BOTTOM';\n\nexport interface CellStyle {\n  /** Vertical alignment for the cell's text. */\n  verticalAlignment?: VerticalAlignmentWithLiterals;\n  /**\n   * Cell background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n}\n\nexport interface BorderColors {\n  /**\n   * Left border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  left?: string | null;\n  /**\n   * Right border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  right?: string | null;\n  /**\n   * Top border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  top?: string | null;\n  /**\n   * Bottom border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  bottom?: string | null;\n}\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n */\nexport enum NullValue {\n  /** Null value. */\n  NULL_VALUE = 'NULL_VALUE',\n}\n\n/** @enumType */\nexport type NullValueWithLiterals = NullValue | 'NULL_VALUE';\n\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n */\nexport interface ListValue {\n  /** Repeated field of dynamically typed values. */\n  values?: any[];\n}\n\nexport interface AudioData {\n  /** Styling for the audio node's container. */\n  containerData?: PluginContainerData;\n  /** Audio file details. */\n  audio?: V1Media;\n  /** Sets whether the audio node's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Cover image. */\n  coverImage?: V1Media;\n  /** Track name. */\n  name?: string | null;\n  /** Author name. */\n  authorName?: string | null;\n  /** An HTML version of the audio node. */\n  html?: string | null;\n}\n\nexport interface OrderedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n  /** List start number. */\n  start?: number | null;\n}\n\nexport interface BulletedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n}\n\nexport interface BlockquoteData {\n  /** Indentation level from 1-4. */\n  indentation?: number;\n}\n\nexport interface CaptionData {\n  textStyle?: TextStyle;\n}\n\nexport interface LayoutCellData {\n  /** Size of the cell in 12 columns grid. */\n  colSpan?: number | null;\n}\n\nexport interface Metadata {\n  /** Schema version. */\n  version?: number;\n  /**\n   * When the object was created.\n   * @readonly\n   * @deprecated\n   */\n  createdTimestamp?: Date | null;\n  /**\n   * When the object was most recently updated.\n   * @deprecated\n   */\n  updatedTimestamp?: Date | null;\n  /** Object ID. */\n  _id?: string | null;\n}\n\nexport interface DocumentStyle {\n  /** Styling for H1 nodes. */\n  headerOne?: TextNodeStyle;\n  /** Styling for H2 nodes. */\n  headerTwo?: TextNodeStyle;\n  /** Styling for H3 nodes. */\n  headerThree?: TextNodeStyle;\n  /** Styling for H4 nodes. */\n  headerFour?: TextNodeStyle;\n  /** Styling for H5 nodes. */\n  headerFive?: TextNodeStyle;\n  /** Styling for H6 nodes. */\n  headerSix?: TextNodeStyle;\n  /** Styling for paragraph nodes. */\n  paragraph?: TextNodeStyle;\n  /** Styling for block quote nodes. */\n  blockquote?: TextNodeStyle;\n  /** Styling for code block nodes. */\n  codeBlock?: TextNodeStyle;\n}\n\nexport interface TextNodeStyle {\n  /** The decorations to apply to the node. */\n  decorations?: Decoration[];\n  /** Padding and background color for the node. */\n  nodeStyle?: NodeStyle;\n  /** Line height for text in the node. */\n  lineHeight?: string | null;\n}\n\nexport enum Status {\n  UNKNOWN = 'UNKNOWN',\n  /** Status indicating the draft post is published. */\n  PUBLISHED = 'PUBLISHED',\n  /** Status indicating the draft post is unpublished. */\n  UNPUBLISHED = 'UNPUBLISHED',\n  /** Status indicating the draft post is scheduled for publication. */\n  SCHEDULED = 'SCHEDULED',\n  /** Status indicating the draft post is deleted. */\n  DELETED = 'DELETED',\n  /** Status indicating the draft post is in review. */\n  IN_REVIEW = 'IN_REVIEW',\n}\n\n/** @enumType */\nexport type StatusWithLiterals =\n  | Status\n  | 'UNKNOWN'\n  | 'PUBLISHED'\n  | 'UNPUBLISHED'\n  | 'SCHEDULED'\n  | 'DELETED'\n  | 'IN_REVIEW';\n\nexport interface ModerationDetails {\n  /**\n   * Member ID of the person submitting the draft post for review.\n   * @format GUID\n   */\n  submittedBy?: string;\n  /** Date the post was submitted for review. */\n  submittedDate?: Date | null;\n  /** Status indicating whether the submission was approved or rejected by the moderator. */\n  status?: ModerationStatusStatusWithLiterals;\n  /**\n   * Member ID of the person who approved or rejected the post.\n   * @format GUID\n   */\n  moderatedBy?: string | null;\n  /** Date the post was approved or rejected. */\n  moderationDate?: Date | null;\n}\n\nexport enum ModerationStatusStatus {\n  UNKNOWN = 'UNKNOWN',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n}\n\n/** @enumType */\nexport type ModerationStatusStatusWithLiterals =\n  | ModerationStatusStatus\n  | 'UNKNOWN'\n  | 'APPROVED'\n  | 'REJECTED';\n\n/**\n * The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n * The search engines use this information for ranking purposes, or to display snippets in the search results.\n * This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n */\nexport interface SeoSchema {\n  /** SEO tag information. */\n  tags?: Tag[];\n  /** SEO general settings. */\n  settings?: Settings;\n}\n\nexport interface Keyword {\n  /** Keyword value. */\n  term?: string;\n  /** Whether the keyword is the main focus keyword. */\n  isMain?: boolean;\n  /**\n   * The source that added the keyword terms to the SEO settings.\n   * @maxLength 1000\n   */\n  origin?: string | null;\n}\n\nexport interface Tag {\n  /**\n   * SEO tag type.\n   *\n   *\n   * Supported values: `title`, `meta`, `script`, `link`.\n   */\n  type?: string;\n  /**\n   * A `{\"key\": \"value\"}` pair object where each SEO tag property (`\"name\"`, `\"content\"`, `\"rel\"`, `\"href\"`) contains a value.\n   * For example: `{\"name\": \"description\", \"content\": \"the description itself\"}`.\n   */\n  props?: Record<string, any> | null;\n  /** SEO tag meta data. For example, `{\"height\": 300, \"width\": 240}`. */\n  meta?: Record<string, any> | null;\n  /** SEO tag inner content. For example, `<title> inner content </title>`. */\n  children?: string;\n  /** Whether the tag is a custom tag. */\n  custom?: boolean;\n  /** Whether the tag is disabled. */\n  disabled?: boolean;\n}\n\nexport interface Settings {\n  /**\n   * Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled.\n   *\n   *\n   * Default: `false` (Auto Redirect is enabled.)\n   */\n  preventAutoRedirect?: boolean;\n  /**\n   * User-selected keyword terms for a specific page.\n   * @maxSize 5\n   */\n  keywords?: Keyword[];\n}\n\nexport interface Media extends MediaMediaOneOf {\n  /** Wix Media details. */\n  wixMedia?: WixMedia;\n  /** Embed media details. */\n  embedMedia?: EmbedMedia;\n  /** Whether cover media is displayed. */\n  displayed?: boolean;\n  /** Whether custom cover media has been specified. If `false`, the first media item in the post's content serves as cover media. */\n  custom?: boolean;\n  /**\n   * Media alternative text.\n   * @minLength 1\n   * @maxLength 1000\n   */\n  altText?: string | null;\n}\n\n/** @oneof */\nexport interface MediaMediaOneOf {\n  /** Wix Media details. */\n  wixMedia?: WixMedia;\n  /** Embed media details. */\n  embedMedia?: EmbedMedia;\n}\n\nexport interface WixMedia {\n  /** Image details. */\n  image?: string;\n  /** Video details. */\n  videoV2?: string;\n}\n\nexport interface VideoResolution {\n  /** Video URL. */\n  url?: string;\n  /** Video height. */\n  height?: number;\n  /** Video width. */\n  width?: number;\n  /** Video format for example, mp4, hls. */\n  format?: string;\n}\n\nexport interface EmbedMedia {\n  /** Thumbnail details. */\n  thumbnail?: EmbedThumbnail;\n  /** Video details. */\n  video?: EmbedVideo;\n}\n\nexport interface EmbedThumbnail {\n  /**\n   * Thumbnail url.\n   * @maxLength 2000\n   */\n  url?: string;\n  /** Thumbnail width. */\n  width?: number;\n  /** Thumbnail height. */\n  height?: number;\n}\n\nexport interface EmbedVideo {\n  /**\n   * Video url.\n   * @maxLength 2000\n   */\n  url?: string;\n  /** Video width. */\n  width?: number;\n  /** Video height. */\n  height?: number;\n}\n\nexport interface DraftPostTranslation {\n  /**\n   * Post ID.\n   * @format GUID\n   */\n  _id?: string;\n  /** Post status. */\n  status?: StatusWithLiterals;\n  /**\n   * Language the post is written in.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Post slug. For example, 'post-slug'.\n   * @maxLength 100\n   */\n  slug?: string | null;\n  /** SEO data. */\n  seoData?: SeoSchema;\n  /** Post URL. */\n  url?: string;\n}\n\nexport interface DraftCategoriesUpdated {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId?: string;\n  /**\n   * Current categories of the draft.\n   * @maxSize 10\n   * @format GUID\n   */\n  categories?: string[];\n  /**\n   * Previous categories of the draft.\n   * @maxSize 10\n   * @format GUID\n   */\n  previousCategories?: string[];\n}\n\nexport interface DraftTagsUpdated {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId?: string;\n  /**\n   * Current tags of the draft.\n   * @maxSize 30\n   * @format GUID\n   */\n  tags?: string[];\n  /**\n   * Previous tags of the draft.\n   * @maxSize 30\n   * @format GUID\n   */\n  previousTags?: string[];\n}\n\nexport interface GetDraftPostTotalsRequest {\n  /**\n   * Group results by fields (defaults to grouping by status).\n   * If, for example, grouping by language is passed, language values in response will be filled.\n   * If, for example, grouping by language is not passed, null values will be filled in language field in response.\n   * @maxSize 10\n   */\n  groupBy?: TotalDraftPostsGroupingFieldWithLiterals[];\n  /**\n   * Optional language filter by provided language code. Useful in multilingual context.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n}\n\nexport enum TotalDraftPostsGroupingField {\n  /** Groups results by status. */\n  STATUS = 'STATUS',\n  /** Groups results by language. */\n  LANGUAGE = 'LANGUAGE',\n}\n\n/** @enumType */\nexport type TotalDraftPostsGroupingFieldWithLiterals =\n  | TotalDraftPostsGroupingField\n  | 'STATUS'\n  | 'LANGUAGE';\n\nexport interface GetDraftPostTotalsResponse {\n  /** Draft post totals. */\n  totalDraftPosts?: TotalDraftPosts[];\n}\n\nexport interface TotalDraftPosts {\n  /** Draft post totals in that group. */\n  total?: number;\n  /** Draft post status (only has value when grouping by status, otherwise null). */\n  status?: StatusWithLiterals;\n  /**\n   * Draft post language code (only has value when grouping by language, otherwise null).\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface InitialDraftPostsCopied {\n  /** Number of draft posts copied. */\n  count?: number;\n}\n\nexport interface CreateDraftPostRequest {\n  /** Draft post to create. */\n  draftPost: DraftPost;\n  /**\n   * Whether the draft post should be published on creation.\n   *\n   * Default: `false`\n   */\n  publish?: boolean;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport enum Type {\n  UNKNOWN = 'UNKNOWN',\n  /** Manually saved. */\n  MANUAL = 'MANUAL',\n  /** Triggered by autosave. */\n  AUTO_SAVE = 'AUTO_SAVE',\n  /** Copied from template during provisioning flow. */\n  PROVISIONING = 'PROVISIONING',\n  /** Imported from another blog. */\n  IMPORT = 'IMPORT',\n  /** Triggered by autosave when post created by AI tool. */\n  AI_AUTO_SAVE = 'AI_AUTO_SAVE',\n}\n\n/** @enumType */\nexport type TypeWithLiterals =\n  | Type\n  | 'UNKNOWN'\n  | 'MANUAL'\n  | 'AUTO_SAVE'\n  | 'PROVISIONING'\n  | 'IMPORT'\n  | 'AI_AUTO_SAVE';\n\nexport enum Field {\n  /** Unknown field. */\n  UNKNOWN = 'UNKNOWN',\n  /** Includes draft post preview URL. */\n  URL = 'URL',\n  /** Includes content field. */\n  CONTENT = 'CONTENT',\n  /** Includes rich content field. */\n  RICH_CONTENT = 'RICH_CONTENT',\n  /** If the user has not set excerpt, returns the one autogenerated from content. */\n  GENERATED_EXCERPT = 'GENERATED_EXCERPT',\n}\n\n/** @enumType */\nexport type FieldWithLiterals =\n  | Field\n  | 'UNKNOWN'\n  | 'URL'\n  | 'CONTENT'\n  | 'RICH_CONTENT'\n  | 'GENERATED_EXCERPT';\n\nexport interface CreateDraftPostResponse {\n  /** Created draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface BulkCreateDraftPostsRequest {\n  /**\n   * Draft posts to create.\n   * @minSize 1\n   * @maxSize 20\n   */\n  draftPosts: DraftPost[];\n  /** Whether the draft post should be published after creation. */\n  publish?: boolean;\n  /** Whether to return the full created draft post entities in the response. */\n  returnFullEntity?: boolean;\n  /**\n   * List of draft post fields to be included in the response if the entities are present.\n   * Base default fieldset returns all core draft post properties (all properties that are not a supported fieldset value).\n   * For example,  when `URL` fieldset is selected, returned draft post will include the set of base properties and the draft post's preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface BulkCreateDraftPostsResponse {\n  /** Draft posts created by bulk action. */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkDraftPostResult {\n  /** Bulk actions metadata for draft post. */\n  itemMetadata?: ItemMetadata;\n  /** Optional full draft post. */\n  item?: DraftPost;\n}\n\nexport interface ItemMetadata {\n  /** Item ID. Should always be available, unless it's impossible (for example, when failing to create an item). */\n  _id?: string | null;\n  /** Index of the item within the request array. Allows for correlation between request and response items. */\n  originalIndex?: number;\n  /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */\n  success?: boolean;\n  /** Details about the error in case of failure. */\n  error?: ApplicationError;\n}\n\nexport interface ApplicationError {\n  /** Error code. */\n  code?: string;\n  /** Description of the error. */\n  description?: string;\n  /** Data related to the error. */\n  data?: Record<string, any> | null;\n}\n\nexport interface BulkActionMetadata {\n  /** Number of items that were successfully processed. */\n  totalSuccesses?: number;\n  /** Number of items that couldn't be processed. */\n  totalFailures?: number;\n  /** Number of failures without details because detailed failure threshold was exceeded. */\n  undetailedFailures?: number;\n}\n\nexport interface BulkUpdateDraftPostsRequest {\n  /**\n   * Draft posts to update.\n   * @minSize 1\n   * @maxSize 20\n   */\n  draftPosts?: MaskedDraftPosts[];\n  /**\n   * Action to perform on the posts.\n   *\n   * Default: `UPDATE`\n   */\n  action?: ActionWithLiterals;\n  /** Posts' scheduled publish date when `action` is set to `UPDATE_SCHEDULE`. */\n  scheduledPublishDate?: Date | null;\n  /** Whether to return the full updated draft post entities in the response. */\n  returnFullEntity?: boolean;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface MaskedDraftPosts {\n  /** Draft post */\n  draftPost?: DraftPost;\n  /** Field mask of fields to update. */\n  fieldMask?: string[];\n}\n\nexport enum Action {\n  /** Update the draft post. */\n  UPDATE = 'UPDATE',\n  /** Update and publish a draft post. */\n  UPDATE_PUBLISH = 'UPDATE_PUBLISH',\n  /** Update the draft post and schedule a publish date. */\n  UPDATE_SCHEDULE = 'UPDATE_SCHEDULE',\n  /** Update the post and revert it to draft. */\n  UPDATE_REVERT_TO_DRAFT = 'UPDATE_REVERT_TO_DRAFT',\n  /** Update the draft post and cancel the scheduled publish date. */\n  UPDATE_CANCEL_SCHEDULE = 'UPDATE_CANCEL_SCHEDULE',\n  /** Update and reject draft post. */\n  UPDATE_REJECT = 'UPDATE_REJECT',\n  /** Update a post that's already been published. This creates and updates a draft version of the post. The original post is still published. */\n  UPDATE_PUBLICATION = 'UPDATE_PUBLICATION',\n}\n\n/** @enumType */\nexport type ActionWithLiterals =\n  | Action\n  | 'UPDATE'\n  | 'UPDATE_PUBLISH'\n  | 'UPDATE_SCHEDULE'\n  | 'UPDATE_REVERT_TO_DRAFT'\n  | 'UPDATE_CANCEL_SCHEDULE'\n  | 'UPDATE_REJECT'\n  | 'UPDATE_PUBLICATION';\n\nexport interface BulkUpdateDraftPostsResponse {\n  /** Draft posts updated by bulk action. */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface DraftPostOwnerChanged {}\n\nexport interface ListDeletedDraftPostsRequest {\n  /**\n   * Language filter.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * If omitted, deleted draft posts in all languages are returned.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Sorting options.\n   *\n   * Default: `EDITING_DATE_DESCENDING`\n   */\n  sort?: GetDraftPostsSortWithLiterals;\n  /** Pagination options. */\n  paging?: BlogPaging;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n  /**\n   * Draft post ids.\n   * @maxSize 100\n   * @format GUID\n   */\n  draftPostIds?: string[];\n}\n\nexport enum GetDraftPostsSort {\n  /** Sort by `editedDate` in descending order. */\n  EDITING_DATE_DESC = 'EDITING_DATE_DESC',\n  /** Sort by `editedDate` in ascending order. */\n  EDITING_DATE_ASC = 'EDITING_DATE_ASC',\n}\n\n/** @enumType */\nexport type GetDraftPostsSortWithLiterals =\n  | GetDraftPostsSort\n  | 'EDITING_DATE_DESC'\n  | 'EDITING_DATE_ASC';\n\nexport interface BlogPaging {\n  /**\n   * Number of items to skip in the current sort order.\n   *\n   *\n   * Default: `0`\n   */\n  offset?: number;\n  /**\n   * Number of items to return.\n   *\n   *\n   * Default:`50`\n   * @min 1\n   * @max 100\n   */\n  limit?: number;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   * @maxLength 2000\n   */\n  cursor?: string | null;\n}\n\nexport interface ListDeletedDraftPostsResponse {\n  /** List of draft posts. */\n  draftPosts?: DraftPost[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface PagingMetadataV2 {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n  /** Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used. */\n  cursors?: Cursors;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor pointing to next page in the list of results.\n   * @maxLength 2000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to previous page in the list of results.\n   * @maxLength 2000\n   */\n  prev?: string | null;\n}\n\nexport interface GetDraftPostRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface GetDraftPostResponse {\n  /** Draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface UpdateDraftPostContentRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId?: string;\n  /** Change origin. */\n  changeOrigin?: OriginWithLiterals;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n  /** Draft Post rich content. */\n  richContent?: RichContent;\n}\n\nexport interface UpdateDraftPostContentResponse {\n  /** Updated draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface UpdateDraftPostRequest {\n  /** Draft post to update. */\n  draftPost: DraftPost;\n  /**\n   * Action to perform on the post.\n   *\n   * Default: `UPDATE`\n   */\n  action?: ActionWithLiterals;\n  /** Post publish schedule date if `action` is set to `UPDATE_SCHEDULE`. */\n  scheduledPublishDate?: Date | null;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface UpdateDraftPostResponse {\n  /** Updated draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface DeleteDraftPostRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n  /**\n   * Whether to bypass the trash bin and delete the post permanently.\n   *\n   * Default: `false`\n   */\n  permanent?: boolean;\n}\n\nexport interface DeleteDraftPostResponse {}\n\nexport interface RemoveFromTrashBinRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n}\n\nexport interface RemoveFromTrashBinResponse {}\n\nexport interface BulkDeleteDraftPostsRequest {\n  /**\n   * Post IDs.\n   * @minSize 1\n   * @maxSize 100\n   * @maxLength 38\n   */\n  postIds: string[];\n  /** Should delete bypassing the trash-bin. */\n  permanent?: boolean;\n}\n\nexport interface BulkDeleteDraftPostsResponse {\n  /** Bulk action results. */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface ListDraftPostsRequest {\n  /**\n   * Draft post status filter.\n   *\n   * If omitted, draft posts with all statuses are returned.\n   */\n  status?: StatusWithLiterals;\n  /**\n   * Language filter.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * If omitted, draft posts in all languages are returned.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Sort options.\n   *\n   * Default: `EDITING_DATE_DESCENDING`\n   */\n  sort?: GetDraftPostsSortWithLiterals;\n  /** Pagination options. */\n  paging?: BlogPaging;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface ListDraftPostsResponse {\n  /** List of draft posts. */\n  draftPosts?: DraftPost[];\n  /** Details on the paged set of results returned. */\n  metaData?: MetaData;\n}\n\nexport interface MetaData {\n  /** Number of items returned in this response. */\n  count?: number;\n  /** Requested offset. */\n  offset?: number;\n  /** Total number of items that match the query. */\n  total?: number;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   * @maxLength 2000\n   */\n  cursor?: string | null;\n}\n\nexport interface GetDeletedDraftPostRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n}\n\nexport interface GetDeletedDraftPostResponse {\n  /** Draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface RestoreFromTrashBinRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n}\n\nexport interface RestoreFromTrashBinResponse {\n  /** Restored draft post info. */\n  draftPost?: DraftPost;\n}\n\nexport interface QueryDraftPostsRequest {\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n  /** Query options. */\n  query?: PlatformQuery;\n}\n\nexport interface PlatformQuery extends PlatformQueryPagingMethodOneOf {\n  /** Paging options to limit and skip the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   * @maxSize 3\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface PlatformQueryPagingMethodOneOf {\n  /** Paging options to limit and skip the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface Paging {\n  /**\n   * Number of items to load.\n   * @max 100\n   */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface CursorPaging {\n  /**\n   * Number of items to load.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * You can get the relevant cursor token\n   * from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 2000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryDraftPostsResponse {\n  /** List of posts. */\n  draftPosts?: DraftPost[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface PublishDraftPostRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId: string;\n}\n\nexport interface PublishDraftPostResponse {\n  /**\n   * Published post ID.\n   * @format GUID\n   */\n  postId?: string;\n}\n\nexport interface UnpublishPostRequest {\n  /**\n   * Draft post ID.\n   * @maxLength 38\n   */\n  draftPostId?: string;\n}\n\nexport interface UnpublishPostResponse {}\n\nexport interface TranslateCategoryRequest {\n  /**\n   * Source category ID\n   * @format GUID\n   */\n  categoryId?: string;\n  /**\n   * Translation language\n   * @format LANGUAGE_TAG\n   */\n  language?: string;\n}\n\nexport interface TranslateCategoryResponse {\n  /** Translated category */\n  category?: Category;\n  /** Other translations of returned category */\n  translations?: CategoryTranslation[];\n}\n\nexport interface Category {\n  /**\n   * Category ID.\n   * @immutable\n   * @maxLength 38\n   */\n  _id?: string;\n  /**\n   * Category label. Displayed in the Category Menu.\n   * @maxLength 35\n   */\n  label?: string;\n  /**\n   * Number of posts in the category.\n   * @readonly\n   */\n  postCount?: number;\n  /**\n   * The `url` of the page that lists every post with the specified category.\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Category description.\n   * @maxLength 500\n   */\n  description?: string | null;\n  /**\n   * Category title.\n   * @maxLength 200\n   * @deprecated Category title.\n   * @targetRemovalDate 2025-07-16\n   */\n  title?: string;\n  /**\n   * Position of the category in the [Category Menu](https://support.wix.com/en/article/wix-blog-adding-and-customizing-a-category-menu).\n   * Categories are displayed in ascending order. Categories with a position of `-1` appear at the end of the sequence.\n   *\n   * Default: `-1`\n   */\n  displayPosition?: number | null;\n  /**\n   * ID of the category's translations. All translations of a single category share the same `translationId`.\n   * @format GUID\n   */\n  translationId?: string | null;\n  /**\n   * Category language.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * @immutable\n   */\n  language?: string | null;\n  /**\n   * Part of a category's URL that refers to a specific category. For example, the slug of `https:/example.com/blog/category/famous-cats` is `famous-cats`.\n   * @maxLength 100\n   */\n  slug?: string;\n  /** SEO data. */\n  seoData?: SeoSchema;\n  /** Category cover image. */\n  coverImage?: string;\n  /**\n   * Date and time the Category was last updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n}\n\nexport interface CategoryTranslation {\n  /**\n   * Category ID.\n   * @format GUID\n   */\n  _id?: string;\n  /**\n   * Label displayed in the categories menu on the site.\n   * @maxLength 100\n   */\n  label?: string | null;\n  /**\n   * Language of the category.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /** URL of this category page. */\n  url?: string;\n}\n\nexport interface TranslateDraftRequest {\n  /**\n   * Source post or draft ID\n   * @format GUID\n   */\n  postId?: string;\n  /**\n   * Translation language\n   * @format LANGUAGE_TAG\n   */\n  language?: string;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface TranslateDraftResponse {\n  /** Draft post. */\n  draftPost?: DraftPost;\n}\n\nexport interface IsDraftPostAutoTranslatableRequest {\n  /**\n   * Source post or draft ID.\n   * @format GUID\n   */\n  draftPostId?: string;\n}\n\nexport interface IsDraftPostAutoTranslatableResponse {\n  /**\n   * Source draft post ID.\n   * @format GUID\n   */\n  draftPostId?: string;\n  /** Indicates if enough machine translation credits are available for the draft post translation. */\n  translatable?: boolean;\n  /** Draft post title word count. */\n  titleWordCount?: number;\n  /** Draft post content word count. */\n  contentWordCount?: number;\n  /** Word credits available for auto translation. */\n  availableAutoTranslateWords?: number;\n  /** Word credits available after auto translation would be done. */\n  availableAutoTranslateWordsAfter?: number;\n  /** Content text character count. */\n  contentTextCharacterCount?: number;\n}\n\nexport interface UpdateDraftPostLanguageRequest {\n  /**\n   * Source draft post ID\n   * @format GUID\n   */\n  postId?: string;\n  /**\n   * New language to replace to\n   * @minLength 2\n   * @format LANGUAGE_TAG\n   */\n  language?: string;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface UpdateDraftPostLanguageResponse {\n  /** Draft post */\n  draftPost?: DraftPost;\n}\n\nexport interface BulkUpdateDraftPostLanguageRequest {\n  /**\n   * Source post or draft IDs\n   * @maxSize 50\n   * @format GUID\n   */\n  ids?: string[];\n  /**\n   * New language to replace to\n   * @format LANGUAGE_TAG\n   */\n  language?: string;\n  /** Should full draft post be returned */\n  returnFullEntity?: boolean;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface BulkUpdateDraftPostLanguageResponse {\n  /** Bulk action results */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface GetPostAmountsByLanguageRequest {\n  /**\n   * Post status to filter by\n   * @maxLength 100\n   */\n  status?: string;\n}\n\nexport interface GetPostAmountsByLanguageResponse {\n  /** Post amounts by language */\n  postAmountsByLanguage?: PostAmountByLanguage[];\n}\n\nexport interface PostAmountByLanguage {\n  /**\n   * Post language code\n   * @format LANGUAGE_TAG\n   */\n  languageCode?: string;\n  /**\n   * Language flag\n   * @format LANGUAGE_TAG\n   */\n  flag?: string;\n  /** Post amount in that language */\n  postAmount?: number;\n}\n\nexport interface BulkRevertToUnpublishedRequest {\n  /**\n   * Source post IDs.\n   * @minSize 1\n   * @maxSize 100\n   * @format GUID\n   */\n  postIds?: string[];\n  /** Should full draft post be returned. */\n  returnFullEntity?: boolean;\n}\n\nexport interface BulkRevertToUnpublishedResponse {\n  /** Bulk action results. */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkRejectDraftPostRequest {\n  /**\n   * Source post IDs.\n   * @minSize 1\n   * @maxSize 100\n   * @format GUID\n   */\n  postIds?: string[];\n  /** Should full draft post be returned. */\n  returnFullEntity?: boolean;\n}\n\nexport interface BulkRejectDraftPostResponse {\n  /** Bulk action results. */\n  results?: BulkDraftPostResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface RevertToUnpublishedRequest {\n  /**\n   * Source post ID.\n   * @format GUID\n   */\n  postId?: string;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface RevertToUnpublishedResponse {\n  /** Updated post draft. */\n  draftPost?: DraftPost;\n}\n\nexport interface RejectDraftPostRequest {\n  /**\n   * Source post ID.\n   * @format GUID\n   */\n  postId?: string;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface RejectDraftPostResponse {\n  /** Draft post. */\n  draftPost?: DraftPost;\n}\n\nexport interface ApproveDraftPostRequest {\n  /**\n   * Source post ID.\n   * @format GUID\n   */\n  postId?: string;\n  /**\n   * Scheduled publish date if should be not immediately published.\n   * @maxLength 24\n   */\n  scheduledPublishDate?: string | null;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface ApproveDraftPostResponse {\n  /** Updated post draft. */\n  draftPost?: DraftPost;\n}\n\nexport interface MarkPostAsInModerationRequest {\n  /**\n   * Source post ID.\n   * @maxLength 38\n   */\n  postId?: string;\n  /**\n   * List of draft post fields to be included if entities are present in the response.\n   * Base fieldset, which is default, will return all core draft post properties.\n   * Example: When URL fieldset is selected, returned draft post will have a set of base properties and draft post preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\nexport interface MarkPostAsInModerationResponse {\n  /** Updated post draft. */\n  draftPost?: DraftPost;\n}\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface DraftCreatedEnvelope {\n  entity: DraftPost;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a draft post is created.\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionScope Read Blog\n * @permissionScopeId SCOPE.DC-BLOG.READ-BLOGS\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionId BLOG.READ_ANY_DRAFT\n * @permissionId BLOG.READ-PUBLICATION\n * @webhook\n * @eventType wix.blog.v3.draft_created\n * @serviceIdentifier com.wixpress.npm.communities.platformized.blog.v3.DraftPostService\n * @slug created\n */\nexport declare function onDraftCreated(\n  handler: (event: DraftCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface DraftDeletedEnvelope {\n  entity: DraftPost;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a draft post is deleted.\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionScope Read Blog\n * @permissionScopeId SCOPE.DC-BLOG.READ-BLOGS\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionId BLOG.READ_ANY_DRAFT\n * @permissionId BLOG.READ-PUBLICATION\n * @webhook\n * @eventType wix.blog.v3.draft_deleted\n * @serviceIdentifier com.wixpress.npm.communities.platformized.blog.v3.DraftPostService\n * @slug deleted\n */\nexport declare function onDraftDeleted(\n  handler: (event: DraftDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface DraftUpdatedEnvelope {\n  entity: DraftPost;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a draft post is updated.\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionScope Read Blog\n * @permissionScopeId SCOPE.DC-BLOG.READ-BLOGS\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.DC-BLOG.MANAGE-BLOG\n * @permissionScope Manage Blog\n * @permissionScopeId SCOPE.BLOG.MANAGE-BLOG\n * @permissionScope Read Draft Blog Posts\n * @permissionScopeId SCOPE.DC-BLOG.READ-DRAFT-POSTS\n * @permissionId BLOG.READ_ANY_DRAFT\n * @permissionId BLOG.READ-PUBLICATION\n * @webhook\n * @eventType wix.blog.v3.draft_updated\n * @serviceIdentifier com.wixpress.npm.communities.platformized.blog.v3.DraftPostService\n * @slug updated\n */\nexport declare function onDraftUpdated(\n  handler: (event: DraftUpdatedEnvelope) => void | Promise<void>\n): void;\n\ntype DraftNonNullablePaths =\n  | `_id`\n  | `title`\n  | `categoryIds`\n  | `hashtags`\n  | `minutesToRead`\n  | `tagIds`\n  | `relatedPostIds`\n  | `pricingPlanIds`\n  | `status`\n  | `moderationDetails.submittedBy`\n  | `moderationDetails.status`\n  | `hasUnpublishedChanges`\n  | `seoData.tags`\n  | `seoData.tags.${number}.type`\n  | `seoData.tags.${number}.children`\n  | `seoData.tags.${number}.custom`\n  | `seoData.tags.${number}.disabled`\n  | `seoData.settings.preventAutoRedirect`\n  | `seoData.settings.keywords`\n  | `seoData.settings.keywords.${number}.term`\n  | `seoData.settings.keywords.${number}.isMain`\n  | `media.embedMedia.thumbnail.url`\n  | `media.embedMedia.thumbnail.width`\n  | `media.embedMedia.thumbnail.height`\n  | `media.embedMedia.video.url`\n  | `media.embedMedia.video.width`\n  | `media.embedMedia.video.height`\n  | `media.displayed`\n  | `media.custom`;\n\n/**\n * Creates a draft post.\n *\n * For 3rd-party apps, `memberId` is a required field.\n *\n * In `categoryIds`, only categories that already exist will be added to the draft post. Including\n * `categoryIds` that do not exist will not return an error, but they will not be added to the `categoryIds` array.\n * If some of the categories exist, those will be added while those that do not exist will not be added to `categoryIds`.\n * You can check which categories are available with\n * List Categories ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/list-categories) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/category/list-categories)).\n * @param draftPost - Draft post to create.\n * @public\n * @requiredField draftPost\n * @requiredField draftPost.title\n * @param options - Options for creating a draft post.\n * @permissionId BLOG.CREATE-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.CreateDraftPost\n */\nexport async function createDraftPost(\n  draftPost: NonNullablePaths<DraftPost, `title`>,\n  options?: CreateDraftPostOptions\n): Promise<\n  NonNullablePaths<\n    CreateDraftPostResponse,\n    { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest(\n      {\n        draftPost: draftPost,\n        publish: options?.publish,\n        fieldsets: options?.fieldsets,\n      },\n      ['draftPost.richContent']\n    ),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [\n          { path: 'draftPost.heroImage' },\n          { path: 'draftPost.coverMedia.image' },\n          { path: 'draftPost.media.wixMedia.image' },\n        ],\n      },\n      {\n        transformFn: transformSDKPageURLToRESTPageURL,\n        paths: [\n          { path: 'draftPost.url' },\n          { path: 'draftPost.translations.url' },\n        ],\n      },\n      {\n        transformFn: transformSDKVideoToRESTVideo,\n        paths: [{ path: 'draftPost.coverMedia.video' }],\n      },\n      {\n        transformFn: transformSDKVideoV2ToRESTVideoV2,\n        paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n      },\n    ]\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.createDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPost.heroImage' },\n            { path: 'draftPost.coverMedia.image' },\n            { path: 'draftPost.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPost.url' },\n            { path: 'draftPost.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPost.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPost.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          draftPost: '$[0]',\n          publish: '$[1].publish',\n          fieldsets: '$[1].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPost', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface CreateDraftPostOptions {\n  /**\n   * Whether the draft post should be published on creation.\n   *\n   * Default: `false`\n   */\n  publish?: boolean;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Creates multiple draft posts.\n * @param draftPosts - Draft posts to create.\n * @public\n * @requiredField draftPosts\n * @requiredField draftPosts.title\n * @param options - Options for creating multiple draft posts.\n * @permissionId BLOG.CREATE-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkCreateDraftPosts\n */\nexport async function bulkCreateDraftPosts(\n  draftPosts: NonNullablePaths<DraftPost, `title`>[],\n  options?: BulkCreateDraftPostsOptions\n): Promise<\n  NonNullablePaths<\n    BulkCreateDraftPostsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n      }[DraftNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest(\n      {\n        draftPosts: draftPosts,\n        publish: options?.publish,\n        returnFullEntity: options?.returnFullEntity,\n        fieldsets: options?.fieldsets,\n      },\n      ['draftPosts.richContent']\n    ),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [\n          { path: 'draftPosts.heroImage' },\n          { path: 'draftPosts.coverMedia.image' },\n          { path: 'draftPosts.media.wixMedia.image' },\n        ],\n      },\n      {\n        transformFn: transformSDKPageURLToRESTPageURL,\n        paths: [\n          { path: 'draftPosts.url' },\n          { path: 'draftPosts.translations.url' },\n        ],\n      },\n      {\n        transformFn: transformSDKVideoToRESTVideo,\n        paths: [{ path: 'draftPosts.coverMedia.video' }],\n      },\n      {\n        transformFn: transformSDKVideoV2ToRESTVideoV2,\n        paths: [{ path: 'draftPosts.media.wixMedia.videoV2' }],\n      },\n    ]\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.bulkCreateDraftPosts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.item.heroImage' },\n            { path: 'results.item.coverMedia.image' },\n            { path: 'results.item.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'results.item.url' },\n            { path: 'results.item.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'results.item.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'results.item.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['results.item.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          draftPosts: '$[0]',\n          publish: '$[1].publish',\n          returnFullEntity: '$[1].returnFullEntity',\n          fieldsets: '$[1].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPosts', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkCreateDraftPostsOptions {\n  /** Whether the draft post should be published after creation. */\n  publish?: boolean;\n  /** Whether to return the full created draft post entities in the response. */\n  returnFullEntity?: boolean;\n  /**\n   * List of draft post fields to be included in the response if the entities are present.\n   * Base default fieldset returns all core draft post properties (all properties that are not a supported fieldset value).\n   * For example,  when `URL` fieldset is selected, returned draft post will include the set of base properties and the draft post's preview url.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Updates multiple draft posts.\n * @public\n * @requiredField options.draftPosts.draftPost\n * @requiredField options.draftPosts.draftPost._id\n * @param options - Options for updating multiple draft posts.\n * @permissionId BLOG.EDIT-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkUpdateDraftPosts\n */\nexport async function bulkUpdateDraftPosts(\n  options?: NonNullablePaths<\n    BulkUpdateDraftPostsOptions,\n    `draftPosts.${number}.draftPost` | `draftPosts.${number}.draftPost._id`\n  >\n): Promise<\n  NonNullablePaths<\n    BulkUpdateDraftPostsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n      }[DraftNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest(\n      {\n        draftPosts: options?.draftPosts,\n        action: options?.action,\n        scheduledPublishDate: options?.scheduledPublishDate,\n        returnFullEntity: options?.returnFullEntity,\n        fieldsets: options?.fieldsets,\n      },\n      ['draftPosts.draftPost.richContent']\n    ),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [\n          { path: 'draftPosts.draftPost.heroImage' },\n          { path: 'draftPosts.draftPost.coverMedia.image' },\n          { path: 'draftPosts.draftPost.media.wixMedia.image' },\n        ],\n      },\n      {\n        transformFn: transformSDKPageURLToRESTPageURL,\n        paths: [\n          { path: 'draftPosts.draftPost.url' },\n          { path: 'draftPosts.draftPost.translations.url' },\n        ],\n      },\n      {\n        transformFn: transformSDKVideoToRESTVideo,\n        paths: [{ path: 'draftPosts.draftPost.coverMedia.video' }],\n      },\n      {\n        transformFn: transformSDKVideoV2ToRESTVideoV2,\n        paths: [{ path: 'draftPosts.draftPost.media.wixMedia.videoV2' }],\n      },\n    ]\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.bulkUpdateDraftPosts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.item.heroImage' },\n            { path: 'results.item.coverMedia.image' },\n            { path: 'results.item.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'results.item.url' },\n            { path: 'results.item.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'results.item.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'results.item.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['results.item.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          draftPosts: '$[0].draftPosts',\n          action: '$[0].action',\n          scheduledPublishDate: '$[0].scheduledPublishDate',\n          returnFullEntity: '$[0].returnFullEntity',\n          fieldsets: '$[0].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkUpdateDraftPostsOptions {\n  /**\n   * Draft posts to update.\n   * @minSize 1\n   * @maxSize 20\n   */\n  draftPosts?: MaskedDraftPosts[];\n  /**\n   * Action to perform on the posts.\n   *\n   * Default: `UPDATE`\n   */\n  action?: ActionWithLiterals;\n  /** Posts' scheduled publish date when `action` is set to `UPDATE_SCHEDULE`. */\n  scheduledPublishDate?: Date | null;\n  /** Whether to return the full updated draft post entities in the response. */\n  returnFullEntity?: boolean;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Retrieves a list of up to 100 deleted draft posts.\n *\n * List Draft Posts runs with these defaults, which you can override:\n * - `editedDate` is sorted in descending order. In this case,`editedDate` implies the date the post was deleted.\n * - `paging.limit` is `50`.\n * - `paging.offset` is `0`.\n * @public\n * @param options - Options for listing deleted draft posts.\n * @permissionId BLOG.READ_DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.ListDeletedDraftPosts\n */\nexport async function listDeletedDraftPosts(\n  options?: ListDeletedDraftPostsOptions\n): Promise<\n  NonNullablePaths<\n    ListDeletedDraftPostsResponse,\n    {\n      [P in DraftNonNullablePaths]: `draftPosts.${number}.${P}`;\n    }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    {\n      language: options?.language,\n      sort: options?.sort,\n      paging: options?.paging,\n      fieldsets: options?.fieldsets,\n      draftPostIds: options?.draftPostIds,\n    },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.listDeletedDraftPosts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPosts.heroImage' },\n            { path: 'draftPosts.coverMedia.image' },\n            { path: 'draftPosts.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPosts.url' },\n            { path: 'draftPosts.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPosts.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPosts.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPosts.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          language: '$[0].language',\n          sort: '$[0].sort',\n          paging: '$[0].paging',\n          fieldsets: '$[0].fieldsets',\n          draftPostIds: '$[0].draftPostIds',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListDeletedDraftPostsOptions {\n  /**\n   * Language filter.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * If omitted, deleted draft posts in all languages are returned.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Sorting options.\n   *\n   * Default: `EDITING_DATE_DESCENDING`\n   */\n  sort?: GetDraftPostsSortWithLiterals;\n  /** Pagination options. */\n  paging?: BlogPaging;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n  /**\n   * Draft post ids.\n   * @maxSize 100\n   * @format GUID\n   */\n  draftPostIds?: string[];\n}\n\n/**\n * Retrieves a draft post by the provided ID.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @param options - Options for getting a draft post.\n * @permissionId BLOG.READ_DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.GetDraftPost\n */\nexport async function getDraftPost(\n  draftPostId: string,\n  options?: GetDraftPostOptions\n): Promise<\n  NonNullablePaths<\n    GetDraftPostResponse,\n    { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId, fieldsets: options?.fieldsets },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.getDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPost.heroImage' },\n            { path: 'draftPost.coverMedia.image' },\n            { path: 'draftPost.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPost.url' },\n            { path: 'draftPost.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPost.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPost.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          draftPostId: '$[0]',\n          fieldsets: '$[1].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetDraftPostOptions {\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Updates a draft post.\n * @param _id - Draft post ID.\n * @public\n * @requiredField _id\n * @requiredField draftPost\n * @param options - Options for updating a draft post.\n * @param draftPost - Draft Post info.\n * @permissionId BLOG.EDIT-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.UpdateDraftPost\n */\nexport async function updateDraftPost(\n  _id: string,\n  draftPost: UpdateDraftPost,\n  options?: UpdateDraftPostOptions\n): Promise<\n  NonNullablePaths<\n    UpdateDraftPostResponse,\n    { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest(\n      {\n        draftPost: { ...draftPost, id: _id },\n        action: options?.action,\n        scheduledPublishDate: options?.scheduledPublishDate,\n        fieldsets: options?.fieldsets,\n      },\n      ['draftPost.richContent']\n    ),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [\n          { path: 'draftPost.heroImage' },\n          { path: 'draftPost.coverMedia.image' },\n          { path: 'draftPost.media.wixMedia.image' },\n        ],\n      },\n      {\n        transformFn: transformSDKPageURLToRESTPageURL,\n        paths: [\n          { path: 'draftPost.url' },\n          { path: 'draftPost.translations.url' },\n        ],\n      },\n      {\n        transformFn: transformSDKVideoToRESTVideo,\n        paths: [{ path: 'draftPost.coverMedia.video' }],\n      },\n      {\n        transformFn: transformSDKVideoV2ToRESTVideoV2,\n        paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n      },\n    ]\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.updateDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPost.heroImage' },\n            { path: 'draftPost.coverMedia.image' },\n            { path: 'draftPost.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPost.url' },\n            { path: 'draftPost.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPost.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPost.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { draftPost: '$[1]' },\n        explicitPathsToArguments: {\n          'draftPost.id': '$[0]',\n          action: '$[2].action',\n          scheduledPublishDate: '$[2].scheduledPublishDate',\n          fieldsets: '$[2].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'draftPost', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateDraftPost {\n  /**\n   * Draft post ID.\n   * @readonly\n   * @maxLength 38\n   */\n  _id?: string;\n  /**\n   * Draft post title.\n   * @maxLength 200\n   */\n  title?: string;\n  /**\n   * Draft post excerpt.\n   *\n   * If no excerpt has been manually set, an excerpt is automatically generated from the post's text.\n   * This can be retrieved using the `GENERATED_EXCERPT` fieldset.\n   * @maxLength 500\n   */\n  excerpt?: string | null;\n  /** Whether the draft post is marked as featured. */\n  featured?: boolean | null;\n  /**\n   * Category IDs of the draft post.\n   * @maxSize 10\n   * @maxLength 38\n   */\n  categoryIds?: string[];\n  /**\n   * Draft post owner's member ID.\n   * @format GUID\n   */\n  memberId?: string | null;\n  /**\n   * Hashtags in the post.\n   * @maxSize 100\n   * @maxLength 100\n   */\n  hashtags?: string[];\n  /** Whether commenting on the draft post is enabled. */\n  commentingEnabled?: boolean | null;\n  /**\n   * Estimated reading time of the draft post (calculated automatically).\n   * @readonly\n   */\n  minutesToRead?: number;\n  /** Image placed at the top of the blog page. */\n  heroImage?: string;\n  /**\n   * Tag IDs the draft post is tagged with.\n   * @maxSize 30\n   * @maxLength 38\n   */\n  tagIds?: string[];\n  /**\n   * IDs of posts related to this draft post.\n   * @maxSize 3\n   * @maxLength 38\n   */\n  relatedPostIds?: string[];\n  /**\n   * Pricing plan IDs. Only relevant if a post is assigned to a specific pricing plan. See the Pricing Plans API for more info.\n   * @maxSize 100\n   * @format GUID\n   */\n  pricingPlanIds?: string[];\n  /**\n   * ID of the draft post's translations.\n   *\n   * All translations of a single post share the same `translationId`.\n   * Available only if the [Multilingual](https://support.wix.com/en/article/wix-multilingual-an-overview) app is installed.\n   * @format GUID\n   */\n  translationId?: string | null;\n  /**\n   * Language the draft post is written in.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Draft Post rich content.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"image.gallery.video.audio.divider.linkButton.html.giphy.codeBlock.file.hashtag.lineSpacing.indent.link.textColor.textHighlight.heading.verticalEmbed.table.collapsibleList.poll\" exampleid=\"72c23a25-524f-4f70-a260-4a2777b6f5d5\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   */\n  richContent?: RichContent;\n  /**\n   * Status of the draft post.\n   * @readonly\n   */\n  status?: StatusWithLiterals;\n  /** Details of the draft post in review. Only relevant to posts submitted by guest writers. */\n  moderationDetails?: ModerationDetails;\n  /**\n   * Indicates if there are changes made to the draft post that have not yet been published.\n   * @readonly\n   */\n  hasUnpublishedChanges?: boolean;\n  /**\n   * Date the draft post was last edited.\n   * @readonly\n   */\n  editedDate?: Date | null;\n  /**\n   * Date the draft post is scheduled to be published.\n   * @readonly\n   */\n  scheduledPublishDate?: Date | null;\n  /** Date the post was first published. */\n  firstPublishedDate?: Date | null;\n  /** SEO data. */\n  seoData?: SeoSchema;\n  /**\n   * Draft post URL preview. What the URL will look like once the post is published.\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Date the draft post was first created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * SEO slug.\n   * @maxLength 100\n   */\n  seoSlug?: string | null;\n  /** Post cover media. */\n  media?: Media;\n  /** Number of paragraphs to display in a paid content preview for non-paying users. */\n  previewTextParagraph?: number | null;\n}\n\nexport interface UpdateDraftPostOptions {\n  /**\n   * Action to perform on the post.\n   *\n   * Default: `UPDATE`\n   */\n  action?: ActionWithLiterals;\n  /** Post publish schedule date if `action` is set to `UPDATE_SCHEDULE`. */\n  scheduledPublishDate?: Date | null;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Moves a draft post to the trash bin.\n * A published post can also be deleted by the `post.id`. See the Posts API ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object)) for more information about posts.\n *\n * To permanently delete a post bypassing the trash bin, set the `permanent` field value to `true`. The post can't be restored after this.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @param options - Options for deleting a draft post.\n * @permissionId BLOG.DELETE-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.DeleteDraftPost\n */\nexport async function deleteDraftPost(\n  draftPostId: string,\n  options?: DeleteDraftPostOptions\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId, permanent: options?.permanent },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.deleteDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          draftPostId: '$[0]',\n          permanent: '$[1].permanent',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface DeleteDraftPostOptions {\n  /**\n   * Whether to bypass the trash bin and delete the post permanently.\n   *\n   * Default: `false`\n   */\n  permanent?: boolean;\n}\n\n/**\n * Permanently deletes a draft post that is currently in the trash bin.\n *\n * This action is permanent and can't be reversed.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @permissionId BLOG.DELETE-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.RemoveFromTrashBin\n */\nexport async function removeFromTrashBin(draftPostId: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.removeFromTrashBin(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { draftPostId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Deletes multiple draft posts.\n * @param postIds - Post IDs.\n * @public\n * @requiredField postIds\n * @param options - Options for deleting multiple draft posts.\n * @permissionId BLOG.DELETE-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkDeleteDraftPosts\n */\nexport async function bulkDeleteDraftPosts(\n  postIds: string[],\n  options?: BulkDeleteDraftPostsOptions\n): Promise<\n  NonNullablePaths<\n    BulkDeleteDraftPostsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in DraftNonNullablePaths]: `results.${number}.item.${P}`;\n      }[DraftNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { postIds: postIds, permanent: options?.permanent },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.bulkDeleteDraftPosts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.item.heroImage' },\n            { path: 'results.item.coverMedia.image' },\n            { path: 'results.item.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'results.item.url' },\n            { path: 'results.item.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'results.item.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'results.item.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['results.item.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          postIds: '$[0]',\n          permanent: '$[1].permanent',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['postIds', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkDeleteDraftPostsOptions {\n  /** Should delete bypassing the trash-bin. */\n  permanent?: boolean;\n}\n\n/**\n * Retrieves a list of up to 100 draft posts per request.\n *\n * List Draft Posts runs with these defaults, which you can override:\n * - `editedDate` is sorted in descending order.\n * - `paging.limit` is `50`.\n * - `paging.offset` is `0`.\n * @public\n * @param options - Options for listing multiple draft posts.\n * @permissionId BLOG.READ_DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.ListDraftPosts\n */\nexport async function listDraftPosts(\n  options?: ListDraftPostsOptions\n): Promise<\n  NonNullablePaths<\n    ListDraftPostsResponse,\n    | {\n        [P in DraftNonNullablePaths]: `draftPosts.${number}.${P}`;\n      }[DraftNonNullablePaths]\n    | `metaData.count`\n    | `metaData.offset`\n    | `metaData.total`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    {\n      status: options?.status,\n      language: options?.language,\n      sort: options?.sort,\n      paging: options?.paging,\n      fieldsets: options?.fieldsets,\n    },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.listDraftPosts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPosts.heroImage' },\n            { path: 'draftPosts.coverMedia.image' },\n            { path: 'draftPosts.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPosts.url' },\n            { path: 'draftPosts.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPosts.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPosts.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPosts.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          status: '$[0].status',\n          language: '$[0].language',\n          sort: '$[0].sort',\n          paging: '$[0].paging',\n          fieldsets: '$[0].fieldsets',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListDraftPostsOptions {\n  /**\n   * Draft post status filter.\n   *\n   * If omitted, draft posts with all statuses are returned.\n   */\n  status?: StatusWithLiterals;\n  /**\n   * Language filter.\n   *\n   * 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\n   * If omitted, draft posts in all languages are returned.\n   * @format LANGUAGE_TAG\n   */\n  language?: string | null;\n  /**\n   * Sort options.\n   *\n   * Default: `EDITING_DATE_DESCENDING`\n   */\n  sort?: GetDraftPostsSortWithLiterals;\n  /** Pagination options. */\n  paging?: BlogPaging;\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[];\n}\n\n/**\n * Retrieves a deleted draft post from the trash bin by the provided ID.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @permissionId BLOG.READ_DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.GetDeletedDraftPost\n */\nexport async function getDeletedDraftPost(\n  draftPostId: string\n): Promise<\n  NonNullablePaths<\n    GetDeletedDraftPostResponse,\n    { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.getDeletedDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPost.heroImage' },\n            { path: 'draftPost.coverMedia.image' },\n            { path: 'draftPost.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPost.url' },\n            { path: 'draftPost.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPost.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPost.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { draftPostId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Restores a deleted draft post from the trash bin by the provided ID.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @permissionId BLOG.EDIT-DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.RestoreFromTrashBin\n */\nexport async function restoreFromTrashBin(\n  draftPostId: string\n): Promise<\n  NonNullablePaths<\n    RestoreFromTrashBinResponse,\n    { [P in DraftNonNullablePaths]: `draftPost.${P}` }[DraftNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.restoreFromTrashBin(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'draftPost.heroImage' },\n            { path: 'draftPost.coverMedia.image' },\n            { path: 'draftPost.media.wixMedia.image' },\n          ],\n        },\n        {\n          transformFn: transformRESTPageURLToSDKPageURL,\n          paths: [\n            { path: 'draftPost.url' },\n            { path: 'draftPost.translations.url' },\n          ],\n        },\n        {\n          transformFn: transformRESTVideoToSDKVideo,\n          paths: [{ path: 'draftPost.coverMedia.video' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'draftPost.media.wixMedia.videoV2' }],\n        },\n      ]),\n      ['draftPost.richContent']\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { draftPostId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates a query to retrieve a list of up to 100 draft posts.\n *\n *\n * The `queryDraftPosts()` function builds a query to retrieve a list of up to 100 draft posts, and returns a `DraftPostsQueryBuilder` object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n *\n * You can refine the query by chaining `DraftPostsQueryBuilder` functions onto the query. `DraftPostsQueryBuilder` functions enable you to sort, filter, and control the results that `queryDraftPosts()` returns.\n *\n * `queryDraftPosts()` runs with these `DraftPostsQueryBuilder` defaults that can be overridden:\n * - `limit(50)`\n * - `ascending('_id')`\n *\n * The following `DraftPostsQueryBuilder` functions are supported for `queryDraftPosts()`. For a full description of the Draft Posts object, see the object returned for the `items` property in `DraftPostsQueryResult`.\n * @public\n * @param options - Options for querying draft posts.\n * @permissionId BLOG.READ_DRAFT\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.QueryDraftPosts\n */\nexport function queryDraftPosts(\n  options?: QueryDraftPostsOptions\n): DraftPostsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    DraftPost,\n    'CURSOR',\n    QueryDraftPostsRequest,\n    QueryDraftPostsResponse\n  >({\n    func: async (payload: QueryDraftPostsRequest) => {\n      const reqOpts = ambassadorWixBlogV3Draft.queryDraftPosts({\n        ...payload,\n        ...(options ?? {}),\n      });\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryDraftPostsRequest['query']) => {\n      const args = [query, options] as [\n        QueryDraftPostsRequest['query'],\n        QueryDraftPostsOptions\n      ];\n      return renameKeysFromSDKRequestToRESTRequest(\n        { ...args?.[1], query: args?.[0] },\n        []\n      );\n    },\n    responseTransformer: ({ data }: HttpResponse<QueryDraftPostsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTImageToSDKImage,\n            paths: [\n              { path: 'draftPosts.heroImage' },\n              { path: 'draftPosts.coverMedia.image' },\n              { path: 'draftPosts.media.wixMedia.image' },\n            ],\n          },\n          {\n            transformFn: transformRESTPageURLToSDKPageURL,\n            paths: [\n              { path: 'draftPosts.url' },\n              { path: 'draftPosts.translations.url' },\n            ],\n          },\n          {\n            transformFn: transformRESTVideoToSDKVideo,\n            paths: [{ path: 'draftPosts.coverMedia.video' }],\n          },\n          {\n            transformFn: transformRESTVideoV2ToSDKVideoV2,\n            paths: [{ path: 'draftPosts.media.wixMedia.videoV2' }],\n          },\n        ]),\n        ['draftPosts.richContent']\n      );\n\n      return {\n        items: transformedData?.draftPosts,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\nexport interface QueryDraftPostsOptions {\n  /**\n   * List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in\n   * the response in addition to the draft post's base fields. Base fields don’t include any of the supported fieldset values. By default\n   * only the draft post's base fields are returned.\n   * @maxSize 10\n   */\n  fieldsets?: FieldWithLiterals[] | undefined;\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface DraftPostsQueryResult extends QueryCursorResult {\n  items: DraftPost[];\n  query: DraftPostsQueryBuilder;\n  next: () => Promise<DraftPostsQueryResult>;\n  prev: () => Promise<DraftPostsQueryResult>;\n}\n\nexport interface DraftPostsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | 'title'\n      | 'excerpt'\n      | 'featured'\n      | 'commentingEnabled'\n      | 'minutesToRead'\n      | 'translationId'\n      | 'language'\n      | 'status'\n      | 'hasUnpublishedChanges'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | 'title'\n      | 'excerpt'\n      | 'featured'\n      | 'commentingEnabled'\n      | 'minutesToRead'\n      | 'translationId'\n      | 'language'\n      | 'status'\n      | 'hasUnpublishedChanges'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  ge: (\n    propertyName:\n      | 'title'\n      | 'excerpt'\n      | 'minutesToRead'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  gt: (\n    propertyName:\n      | 'title'\n      | 'excerpt'\n      | 'minutesToRead'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  le: (\n    propertyName:\n      | 'title'\n      | 'excerpt'\n      | 'minutesToRead'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  lt: (\n    propertyName:\n      | 'title'\n      | 'excerpt'\n      | 'minutesToRead'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   */\n  startsWith: (\n    propertyName: 'title' | 'excerpt',\n    value: string\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   */\n  hasSome: (propertyName: string, value: any[]) => DraftPostsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   */\n  hasAll: (propertyName: string, value: any[]) => DraftPostsQueryBuilder;\n  in: (\n    propertyName:\n      | '_id'\n      | 'title'\n      | 'excerpt'\n      | 'minutesToRead'\n      | 'translationId'\n      | 'language'\n      | 'status'\n      | 'editedDate'\n      | 'scheduledPublishDate',\n    value: any\n  ) => DraftPostsQueryBuilder;\n  exists: (\n    propertyName: 'title' | 'excerpt' | 'translationId' | 'language',\n    value: boolean\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments. */\n  ascending: (\n    ...propertyNames: Array<\n      | '_id'\n      | 'title'\n      | 'excerpt'\n      | 'featured'\n      | 'commentingEnabled'\n      | 'status'\n      | 'hasUnpublishedChanges'\n      | 'editedDate'\n      | 'scheduledPublishDate'\n    >\n  ) => DraftPostsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments. */\n  descending: (\n    ...propertyNames: Array<\n      | '_id'\n      | 'title'\n      | 'excerpt'\n      | 'featured'\n      | 'commentingEnabled'\n      | 'status'\n      | 'hasUnpublishedChanges'\n      | 'editedDate'\n      | 'scheduledPublishDate'\n    >\n  ) => DraftPostsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object. */\n  limit: (limit: number) => DraftPostsQueryBuilder;\n  /** @param cursor - A pointer to specific record */\n  skipTo: (cursor: string) => DraftPostsQueryBuilder;\n  find: () => Promise<DraftPostsQueryResult>;\n}\n\n/**\n * Publishes a draft post by ID. This creates a new post ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object))\n * with the data from the draft post.\n *\n * If the draft post was already published, the published post will be updated with the latest values\n * from the draft post.\n * @param draftPostId - Draft post ID.\n * @public\n * @requiredField draftPostId\n * @permissionId BLOG.PUBLISH-POST\n * @applicableIdentity APP\n * @fqn com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.PublishDraftPost\n */\nexport async function publishDraftPost(\n  draftPostId: string\n): Promise<NonNullablePaths<PublishDraftPostResponse, `postId`>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { draftPostId: draftPostId },\n    []\n  );\n\n  const reqOpts = ambassadorWixBlogV3Draft.publishDraftPost(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { draftPostId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['draftPostId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    _api_base_domain_: [\n      {\n        srcPath: '/draft-post-service-api-proxy',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    '*.pub.wix-code.com': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'apps._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'bo._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'wixbo.ai': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'wix-bo.com': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'editor.wixapps.net': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n      {\n        srcPath: '/_api/draft-post-service-api-proxy/v3/bulk/draft-posts',\n        destPath: '/v3/bulk/draft-posts',\n      },\n    ],\n    'social-blog._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/blog/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n      {\n        srcPath: '/blog/v3/bulk/draft-posts/create',\n        destPath: '/v3/bulk/draft-posts/create',\n      },\n      {\n        srcPath: '/blog/v3/draft-posts/',\n        destPath: '/v3/draft-posts',\n      },\n      {\n        srcPath: '/blog/v3/bulk/draft-posts',\n        destPath: '/v3/bulk/draft-posts',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/communities-blog-node-api/v3/draft-posts',\n        destPath: '/v3/draft-posts',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_blog_draft-posts';\n\n/**\n * Creates a draft post.\n *\n * For 3rd-party apps, `memberId` is a required field.\n *\n * In `categoryIds`, only categories that already exist will be added to the draft post. Including\n * `categoryIds` that do not exist will not return an error, but they will not be added to the `categoryIds` array.\n * If some of the categories exist, those will be added while those that do not exist will not be added to `categoryIds`.\n * You can check which categories are available with\n * List Categories ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/categories/list-categories) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/category/list-categories)).\n */\nexport function createDraftPost(payload: object): RequestOptionsFactory<any> {\n  function __createDraftPost({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'draftPost.editedDate' },\n          { path: 'draftPost.scheduledPublishDate' },\n          { path: 'draftPost.firstPublishedDate' },\n          { path: 'draftPost.createdDate' },\n          { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n          { path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate' },\n          { path: 'draftPost.heroImage.urlExpirationDate' },\n          { path: 'draftPost.richContent.metadata.createdTimestamp' },\n          { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n          { path: 'draftPost.moderationDetails.submittedDate' },\n          { path: 'draftPost.moderationDetails.moderationDate' },\n          { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n          { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'draftPost.coverMedia.image.focalPoint.x' },\n          { path: 'draftPost.coverMedia.image.focalPoint.y' },\n          { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n          { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n          { path: 'draftPost.heroImage.focalPoint.x' },\n          { path: 'draftPost.heroImage.focalPoint.y' },\n          { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n          { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n          },\n          { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n          { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n          { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n          { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n          { path: 'draftPost.richContent.nodes.pollData.poll.image.duration' },\n          {\n            path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'draftPost.richContent.nodes.appEmbedData.image.duration' },\n          { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n          { path: 'draftPost.richContent.nodes.videoData.thumbnail.duration' },\n          { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n          { path: 'draftPost.richContent.nodes.audioData.coverImage.duration' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.CreateDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPost.editedDate' },\n              { path: 'draftPost.scheduledPublishDate' },\n              { path: 'draftPost.firstPublishedDate' },\n              { path: 'draftPost.createdDate' },\n              { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPost.heroImage.urlExpirationDate' },\n              { path: 'draftPost.richContent.metadata.createdTimestamp' },\n              { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPost.moderationDetails.submittedDate' },\n              { path: 'draftPost.moderationDetails.moderationDate' },\n              { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPost.coverMedia.image.focalPoint.x' },\n              { path: 'draftPost.coverMedia.image.focalPoint.y' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPost.heroImage.focalPoint.x' },\n              { path: 'draftPost.heroImage.focalPoint.y' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPost.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPost.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createDraftPost;\n}\n\n/** Creates multiple draft posts. */\nexport function bulkCreateDraftPosts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreateDraftPosts({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'draftPosts.editedDate' },\n          { path: 'draftPosts.scheduledPublishDate' },\n          { path: 'draftPosts.firstPublishedDate' },\n          { path: 'draftPosts.createdDate' },\n          { path: 'draftPosts.coverMedia.image.urlExpirationDate' },\n          { path: 'draftPosts.coverMedia.video.thumbnail.urlExpirationDate' },\n          { path: 'draftPosts.heroImage.urlExpirationDate' },\n          { path: 'draftPosts.richContent.metadata.createdTimestamp' },\n          { path: 'draftPosts.richContent.metadata.updatedTimestamp' },\n          { path: 'draftPosts.moderationDetails.submittedDate' },\n          { path: 'draftPosts.moderationDetails.moderationDate' },\n          { path: 'draftPosts.media.wixMedia.image.urlExpirationDate' },\n          { path: 'draftPosts.media.wixMedia.videoV2.urlExpirationDate' },\n          {\n            path: 'draftPosts.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.media.wixMedia.videoV2.posters.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'draftPosts.coverMedia.image.focalPoint.x' },\n          { path: 'draftPosts.coverMedia.image.focalPoint.y' },\n          { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.x' },\n          { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.y' },\n          { path: 'draftPosts.heroImage.focalPoint.x' },\n          { path: 'draftPosts.heroImage.focalPoint.y' },\n          { path: 'draftPosts.media.wixMedia.image.focalPoint.x' },\n          { path: 'draftPosts.media.wixMedia.image.focalPoint.y' },\n          {\n            path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n          },\n          {\n            path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n          },\n          { path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.x' },\n          { path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.y' },\n          {\n            path: 'draftPosts.richContent.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'draftPosts.richContent.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'draftPosts.richContent.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'draftPosts.richContent.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'draftPosts.richContent.nodes.imageData.image.duration' },\n          { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lat' },\n          { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lng' },\n          { path: 'draftPosts.richContent.nodes.pollData.poll.image.duration' },\n          {\n            path: 'draftPosts.richContent.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'draftPosts.richContent.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'draftPosts.richContent.nodes.appEmbedData.image.duration' },\n          { path: 'draftPosts.richContent.nodes.videoData.video.duration' },\n          { path: 'draftPosts.richContent.nodes.videoData.thumbnail.duration' },\n          { path: 'draftPosts.richContent.nodes.audioData.audio.duration' },\n          {\n            path: 'draftPosts.richContent.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkCreateDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/bulk/draft-posts/create', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.editedDate' },\n              { path: 'results.item.scheduledPublishDate' },\n              { path: 'results.item.firstPublishedDate' },\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'results.item.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'results.item.heroImage.urlExpirationDate' },\n              { path: 'results.item.richContent.metadata.createdTimestamp' },\n              { path: 'results.item.richContent.metadata.updatedTimestamp' },\n              { path: 'results.item.moderationDetails.submittedDate' },\n              { path: 'results.item.moderationDetails.moderationDate' },\n              { path: 'results.item.media.wixMedia.image.urlExpirationDate' },\n              { path: 'results.item.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'results.item.coverMedia.image.focalPoint.x' },\n              { path: 'results.item.coverMedia.image.focalPoint.y' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'results.item.heroImage.focalPoint.x' },\n              { path: 'results.item.heroImage.focalPoint.y' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.x' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.richContent.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateDraftPosts;\n}\n\n/** Updates multiple draft posts. */\nexport function bulkUpdateDraftPosts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateDraftPosts({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'scheduledPublishDate' },\n          { path: 'draftPosts.draftPost.editedDate' },\n          { path: 'draftPosts.draftPost.scheduledPublishDate' },\n          { path: 'draftPosts.draftPost.firstPublishedDate' },\n          { path: 'draftPosts.draftPost.createdDate' },\n          { path: 'draftPosts.draftPost.coverMedia.image.urlExpirationDate' },\n          {\n            path: 'draftPosts.draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n          },\n          { path: 'draftPosts.draftPost.heroImage.urlExpirationDate' },\n          {\n            path: 'draftPosts.draftPost.richContent.metadata.createdTimestamp',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.metadata.updatedTimestamp',\n          },\n          { path: 'draftPosts.draftPost.moderationDetails.submittedDate' },\n          { path: 'draftPosts.draftPost.moderationDetails.moderationDate' },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.image.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'draftPosts.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'draftPosts.draftPost.coverMedia.image.focalPoint.x' },\n          { path: 'draftPosts.draftPost.coverMedia.image.focalPoint.y' },\n          {\n            path: 'draftPosts.draftPost.coverMedia.video.thumbnail.focalPoint.x',\n          },\n          {\n            path: 'draftPosts.draftPost.coverMedia.video.thumbnail.focalPoint.y',\n          },\n          { path: 'draftPosts.draftPost.heroImage.focalPoint.x' },\n          { path: 'draftPosts.draftPost.heroImage.focalPoint.y' },\n          { path: 'draftPosts.draftPost.media.wixMedia.image.focalPoint.x' },\n          { path: 'draftPosts.draftPost.media.wixMedia.image.focalPoint.y' },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.posters.focalPoint.x',\n          },\n          {\n            path: 'draftPosts.draftPost.media.wixMedia.videoV2.posters.focalPoint.y',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.galleryData.options.item.ratio',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.imageData.image.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.mapData.mapSettings.lat',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.mapData.mapSettings.lng',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.appEmbedData.image.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.videoData.video.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.videoData.thumbnail.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.audioData.audio.duration',\n          },\n          {\n            path: 'draftPosts.draftPost.richContent.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'PATCH' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkUpdateDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts/update', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.editedDate' },\n              { path: 'results.item.scheduledPublishDate' },\n              { path: 'results.item.firstPublishedDate' },\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'results.item.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'results.item.heroImage.urlExpirationDate' },\n              { path: 'results.item.richContent.metadata.createdTimestamp' },\n              { path: 'results.item.richContent.metadata.updatedTimestamp' },\n              { path: 'results.item.moderationDetails.submittedDate' },\n              { path: 'results.item.moderationDetails.moderationDate' },\n              { path: 'results.item.media.wixMedia.image.urlExpirationDate' },\n              { path: 'results.item.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'results.item.coverMedia.image.focalPoint.x' },\n              { path: 'results.item.coverMedia.image.focalPoint.y' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'results.item.heroImage.focalPoint.x' },\n              { path: 'results.item.heroImage.focalPoint.y' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.x' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.richContent.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateDraftPosts;\n}\n\n/**\n * Retrieves a list of up to 100 deleted draft posts.\n *\n * List Draft Posts runs with these defaults, which you can override:\n * - `editedDate` is sorted in descending order. In this case,`editedDate` implies the date the post was deleted.\n * - `paging.limit` is `50`.\n * - `paging.offset` is `0`.\n */\nexport function listDeletedDraftPosts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listDeletedDraftPosts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.ListDeletedDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts/trash-bin', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPosts.editedDate' },\n              { path: 'draftPosts.scheduledPublishDate' },\n              { path: 'draftPosts.firstPublishedDate' },\n              { path: 'draftPosts.createdDate' },\n              { path: 'draftPosts.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPosts.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPosts.heroImage.urlExpirationDate' },\n              { path: 'draftPosts.richContent.metadata.createdTimestamp' },\n              { path: 'draftPosts.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPosts.moderationDetails.submittedDate' },\n              { path: 'draftPosts.moderationDetails.moderationDate' },\n              { path: 'draftPosts.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPosts.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPosts.coverMedia.image.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.image.focalPoint.y' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPosts.heroImage.focalPoint.x' },\n              { path: 'draftPosts.heroImage.focalPoint.y' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPosts.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listDeletedDraftPosts;\n}\n\n/** Retrieves a draft post by the provided ID. */\nexport function getDraftPost(payload: object): RequestOptionsFactory<any> {\n  function __getDraftPost({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.GetDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts/{draftPostId}', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPost.editedDate' },\n              { path: 'draftPost.scheduledPublishDate' },\n              { path: 'draftPost.firstPublishedDate' },\n              { path: 'draftPost.createdDate' },\n              { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPost.heroImage.urlExpirationDate' },\n              { path: 'draftPost.richContent.metadata.createdTimestamp' },\n              { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPost.moderationDetails.submittedDate' },\n              { path: 'draftPost.moderationDetails.moderationDate' },\n              { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPost.coverMedia.image.focalPoint.x' },\n              { path: 'draftPost.coverMedia.image.focalPoint.y' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPost.heroImage.focalPoint.x' },\n              { path: 'draftPost.heroImage.focalPoint.y' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPost.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPost.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getDraftPost;\n}\n\n/** Updates a draft post. */\nexport function updateDraftPost(payload: object): RequestOptionsFactory<any> {\n  function __updateDraftPost({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'scheduledPublishDate' },\n          { path: 'draftPost.editedDate' },\n          { path: 'draftPost.scheduledPublishDate' },\n          { path: 'draftPost.firstPublishedDate' },\n          { path: 'draftPost.createdDate' },\n          { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n          { path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate' },\n          { path: 'draftPost.heroImage.urlExpirationDate' },\n          { path: 'draftPost.richContent.metadata.createdTimestamp' },\n          { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n          { path: 'draftPost.moderationDetails.submittedDate' },\n          { path: 'draftPost.moderationDetails.moderationDate' },\n          { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n          { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'draftPost.coverMedia.image.focalPoint.x' },\n          { path: 'draftPost.coverMedia.image.focalPoint.y' },\n          { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n          { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n          { path: 'draftPost.heroImage.focalPoint.x' },\n          { path: 'draftPost.heroImage.focalPoint.y' },\n          { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n          { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n          },\n          {\n            path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n          },\n          { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n          { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n          { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n          { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n          { path: 'draftPost.richContent.nodes.pollData.poll.image.duration' },\n          {\n            path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'draftPost.richContent.nodes.appEmbedData.image.duration' },\n          { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n          { path: 'draftPost.richContent.nodes.videoData.thumbnail.duration' },\n          { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n          { path: 'draftPost.richContent.nodes.audioData.coverImage.duration' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'PATCH' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.UpdateDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        {\n          protoPath: '/v3/draft-posts/{draftPost.id}',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPost.editedDate' },\n              { path: 'draftPost.scheduledPublishDate' },\n              { path: 'draftPost.firstPublishedDate' },\n              { path: 'draftPost.createdDate' },\n              { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPost.heroImage.urlExpirationDate' },\n              { path: 'draftPost.richContent.metadata.createdTimestamp' },\n              { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPost.moderationDetails.submittedDate' },\n              { path: 'draftPost.moderationDetails.moderationDate' },\n              { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPost.coverMedia.image.focalPoint.x' },\n              { path: 'draftPost.coverMedia.image.focalPoint.y' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPost.heroImage.focalPoint.x' },\n              { path: 'draftPost.heroImage.focalPoint.y' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPost.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPost.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateDraftPost;\n}\n\n/**\n * Moves a draft post to the trash bin.\n * A published post can also be deleted by the `post.id`. See the Posts API ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object)) for more information about posts.\n *\n * To permanently delete a post bypassing the trash bin, set the `permanent` field value to `true`. The post can't be restored after this.\n */\nexport function deleteDraftPost(payload: object): RequestOptionsFactory<any> {\n  function __deleteDraftPost({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.DeleteDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts/{draftPostId}', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteDraftPost;\n}\n\n/**\n * Permanently deletes a draft post that is currently in the trash bin.\n *\n * This action is permanent and can't be reversed.\n */\nexport function removeFromTrashBin(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __removeFromTrashBin({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.RemoveFromTrashBin',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        {\n          protoPath: '/v3/draft-posts/trash-bin/{draftPostId}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __removeFromTrashBin;\n}\n\n/** Deletes multiple draft posts. */\nexport function bulkDeleteDraftPosts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeleteDraftPosts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.BulkDeleteDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/bulk/draft-posts', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.editedDate' },\n              { path: 'results.item.scheduledPublishDate' },\n              { path: 'results.item.firstPublishedDate' },\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'results.item.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'results.item.heroImage.urlExpirationDate' },\n              { path: 'results.item.richContent.metadata.createdTimestamp' },\n              { path: 'results.item.richContent.metadata.updatedTimestamp' },\n              { path: 'results.item.moderationDetails.submittedDate' },\n              { path: 'results.item.moderationDetails.moderationDate' },\n              { path: 'results.item.media.wixMedia.image.urlExpirationDate' },\n              { path: 'results.item.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'results.item.coverMedia.image.focalPoint.x' },\n              { path: 'results.item.coverMedia.image.focalPoint.y' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'results.item.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'results.item.heroImage.focalPoint.x' },\n              { path: 'results.item.heroImage.focalPoint.y' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.x' },\n              { path: 'results.item.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'results.item.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.richContent.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.richContent.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteDraftPosts;\n}\n\n/**\n * Retrieves a list of up to 100 draft posts per request.\n *\n * List Draft Posts runs with these defaults, which you can override:\n * - `editedDate` is sorted in descending order.\n * - `paging.limit` is `50`.\n * - `paging.offset` is `0`.\n */\nexport function listDraftPosts(payload: object): RequestOptionsFactory<any> {\n  function __listDraftPosts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.ListDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPosts.editedDate' },\n              { path: 'draftPosts.scheduledPublishDate' },\n              { path: 'draftPosts.firstPublishedDate' },\n              { path: 'draftPosts.createdDate' },\n              { path: 'draftPosts.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPosts.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPosts.heroImage.urlExpirationDate' },\n              { path: 'draftPosts.richContent.metadata.createdTimestamp' },\n              { path: 'draftPosts.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPosts.moderationDetails.submittedDate' },\n              { path: 'draftPosts.moderationDetails.moderationDate' },\n              { path: 'draftPosts.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPosts.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPosts.coverMedia.image.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.image.focalPoint.y' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPosts.heroImage.focalPoint.x' },\n              { path: 'draftPosts.heroImage.focalPoint.y' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPosts.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listDraftPosts;\n}\n\n/** Retrieves a deleted draft post from the trash bin by the provided ID. */\nexport function getDeletedDraftPost(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getDeletedDraftPost({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.GetDeletedDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        {\n          protoPath: '/v3/draft-posts/trash-bin/{draftPostId}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPost.editedDate' },\n              { path: 'draftPost.scheduledPublishDate' },\n              { path: 'draftPost.firstPublishedDate' },\n              { path: 'draftPost.createdDate' },\n              { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPost.heroImage.urlExpirationDate' },\n              { path: 'draftPost.richContent.metadata.createdTimestamp' },\n              { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPost.moderationDetails.submittedDate' },\n              { path: 'draftPost.moderationDetails.moderationDate' },\n              { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPost.coverMedia.image.focalPoint.x' },\n              { path: 'draftPost.coverMedia.image.focalPoint.y' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPost.heroImage.focalPoint.x' },\n              { path: 'draftPost.heroImage.focalPoint.y' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPost.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPost.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getDeletedDraftPost;\n}\n\n/** Restores a deleted draft post from the trash bin by the provided ID. */\nexport function restoreFromTrashBin(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __restoreFromTrashBin({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.RestoreFromTrashBin',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        {\n          protoPath: '/v3/draft-posts/trash-bin/{draftPostId}/restore',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPost.editedDate' },\n              { path: 'draftPost.scheduledPublishDate' },\n              { path: 'draftPost.firstPublishedDate' },\n              { path: 'draftPost.createdDate' },\n              { path: 'draftPost.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPost.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPost.heroImage.urlExpirationDate' },\n              { path: 'draftPost.richContent.metadata.createdTimestamp' },\n              { path: 'draftPost.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPost.moderationDetails.submittedDate' },\n              { path: 'draftPost.moderationDetails.moderationDate' },\n              { path: 'draftPost.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPost.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPost.coverMedia.image.focalPoint.x' },\n              { path: 'draftPost.coverMedia.image.focalPoint.y' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPost.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPost.heroImage.focalPoint.x' },\n              { path: 'draftPost.heroImage.focalPoint.y' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPost.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.x' },\n              { path: 'draftPost.media.wixMedia.videoV2.posters.focalPoint.y' },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPost.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPost.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPost.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPost.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPost.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPost.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPost.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __restoreFromTrashBin;\n}\n\n/**\n * Creates a query to retrieve a list of up to 100 draft posts.\n *\n *\n * The `queryDraftPosts()` function builds a query to retrieve a list of up to 100 draft posts, and returns a `DraftPostsQueryBuilder` object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n *\n * You can refine the query by chaining `DraftPostsQueryBuilder` functions onto the query. `DraftPostsQueryBuilder` functions enable you to sort, filter, and control the results that `queryDraftPosts()` returns.\n *\n * `queryDraftPosts()` runs with these `DraftPostsQueryBuilder` defaults that can be overridden:\n * - `limit(50)`\n * - `ascending('_id')`\n *\n * The following `DraftPostsQueryBuilder` functions are supported for `queryDraftPosts()`. For a full description of the Draft Posts object, see the object returned for the `items` property in `DraftPostsQueryResult`.\n */\nexport function queryDraftPosts(payload: object): RequestOptionsFactory<any> {\n  function __queryDraftPosts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.QueryDraftPosts',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        { protoPath: '/v3/draft-posts/query', data: payload, host }\n      ),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'draftPosts.editedDate' },\n              { path: 'draftPosts.scheduledPublishDate' },\n              { path: 'draftPosts.firstPublishedDate' },\n              { path: 'draftPosts.createdDate' },\n              { path: 'draftPosts.coverMedia.image.urlExpirationDate' },\n              {\n                path: 'draftPosts.coverMedia.video.thumbnail.urlExpirationDate',\n              },\n              { path: 'draftPosts.heroImage.urlExpirationDate' },\n              { path: 'draftPosts.richContent.metadata.createdTimestamp' },\n              { path: 'draftPosts.richContent.metadata.updatedTimestamp' },\n              { path: 'draftPosts.moderationDetails.submittedDate' },\n              { path: 'draftPosts.moderationDetails.moderationDate' },\n              { path: 'draftPosts.media.wixMedia.image.urlExpirationDate' },\n              { path: 'draftPosts.media.wixMedia.videoV2.urlExpirationDate' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.urlExpirationDate',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'draftPosts.coverMedia.image.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.image.focalPoint.y' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.x' },\n              { path: 'draftPosts.coverMedia.video.thumbnail.focalPoint.y' },\n              { path: 'draftPosts.heroImage.focalPoint.x' },\n              { path: 'draftPosts.heroImage.focalPoint.y' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.x' },\n              { path: 'draftPosts.media.wixMedia.image.focalPoint.y' },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.resolutions.poster.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.x',\n              },\n              {\n                path: 'draftPosts.media.wixMedia.videoV2.posters.focalPoint.y',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.galleryData.options.item.ratio',\n              },\n              { path: 'draftPosts.richContent.nodes.imageData.image.duration' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lat' },\n              { path: 'draftPosts.richContent.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'draftPosts.richContent.nodes.appEmbedData.image.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.videoData.video.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.videoData.thumbnail.duration',\n              },\n              { path: 'draftPosts.richContent.nodes.audioData.audio.duration' },\n              {\n                path: 'draftPosts.richContent.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryDraftPosts;\n}\n\n/**\n * Publishes a draft post by ID. This creates a new post ([SDK](https://dev.wix.com/docs/sdk/backend-modules/blog/posts/) | [REST](https://dev.wix.com/docs/rest/business-solutions/blog/posts-stats/post-object))\n * with the data from the draft post.\n *\n * If the draft post was already published, the published post will be updated with the latest values\n * from the draft post.\n */\nexport function publishDraftPost(payload: object): RequestOptionsFactory<any> {\n  function __publishDraftPost({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.blog.v3.draft',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.npm.communities.platformized.blog.v3.DraftPostService.PublishDraftPost',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressNpmCommunitiesPlatformizedBlogV3DraftPostServiceUrl(\n        {\n          protoPath: '/v3/draft-posts/{draftPostId}/publish',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __publishDraftPost;\n}\n","import {\n  createDraftPost as publicCreateDraftPost,\n  bulkCreateDraftPosts as publicBulkCreateDraftPosts,\n  bulkUpdateDraftPosts as publicBulkUpdateDraftPosts,\n  listDeletedDraftPosts as publicListDeletedDraftPosts,\n  getDraftPost as publicGetDraftPost,\n  updateDraftPost as publicUpdateDraftPost,\n  deleteDraftPost as publicDeleteDraftPost,\n  removeFromTrashBin as publicRemoveFromTrashBin,\n  bulkDeleteDraftPosts as publicBulkDeleteDraftPosts,\n  listDraftPosts as publicListDraftPosts,\n  getDeletedDraftPost as publicGetDeletedDraftPost,\n  restoreFromTrashBin as publicRestoreFromTrashBin,\n  queryDraftPosts as publicQueryDraftPosts,\n  publishDraftPost as publicPublishDraftPost,\n} from './blog-v3-draft-draft-posts.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onDraftCreated as publicOnDraftCreated } from './blog-v3-draft-draft-posts.public.js';\nimport { onDraftDeleted as publicOnDraftDeleted } from './blog-v3-draft-draft-posts.public.js';\nimport { onDraftUpdated as publicOnDraftUpdated } from './blog-v3-draft-draft-posts.public.js';\n\nexport const createDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicCreateDraftPost> & typeof publicCreateDraftPost\n> = /*#__PURE__*/ createRESTModule(publicCreateDraftPost);\nexport const bulkCreateDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicBulkCreateDraftPosts> &\n    typeof publicBulkCreateDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicBulkCreateDraftPosts);\nexport const bulkUpdateDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicBulkUpdateDraftPosts> &\n    typeof publicBulkUpdateDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicBulkUpdateDraftPosts);\nexport const listDeletedDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicListDeletedDraftPosts> &\n    typeof publicListDeletedDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicListDeletedDraftPosts);\nexport const getDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicGetDraftPost> & typeof publicGetDraftPost\n> = /*#__PURE__*/ createRESTModule(publicGetDraftPost);\nexport const updateDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateDraftPost> & typeof publicUpdateDraftPost\n> = /*#__PURE__*/ createRESTModule(publicUpdateDraftPost);\nexport const deleteDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteDraftPost> & typeof publicDeleteDraftPost\n> = /*#__PURE__*/ createRESTModule(publicDeleteDraftPost);\nexport const removeFromTrashBin: MaybeContext<\n  BuildRESTFunction<typeof publicRemoveFromTrashBin> &\n    typeof publicRemoveFromTrashBin\n> = /*#__PURE__*/ createRESTModule(publicRemoveFromTrashBin);\nexport const bulkDeleteDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicBulkDeleteDraftPosts> &\n    typeof publicBulkDeleteDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicBulkDeleteDraftPosts);\nexport const listDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicListDraftPosts> & typeof publicListDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicListDraftPosts);\nexport const getDeletedDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicGetDeletedDraftPost> &\n    typeof publicGetDeletedDraftPost\n> = /*#__PURE__*/ createRESTModule(publicGetDeletedDraftPost);\nexport const restoreFromTrashBin: MaybeContext<\n  BuildRESTFunction<typeof publicRestoreFromTrashBin> &\n    typeof publicRestoreFromTrashBin\n> = /*#__PURE__*/ createRESTModule(publicRestoreFromTrashBin);\nexport const queryDraftPosts: MaybeContext<\n  BuildRESTFunction<typeof publicQueryDraftPosts> & typeof publicQueryDraftPosts\n> = /*#__PURE__*/ createRESTModule(publicQueryDraftPosts);\nexport const publishDraftPost: MaybeContext<\n  BuildRESTFunction<typeof publicPublishDraftPost> &\n    typeof publicPublishDraftPost\n> = /*#__PURE__*/ createRESTModule(publicPublishDraftPost);\n/**\n * Triggered when a draft post is created.\n */\nexport const onDraftCreated: BuildEventDefinition<typeof publicOnDraftCreated> =\n  createEventModule(publicOnDraftCreated);\n/**\n * Triggered when a draft post is deleted.\n */\nexport const onDraftDeleted: BuildEventDefinition<typeof publicOnDraftDeleted> =\n  createEventModule(publicOnDraftDeleted);\n/**\n * Triggered when a draft post is updated.\n */\nexport const onDraftUpdated: BuildEventDefinition<typeof publicOnDraftUpdated> =\n  createEventModule(publicOnDraftUpdated);\n\nexport {\n  Origin,\n  NodeType,\n  WidthType,\n  PluginContainerDataAlignment,\n  ButtonDataType,\n  Target,\n  TextAlignment,\n  LineStyle,\n  Width,\n  DividerDataAlignment,\n  ViewMode,\n  LayoutType,\n  Orientation,\n  Crop,\n  ThumbnailsAlignment,\n  GIFType,\n  Source,\n  StylesPosition,\n  MapType,\n  ViewRole,\n  VoteRole,\n  PollLayoutType,\n  PollLayoutDirection,\n  BackgroundType,\n  DecorationType,\n  FontType,\n  Position,\n  AspectRatio,\n  Resizing,\n  Placement,\n  CardStylesType,\n  Alignment,\n  Layout,\n  AppType,\n  InitialExpandedItems,\n  Direction,\n  VerticalAlignment,\n  NullValue,\n  Status,\n  ModerationStatusStatus,\n  TotalDraftPostsGroupingField,\n  WebhookIdentityType,\n  Type,\n  Field,\n  Action,\n  GetDraftPostsSort,\n  SortOrder,\n} from './blog-v3-draft-draft-posts.universal.js';\nexport {\n  DraftPost,\n  CoverMedia,\n  CoverMediaMediaOneOf,\n  FocalPoint,\n  RichContent,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  ButtonData,\n  Border,\n  Colors,\n  PluginContainerData,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Spoiler,\n  Height,\n  Styles,\n  Link,\n  LinkDataOneOf,\n  Rel,\n  CodeBlockData,\n  TextStyle,\n  DividerData,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  PDFSettings,\n  GalleryData,\n  V1Media,\n  Image,\n  Video,\n  Item,\n  ItemDataOneOf,\n  GalleryOptions,\n  GalleryOptionsLayout,\n  ItemStyle,\n  Thumbnails,\n  GIFData,\n  GIF,\n  HeadingData,\n  HTMLData,\n  HTMLDataDataOneOf,\n  ImageData,\n  StylesBorder,\n  ImageDataStyles,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  MapData,\n  MapSettings,\n  ParagraphData,\n  PollData,\n  Permissions,\n  Option,\n  PollSettings,\n  PollLayout,\n  OptionLayout,\n  Gradient,\n  Background,\n  BackgroundBackgroundOneOf,\n  PollDesign,\n  OptionDesign,\n  Poll,\n  PollDataLayout,\n  Design,\n  TextData,\n  Decoration,\n  DecorationDataOneOf,\n  AnchorData,\n  ColorData,\n  LinkData,\n  MentionData,\n  FontSizeData,\n  SpoilerData,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  BookingData,\n  EventData,\n  ButtonStyles,\n  ImageStyles,\n  RibbonStyles,\n  CardStyles,\n  PricingData,\n  VideoData,\n  PlaybackOptions,\n  EmbedData,\n  Oembed,\n  CollapsibleListData,\n  TableData,\n  Dimensions,\n  TableCellData,\n  CellStyle,\n  BorderColors,\n  ListValue,\n  AudioData,\n  OrderedListData,\n  BulletedListData,\n  BlockquoteData,\n  CaptionData,\n  LayoutCellData,\n  Metadata,\n  DocumentStyle,\n  TextNodeStyle,\n  ModerationDetails,\n  SeoSchema,\n  Keyword,\n  Tag,\n  Settings,\n  Media,\n  MediaMediaOneOf,\n  WixMedia,\n  VideoResolution,\n  EmbedMedia,\n  EmbedThumbnail,\n  EmbedVideo,\n  DraftPostTranslation,\n  DraftCategoriesUpdated,\n  DraftTagsUpdated,\n  GetDraftPostTotalsRequest,\n  GetDraftPostTotalsResponse,\n  TotalDraftPosts,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  InitialDraftPostsCopied,\n  CreateDraftPostRequest,\n  CreateDraftPostResponse,\n  BulkCreateDraftPostsRequest,\n  BulkCreateDraftPostsResponse,\n  BulkDraftPostResult,\n  ItemMetadata,\n  ApplicationError,\n  BulkActionMetadata,\n  BulkUpdateDraftPostsRequest,\n  MaskedDraftPosts,\n  BulkUpdateDraftPostsResponse,\n  DraftPostOwnerChanged,\n  ListDeletedDraftPostsRequest,\n  BlogPaging,\n  ListDeletedDraftPostsResponse,\n  PagingMetadataV2,\n  Cursors,\n  GetDraftPostRequest,\n  GetDraftPostResponse,\n  UpdateDraftPostContentRequest,\n  UpdateDraftPostContentResponse,\n  UpdateDraftPostRequest,\n  UpdateDraftPostResponse,\n  DeleteDraftPostRequest,\n  DeleteDraftPostResponse,\n  RemoveFromTrashBinRequest,\n  RemoveFromTrashBinResponse,\n  BulkDeleteDraftPostsRequest,\n  BulkDeleteDraftPostsResponse,\n  ListDraftPostsRequest,\n  ListDraftPostsResponse,\n  MetaData,\n  GetDeletedDraftPostRequest,\n  GetDeletedDraftPostResponse,\n  RestoreFromTrashBinRequest,\n  RestoreFromTrashBinResponse,\n  QueryDraftPostsRequest,\n  PlatformQuery,\n  PlatformQueryPagingMethodOneOf,\n  Sorting,\n  Paging,\n  CursorPaging,\n  QueryDraftPostsResponse,\n  PublishDraftPostRequest,\n  PublishDraftPostResponse,\n  UnpublishPostRequest,\n  UnpublishPostResponse,\n  TranslateCategoryRequest,\n  TranslateCategoryResponse,\n  Category,\n  CategoryTranslation,\n  TranslateDraftRequest,\n  TranslateDraftResponse,\n  IsDraftPostAutoTranslatableRequest,\n  IsDraftPostAutoTranslatableResponse,\n  UpdateDraftPostLanguageRequest,\n  UpdateDraftPostLanguageResponse,\n  BulkUpdateDraftPostLanguageRequest,\n  BulkUpdateDraftPostLanguageResponse,\n  GetPostAmountsByLanguageRequest,\n  GetPostAmountsByLanguageResponse,\n  PostAmountByLanguage,\n  BulkRevertToUnpublishedRequest,\n  BulkRevertToUnpublishedResponse,\n  BulkRejectDraftPostRequest,\n  BulkRejectDraftPostResponse,\n  RevertToUnpublishedRequest,\n  RevertToUnpublishedResponse,\n  RejectDraftPostRequest,\n  RejectDraftPostResponse,\n  ApproveDraftPostRequest,\n  ApproveDraftPostResponse,\n  MarkPostAsInModerationRequest,\n  MarkPostAsInModerationResponse,\n  BaseEventMetadata,\n  EventMetadata,\n  DraftCreatedEnvelope,\n  DraftDeletedEnvelope,\n  DraftUpdatedEnvelope,\n  CreateDraftPostOptions,\n  BulkCreateDraftPostsOptions,\n  BulkUpdateDraftPostsOptions,\n  ListDeletedDraftPostsOptions,\n  GetDraftPostOptions,\n  UpdateDraftPost,\n  UpdateDraftPostOptions,\n  DeleteDraftPostOptions,\n  BulkDeleteDraftPostsOptions,\n  ListDraftPostsOptions,\n  QueryDraftPostsOptions,\n  DraftPostsQueryResult,\n  DraftPostsQueryBuilder,\n} from './blog-v3-draft-draft-posts.universal.js';\n"],"mappings":";AAAA,SAAS,2CAAAA,gDAA+C;AACxD,SAAS,gCAAAC,qCAAoC;AAC7C,SAAS,gCAAAC,qCAAoC;AAC7C,SAAS,oCAAAC,yCAAwC;AACjD,SAAS,wCAAAC,6CAA4C;AACrD,SAAS,kBAAAC,uBAAsB;AAC/B,SAAS,gCAAAC,qCAAoC;AAC7C,SAAS,oCAAAC,yCAAwC;AACjD,SAAS,uBAAqD;;;ACR9D,SAAS,kBAAkB,yBAAyB;AACpD,SAAS,oBAAoB;AAC7B;AAAA,EACE;AAAA,EACA;AAAA,OACK;;;ACLP,SAAS,yBAAyB;AAClC,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAC7C,SAAS,4CAA4C;AACrD,SAAS,4CAA4C;AACrD,SAAS,4CAA4C;AACrD,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAI3B,SAAS,sEACP,MACA;AACA,QAAM,mBAAmB;AAAA,IACvB,mBAAmB;AAAA,MACjB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,GAAG;AAAA,MACD;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,oBAAoB;AAAA,MAClB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,YAAY;AAAA,MACV;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,cAAc;AAAA,MACZ;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,wBAAwB;AAAA,MACtB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,wBAAwB;AAAA,MACtB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,kBAAkB;AAAA,MAChB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,wBAAwB;AAAA,MACtB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,6BAA6B;AAAA,MAC3B;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,mBAAmB;AAAA,MACjB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,qBAAqB;AAAA,MACnB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,SAAO,WAAW,OAAO,OAAO,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAC7D;AAEA,IAAM,eAAe;AAad,SAAS,gBAAgB,SAA6C;AAC3E,WAAS,kBAAkB,EAAE,KAAK,GAAQ;AACxC,UAAM,iBAAiB,eAAe,SAAS;AAAA,MAC7C;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,uBAAuB;AAAA,UAC/B,EAAE,MAAM,iCAAiC;AAAA,UACzC,EAAE,MAAM,+BAA+B;AAAA,UACvC,EAAE,MAAM,wBAAwB;AAAA,UAChC,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,yDAAyD;AAAA,UACjE,EAAE,MAAM,wCAAwC;AAAA,UAChD,EAAE,MAAM,kDAAkD;AAAA,UAC1D,EAAE,MAAM,kDAAkD;AAAA,UAC1D,EAAE,MAAM,4CAA4C;AAAA,UACpD,EAAE,MAAM,6CAA6C;AAAA,UACrD,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,qDAAqD;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,mCAAmC;AAAA,UAC3C,EAAE,MAAM,mCAAmC;AAAA,UAC3C,EAAE,MAAM,8CAA8C;AAAA,UACtD,EAAE,MAAM,8CAA8C;AAAA,UACtD;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,sDAAsD;AAAA,UAC9D,EAAE,MAAM,sDAAsD;AAAA,UAC9D,EAAE,MAAM,2DAA2D;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,2DAA2D;AAAA,UACnE,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,4DAA4D;AAAA,QACtE;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,mBAAmB,MAAM,gBAAgB,KAAK;AAAA,MAC7D;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACC,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,iCAAiC;AAAA,YACzC,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wCAAwC;AAAA,YAChD,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,4CAA4C;AAAA,YACpD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,qDAAqD;AAAA,YAC7D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,8CAA8C;AAAA,YACtD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,qBACd,SAC4B;AAC5B,WAAS,uBAAuB,EAAE,KAAK,GAAQ;AAC7C,UAAM,iBAAiB,eAAe,SAAS;AAAA,MAC7C;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,wBAAwB;AAAA,UAChC,EAAE,MAAM,kCAAkC;AAAA,UAC1C,EAAE,MAAM,gCAAgC;AAAA,UACxC,EAAE,MAAM,yBAAyB;AAAA,UACjC,EAAE,MAAM,gDAAgD;AAAA,UACxD,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,yCAAyC;AAAA,UACjD,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,6CAA6C;AAAA,UACrD,EAAE,MAAM,8CAA8C;AAAA,UACtD,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,sDAAsD;AAAA,UAC9D;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,2CAA2C;AAAA,UACnD,EAAE,MAAM,2CAA2C;AAAA,UACnD,EAAE,MAAM,qDAAqD;AAAA,UAC7D,EAAE,MAAM,qDAAqD;AAAA,UAC7D,EAAE,MAAM,oCAAoC;AAAA,UAC5C,EAAE,MAAM,oCAAoC;AAAA,UAC5C,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,+CAA+C;AAAA,UACvD;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,yDAAyD;AAAA,UACjE,EAAE,MAAM,yDAAyD;AAAA,UACjE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,4DAA4D;AAAA,UACpE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,2DAA2D;AAAA,UACnE,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,4DAA4D;AAAA,UACpE,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,+BAA+B,MAAM,gBAAgB,KAAK;AAAA,MACzE;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0BAA0B;AAAA,YAClC,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,2BAA2B;AAAA,YACnC,EAAE,MAAM,kDAAkD;AAAA,YAC1D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,gDAAgD;AAAA,YACxD,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,iDAAiD;AAAA,YACzD,EAAE,MAAM,iDAAiD;AAAA,YACzD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,qBACd,SAC4B;AAC5B,WAAS,uBAAuB,EAAE,KAAK,GAAQ;AAC7C,UAAM,iBAAiB,eAAe,SAAS;AAAA,MAC7C;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,uBAAuB;AAAA,UAC/B,EAAE,MAAM,kCAAkC;AAAA,UAC1C,EAAE,MAAM,4CAA4C;AAAA,UACpD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,mCAAmC;AAAA,UAC3C,EAAE,MAAM,0DAA0D;AAAA,UAClE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,mDAAmD;AAAA,UAC3D;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,uBAAuB,CAAC;AAAA,MAC1C;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,qDAAqD;AAAA,UAC7D,EAAE,MAAM,qDAAqD;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,8CAA8C;AAAA,UACtD,EAAE,MAAM,8CAA8C;AAAA,UACtD,EAAE,MAAM,yDAAyD;AAAA,UACjE,EAAE,MAAM,yDAAyD;AAAA,UACjE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,0BAA0B,MAAM,gBAAgB,KAAK;AAAA,MACpE;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0BAA0B;AAAA,YAClC,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,2BAA2B;AAAA,YACnC,EAAE,MAAM,kDAAkD;AAAA,YAC1D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,gDAAgD;AAAA,YACxD,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,iDAAiD;AAAA,YACzD,EAAE,MAAM,iDAAiD;AAAA,YACzD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAUO,SAAS,sBACd,SAC4B;AAC5B,WAAS,wBAAwB,EAAE,KAAK,GAAQ;AAC9C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,6BAA6B,MAAM,SAAS,KAAK;AAAA,MAChE;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gDAAgD;AAAA,YACxD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,yCAAyC;AAAA,YACjD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,aAAa,SAA6C;AACxE,WAAS,eAAe,EAAE,KAAK,GAAQ;AACrC,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,iCAAiC,MAAM,SAAS,KAAK;AAAA,MACpE;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,iCAAiC;AAAA,YACzC,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wCAAwC;AAAA,YAChD,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,4CAA4C;AAAA,YACpD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,qDAAqD;AAAA,YAC7D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,8CAA8C;AAAA,YACtD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,gBAAgB,SAA6C;AAC3E,WAAS,kBAAkB,EAAE,KAAK,GAAQ;AACxC,UAAM,iBAAiB,eAAe,SAAS;AAAA,MAC7C;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,YAAY,CAAC;AAAA,MAC/B;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,uBAAuB;AAAA,UAC/B,EAAE,MAAM,uBAAuB;AAAA,UAC/B,EAAE,MAAM,iCAAiC;AAAA,UACzC,EAAE,MAAM,+BAA+B;AAAA,UACvC,EAAE,MAAM,wBAAwB;AAAA,UAChC,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,yDAAyD;AAAA,UACjE,EAAE,MAAM,wCAAwC;AAAA,UAChD,EAAE,MAAM,kDAAkD;AAAA,UAC1D,EAAE,MAAM,kDAAkD;AAAA,UAC1D,EAAE,MAAM,4CAA4C;AAAA,UACpD,EAAE,MAAM,6CAA6C;AAAA,UACrD,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,qDAAqD;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,mCAAmC;AAAA,UAC3C,EAAE,MAAM,mCAAmC;AAAA,UAC3C,EAAE,MAAM,8CAA8C;AAAA,UACtD,EAAE,MAAM,8CAA8C;AAAA,UACtD;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,sDAAsD;AAAA,UAC9D,EAAE,MAAM,sDAAsD;AAAA,UAC9D,EAAE,MAAM,2DAA2D;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,2DAA2D;AAAA,UACnE,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,4DAA4D;AAAA,QACtE;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,iCAAiC;AAAA,YACzC,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wCAAwC;AAAA,YAChD,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,4CAA4C;AAAA,YACpD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,qDAAqD;AAAA,YAC7D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,8CAA8C;AAAA,YACtD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAQO,SAAS,gBAAgB,SAA6C;AAC3E,WAAS,kBAAkB,EAAE,KAAK,GAAQ;AACxC,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,iCAAiC,MAAM,SAAS,KAAK;AAAA,MACpE;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,IACnC;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAOO,SAAS,mBACd,SAC4B;AAC5B,WAAS,qBAAqB,EAAE,KAAK,GAAQ;AAC3C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,IACnC;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,qBACd,SAC4B;AAC5B,WAAS,uBAAuB,EAAE,KAAK,GAAQ;AAC7C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,wBAAwB,MAAM,SAAS,KAAK;AAAA,MAC3D;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0BAA0B;AAAA,YAClC,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,2BAA2B;AAAA,YACnC,EAAE,MAAM,kDAAkD;AAAA,YAC1D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,gDAAgD;AAAA,YACxD,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,sCAAsC;AAAA,YAC9C,EAAE,MAAM,iDAAiD;AAAA,YACzD,EAAE,MAAM,iDAAiD;AAAA,YACzD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAUO,SAAS,eAAe,SAA6C;AAC1E,WAAS,iBAAiB,EAAE,KAAK,GAAQ;AACvC,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,mBAAmB,MAAM,SAAS,KAAK;AAAA,MACtD;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gDAAgD;AAAA,YACxD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,yCAAyC;AAAA,YACjD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,oBACd,SAC4B;AAC5B,WAAS,sBAAsB,EAAE,KAAK,GAAQ;AAC5C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,MACA,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,iCAAiC;AAAA,YACzC,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wCAAwC;AAAA,YAChD,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,4CAA4C;AAAA,YACpD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,qDAAqD;AAAA,YAC7D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,8CAA8C;AAAA,YACtD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,oBACd,SAC4B;AAC5B,WAAS,sBAAsB,EAAE,KAAK,GAAQ;AAC5C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,iCAAiC;AAAA,YACzC,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wCAAwC;AAAA,YAChD,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,kDAAkD;AAAA,YAC1D,EAAE,MAAM,4CAA4C;AAAA,YACpD,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,qDAAqD;AAAA,YAC7D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,0CAA0C;AAAA,YAClD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,mCAAmC;AAAA,YAC3C,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,8CAA8C;AAAA,YACtD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,sDAAsD;AAAA,YAC9D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAkBO,SAAS,gBAAgB,SAA6C;AAC3E,WAAS,kBAAkB,EAAE,KAAK,GAAQ;AACxC,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH,EAAE,WAAW,yBAAyB,MAAM,SAAS,KAAK;AAAA,MAC5D;AAAA,MACA,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,wBAAwB;AAAA,YAChC,EAAE,MAAM,kCAAkC;AAAA,YAC1C,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gDAAgD;AAAA,YACxD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,yCAAyC;AAAA,YACjD,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,mDAAmD;AAAA,YAC3D,EAAE,MAAM,6CAA6C;AAAA,YACrD,EAAE,MAAM,8CAA8C;AAAA,YACtD,EAAE,MAAM,oDAAoD;AAAA,YAC5D,EAAE,MAAM,sDAAsD;AAAA,YAC9D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,2CAA2C;AAAA,YACnD,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,qDAAqD;AAAA,YAC7D,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,oCAAoC;AAAA,YAC5C,EAAE,MAAM,+CAA+C;AAAA,YACvD,EAAE,MAAM,+CAA+C;AAAA,YACvD;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE,EAAE,MAAM,uDAAuD;AAAA,YAC/D,EAAE,MAAM,uDAAuD;AAAA,YAC/D;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA,EAAE,MAAM,wDAAwD;AAAA,YAChE;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AASO,SAAS,iBAAiB,SAA6C;AAC5E,WAAS,mBAAmB,EAAE,KAAK,GAAQ;AACzC,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM;AAAA,IACR;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;;;AD31DA,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAC7C,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAC7C,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,kBAAAC,uBAAsB;AA4LxB,IAAK,SAAL,kBAAKC,YAAL;AACL,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,WAAQ;AAER,EAAAA,QAAA,oBAAiB;AAEjB,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,mBAAgB;AAEhB,EAAAA,QAAA,YAAS;AAET,EAAAA,QAAA,iBAAc;AAEd,EAAAA,QAAA,iBAAc;AAEd,EAAAA,QAAA,kBAAe;AAEf,EAAAA,QAAA,qBAAkB;AAElB,EAAAA,QAAA,iBAAc;AAEd,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,gBAAa;AAEb,EAAAA,QAAA,mBAAgB;AAEhB,EAAAA,QAAA,0BAAuB;AAEvB,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,oBAAiB;AAEjB,EAAAA,QAAA,YAAS;AAET,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,qBAAkB;AAElB,EAAAA,QAAA,iBAAc;AAEd,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,gBAAa;AAEb,EAAAA,QAAA,sBAAmB;AAEnB,EAAAA,QAAA,iCAA8B;AAE9B,EAAAA,QAAA,mCAAgC;AAEhC,EAAAA,QAAA,gCAA6B;AAE7B,EAAAA,QAAA,cAAW;AAEX,EAAAA,QAAA,4BAAyB;AAEzB,EAAAA,QAAA,4BAAyB;AAEzB,EAAAA,QAAA,2BAAwB;AAExB,EAAAA,QAAA,gBAAa;AAEb,EAAAA,QAAA,SAAM;AAEN,EAAAA,QAAA,WAAQ;AAER,EAAAA,QAAA,kBAAe;AAvEL,SAAAA;AAAA,GAAA;AAsPL,IAAK,WAAL,kBAAKC,cAAL;AACL,EAAAA,UAAA,eAAY;AACZ,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,aAAU;AACV,EAAAA,UAAA,mBAAgB;AAChB,EAAAA,UAAA,kBAAe;AACf,EAAAA,UAAA,eAAY;AACZ,EAAAA,UAAA,gBAAa;AACb,EAAAA,UAAA,gBAAa;AACb,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,aAAU;AACV,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,aAAU;AACV,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,kBAAe;AAEf,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,eAAY;AACZ,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,sBAAmB;AACnB,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,sBAAmB;AACnB,EAAAA,UAAA,4BAAyB;AACzB,EAAAA,UAAA,2BAAwB;AACxB,EAAAA,UAAA,gBAAa;AACb,EAAAA,UAAA,eAAY;AACZ,EAAAA,UAAA,cAAW;AACX,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,aAAU;AACV,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,iBAAc;AAlCJ,SAAAA;AAAA,GAAA;AA4IL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,aAAU;AAEV,EAAAA,WAAA,WAAQ;AAER,EAAAA,WAAA,cAAW;AAEX,EAAAA,WAAA,gBAAa;AARH,SAAAA;AAAA,GAAA;AA+CL,IAAK,+BAAL,kBAAKC,kCAAL;AAEL,EAAAA,8BAAA,YAAS;AAET,EAAAA,8BAAA,UAAO;AAEP,EAAAA,8BAAA,WAAQ;AANE,SAAAA;AAAA,GAAA;AA8BL,IAAK,iBAAL,kBAAKC,oBAAL;AAEL,EAAAA,gBAAA,UAAO;AAEP,EAAAA,gBAAA,YAAS;AAJC,SAAAA;AAAA,GAAA;AA2FL,IAAK,SAAL,kBAAKC,YAAL;AAEL,EAAAA,QAAA,UAAO;AAEP,EAAAA,QAAA,WAAQ;AAER,EAAAA,QAAA,YAAS;AAET,EAAAA,QAAA,SAAM;AARI,SAAAA;AAAA,GAAA;AAqCL,IAAK,gBAAL,kBAAKC,mBAAL;AAEL,EAAAA,eAAA,UAAO;AAEP,EAAAA,eAAA,UAAO;AAEP,EAAAA,eAAA,WAAQ;AAER,EAAAA,eAAA,YAAS;AAET,EAAAA,eAAA,aAAU;AAVA,SAAAA;AAAA,GAAA;AAiCL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,YAAS;AAET,EAAAA,WAAA,YAAS;AAET,EAAAA,WAAA,YAAS;AAET,EAAAA,WAAA,YAAS;AARC,SAAAA;AAAA,GAAA;AAmBL,IAAK,QAAL,kBAAKC,WAAL;AAEL,EAAAA,OAAA,WAAQ;AAER,EAAAA,OAAA,YAAS;AAET,EAAAA,OAAA,WAAQ;AANE,SAAAA;AAAA,GAAA;AAYL,IAAK,uBAAL,kBAAKC,0BAAL;AAEL,EAAAA,sBAAA,YAAS;AAET,EAAAA,sBAAA,UAAO;AAEP,EAAAA,sBAAA,WAAQ;AANE,SAAAA;AAAA,GAAA;AAwCL,IAAK,WAAL,kBAAKC,cAAL;AAEL,EAAAA,UAAA,UAAO;AAEP,EAAAA,UAAA,UAAO;AAEP,EAAAA,UAAA,UAAO;AANG,SAAAA;AAAA,GAAA;AAuHL,IAAK,aAAL,kBAAKC,gBAAL;AAEL,EAAAA,YAAA,aAAU;AAEV,EAAAA,YAAA,aAAU;AAEV,EAAAA,YAAA,UAAO;AAEP,EAAAA,YAAA,eAAY;AAEZ,EAAAA,YAAA,YAAS;AAET,EAAAA,YAAA,eAAY;AAEZ,EAAAA,YAAA,cAAW;AAEX,EAAAA,YAAA,YAAS;AAET,EAAAA,YAAA,WAAQ;AAER,EAAAA,YAAA,cAAW;AApBD,SAAAA;AAAA,GAAA;AAqCL,IAAK,cAAL,kBAAKC,iBAAL;AAEL,EAAAA,aAAA,UAAO;AAEP,EAAAA,aAAA,aAAU;AAJA,SAAAA;AAAA,GAAA;AAUL,IAAK,OAAL,kBAAKC,UAAL;AAEL,EAAAA,MAAA,UAAO;AAEP,EAAAA,MAAA,SAAM;AAJI,SAAAA;AAAA,GAAA;AAUL,IAAK,sBAAL,kBAAKC,yBAAL;AAEL,EAAAA,qBAAA,SAAM;AAEN,EAAAA,qBAAA,WAAQ;AAER,EAAAA,qBAAA,YAAS;AAET,EAAAA,qBAAA,UAAO;AAEP,EAAAA,qBAAA,UAAO;AAVG,SAAAA;AAAA,GAAA;AAsFL,IAAK,UAAL,kBAAKC,aAAL;AACL,EAAAA,SAAA,YAAS;AACT,EAAAA,SAAA,aAAU;AAFA,SAAAA;AAAA,GAAA;AAgDL,IAAK,SAAL,kBAAKC,YAAL;AACL,EAAAA,QAAA,UAAO;AACP,EAAAA,QAAA,aAAU;AAFA,SAAAA;AAAA,GAAA;AAkEL,IAAK,iBAAL,kBAAKC,oBAAL;AAEL,EAAAA,gBAAA,WAAQ;AAER,EAAAA,gBAAA,SAAM;AAEN,EAAAA,gBAAA,SAAM;AAEN,EAAAA,gBAAA,YAAS;AARC,SAAAA;AAAA,GAAA;AAqFL,IAAK,UAAL,kBAAKC,aAAL;AAEL,EAAAA,SAAA,aAAU;AAEV,EAAAA,SAAA,cAAW;AAEX,EAAAA,SAAA,YAAS;AAET,EAAAA,SAAA,aAAU;AARA,SAAAA;AAAA,GAAA;AAuCL,IAAK,WAAL,kBAAKC,cAAL;AAEL,EAAAA,UAAA,aAAU;AAEV,EAAAA,UAAA,YAAS;AAET,EAAAA,UAAA,cAAW;AAND,SAAAA;AAAA,GAAA;AAYL,IAAK,WAAL,kBAAKC,cAAL;AAEL,EAAAA,UAAA,kBAAe;AAEf,EAAAA,UAAA,SAAM;AAJI,SAAAA;AAAA,GAAA;AAqCL,IAAK,iBAAL,kBAAKC,oBAAL;AAEL,EAAAA,gBAAA,UAAO;AAEP,EAAAA,gBAAA,UAAO;AAJG,SAAAA;AAAA,GAAA;AAUL,IAAK,sBAAL,kBAAKC,yBAAL;AAEL,EAAAA,qBAAA,SAAM;AAEN,EAAAA,qBAAA,SAAM;AAJI,SAAAA;AAAA,GAAA;AA2BL,IAAK,iBAAL,kBAAKC,oBAAL;AAEL,EAAAA,gBAAA,WAAQ;AAER,EAAAA,gBAAA,WAAQ;AAER,EAAAA,gBAAA,cAAW;AAND,SAAAA;AAAA,GAAA;AAoKL,IAAK,iBAAL,kBAAKC,oBAAL;AACL,EAAAA,gBAAA,UAAO;AACP,EAAAA,gBAAA,YAAS;AACT,EAAAA,gBAAA,eAAY;AACZ,EAAAA,gBAAA,aAAU;AACV,EAAAA,gBAAA,YAAS;AACT,EAAAA,gBAAA,aAAU;AACV,EAAAA,gBAAA,UAAO;AACP,EAAAA,gBAAA,WAAQ;AACR,EAAAA,gBAAA,eAAY;AACZ,EAAAA,gBAAA,cAAW;AACX,EAAAA,gBAAA,mBAAgB;AAChB,EAAAA,gBAAA,iBAAc;AACd,EAAAA,gBAAA,eAAY;AAbF,SAAAA;AAAA,GAAA;AAkEL,IAAK,WAAL,kBAAKC,cAAL;AACL,EAAAA,UAAA,QAAK;AACL,EAAAA,UAAA,QAAK;AAFK,SAAAA;AAAA,GAAA;AAyEL,IAAK,WAAL,kBAAKC,cAAL;AAEL,EAAAA,UAAA,WAAQ;AAER,EAAAA,UAAA,SAAM;AAEN,EAAAA,UAAA,SAAM;AANI,SAAAA;AAAA,GAAA;AAYL,IAAK,cAAL,kBAAKC,iBAAL;AAEL,EAAAA,aAAA,YAAS;AAET,EAAAA,aAAA,eAAY;AAJF,SAAAA;AAAA,GAAA;AAUL,IAAK,WAAL,kBAAKC,cAAL;AAEL,EAAAA,UAAA,UAAO;AAEP,EAAAA,UAAA,SAAM;AAJI,SAAAA;AAAA,GAAA;AAUL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,WAAQ;AAER,EAAAA,WAAA,kBAAe;AAJL,SAAAA;AAAA,GAAA;AAUL,IAAK,iBAAL,kBAAKC,oBAAL;AAEL,EAAAA,gBAAA,eAAY;AAEZ,EAAAA,gBAAA,eAAY;AAJF,SAAAA;AAAA,GAAA;AAaL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,WAAQ;AAER,EAAAA,WAAA,YAAS;AAET,EAAAA,WAAA,SAAM;AANI,SAAAA;AAAA,GAAA;AAYL,IAAK,SAAL,kBAAKC,YAAL;AAEL,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,kBAAe;AAJL,SAAAA;AAAA,GAAA;AAUL,IAAK,UAAL,kBAAKC,aAAL;AACL,EAAAA,SAAA,aAAU;AACV,EAAAA,SAAA,WAAQ;AACR,EAAAA,SAAA,aAAU;AAHA,SAAAA;AAAA,GAAA;AAwPL,IAAK,uBAAL,kBAAKC,0BAAL;AAEL,EAAAA,sBAAA,WAAQ;AAER,EAAAA,sBAAA,SAAM;AAEN,EAAAA,sBAAA,UAAO;AANG,SAAAA;AAAA,GAAA;AAgBL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,SAAM;AAEN,EAAAA,WAAA,SAAM;AAJI,SAAAA;AAAA,GAAA;AA0CL,IAAK,oBAAL,kBAAKC,uBAAL;AAEL,EAAAA,mBAAA,SAAM;AAEN,EAAAA,mBAAA,YAAS;AAET,EAAAA,mBAAA,YAAS;AANC,SAAAA;AAAA,GAAA;AAuDL,IAAK,YAAL,kBAAKC,eAAL;AAEL,EAAAA,WAAA,gBAAa;AAFH,SAAAA;AAAA,GAAA;AAiHL,IAAK,SAAL,kBAAKC,YAAL;AACL,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,iBAAc;AAEd,EAAAA,QAAA,eAAY;AAEZ,EAAAA,QAAA,aAAU;AAEV,EAAAA,QAAA,eAAY;AAXF,SAAAA;AAAA,GAAA;AA2CL,IAAK,yBAAL,kBAAKC,4BAAL;AACL,EAAAA,wBAAA,aAAU;AACV,EAAAA,wBAAA,cAAW;AACX,EAAAA,wBAAA,cAAW;AAHD,SAAAA;AAAA,GAAA;AAoOL,IAAK,+BAAL,kBAAKC,kCAAL;AAEL,EAAAA,8BAAA,YAAS;AAET,EAAAA,8BAAA,cAAW;AAJD,SAAAA;AAAA,GAAA;AAqKL,IAAK,sBAAL,kBAAKC,yBAAL;AACL,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,uBAAoB;AACpB,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,SAAM;AALI,SAAAA;AAAA,GAAA;AAwCL,IAAK,OAAL,kBAAKC,UAAL;AACL,EAAAA,MAAA,aAAU;AAEV,EAAAA,MAAA,YAAS;AAET,EAAAA,MAAA,eAAY;AAEZ,EAAAA,MAAA,kBAAe;AAEf,EAAAA,MAAA,YAAS;AAET,EAAAA,MAAA,kBAAe;AAXL,SAAAA;AAAA,GAAA;AAwBL,IAAK,QAAL,kBAAKC,WAAL;AAEL,EAAAA,OAAA,aAAU;AAEV,EAAAA,OAAA,SAAM;AAEN,EAAAA,OAAA,aAAU;AAEV,EAAAA,OAAA,kBAAe;AAEf,EAAAA,OAAA,uBAAoB;AAVV,SAAAA;AAAA,GAAA;AA2HL,IAAK,SAAL,kBAAKC,YAAL;AAEL,EAAAA,QAAA,YAAS;AAET,EAAAA,QAAA,oBAAiB;AAEjB,EAAAA,QAAA,qBAAkB;AAElB,EAAAA,QAAA,4BAAyB;AAEzB,EAAAA,QAAA,4BAAyB;AAEzB,EAAAA,QAAA,mBAAgB;AAEhB,EAAAA,QAAA,wBAAqB;AAdX,SAAAA;AAAA,GAAA;AAqEL,IAAK,oBAAL,kBAAKC,uBAAL;AAEL,EAAAA,mBAAA,uBAAoB;AAEpB,EAAAA,mBAAA,sBAAmB;AAJT,SAAAA;AAAA,GAAA;AA2TL,IAAK,YAAL,kBAAKC,eAAL;AACL,EAAAA,WAAA,SAAM;AACN,EAAAA,WAAA,UAAO;AAFG,SAAAA;AAAA,GAAA;AAqnBZ,eAAsBC,iBACpB,WACA,SAMA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAUhD;AAAA,IACd;AAAA,MACE;AAAA,QACE;AAAA,QACA,SAAS,SAAS;AAAA,QAClB,WAAW,SAAS;AAAA,MACtB;AAAA,MACA,CAAC,uBAAuB;AAAA,IAC1B;AAAA,IACA;AAAA,MACE;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,sBAAsB;AAAA,UAC9B,EAAE,MAAM,6BAA6B;AAAA,UACrC,EAAE,MAAM,iCAAiC;AAAA,QAC3C;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,gBAAgB;AAAA,UACxB,EAAE,MAAM,6BAA6B;AAAA,QACvC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,MAChD;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAmC,gBAAgB,OAAO;AAEhE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLA,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,sBAAsB;AAAA,YAC9B,EAAE,MAAM,6BAA6B;AAAA,YACrC,EAAE,MAAM,iCAAiC;AAAA,UAC3C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,gBAAgB;AAAA,YACxB,EAAE,MAAM,6BAA6B;AAAA,UACvC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,QACtD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,uBAAuB;AAAA,IAC1B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,WAAW;AAAA,UACX,SAAS;AAAA,UACT,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa,SAAS;AAAA,IACzB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AA6BA,eAAsBiD,sBACpB,YACA,SAgBA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAUjD;AAAA,IACd;AAAA,MACE;AAAA,QACE;AAAA,QACA,SAAS,SAAS;AAAA,QAClB,kBAAkB,SAAS;AAAA,QAC3B,WAAW,SAAS;AAAA,MACtB;AAAA,MACA,CAAC,wBAAwB;AAAA,IAC3B;AAAA,IACA;AAAA,MACE;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,uBAAuB;AAAA,UAC/B,EAAE,MAAM,8BAA8B;AAAA,UACtC,EAAE,MAAM,kCAAkC;AAAA,QAC5C;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,iBAAiB;AAAA,UACzB,EAAE,MAAM,8BAA8B;AAAA,QACxC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,8BAA8B,CAAC;AAAA,MACjD;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,oCAAoC,CAAC;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAmC,qBAAqB,OAAO;AAErE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLA,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,oCAAoC;AAAA,UAC9C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,mBAAmB;AAAA,YAC3B,EAAE,MAAM,gCAAgC;AAAA,UAC1C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,QACnD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,sCAAsC,CAAC;AAAA,QACzD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,0BAA0B;AAAA,IAC7B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,YAAY;AAAA,UACZ,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,cAAc,SAAS;AAAA,IAC1B;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AA0BA,eAAsBkD,sBACpB,SAmBA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAUlD;AAAA,IACd;AAAA,MACE;AAAA,QACE,YAAY,SAAS;AAAA,QACrB,QAAQ,SAAS;AAAA,QACjB,sBAAsB,SAAS;AAAA,QAC/B,kBAAkB,SAAS;AAAA,QAC3B,WAAW,SAAS;AAAA,MACtB;AAAA,MACA,CAAC,kCAAkC;AAAA,IACrC;AAAA,IACA;AAAA,MACE;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,iCAAiC;AAAA,UACzC,EAAE,MAAM,wCAAwC;AAAA,UAChD,EAAE,MAAM,4CAA4C;AAAA,QACtD;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,2BAA2B;AAAA,UACnC,EAAE,MAAM,wCAAwC;AAAA,QAClD;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,wCAAwC,CAAC;AAAA,MAC3D;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,8CAA8C,CAAC;AAAA,MACjE;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAmC,qBAAqB,OAAO;AAErE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLA,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,oCAAoC;AAAA,UAC9C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,mBAAmB;AAAA,YAC3B,EAAE,MAAM,gCAAgC;AAAA,UAC1C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,QACnD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,sCAAsC,CAAC;AAAA,QACzD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,0BAA0B;AAAA,IAC7B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,sBAAsB;AAAA,UACtB,kBAAkB;AAAA,UAClB,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,SAAS;AAAA,IACZ;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAyCA,eAAsBmD,uBACpB,SAQA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd;AAAA,MACE,UAAU,SAAS;AAAA,MACnB,MAAM,SAAS;AAAA,MACf,QAAQ,SAAS;AAAA,MACjB,WAAW,SAAS;AAAA,MACpB,cAAc,SAAS;AAAA,IACzB;AAAA,IACA,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,sBAAsB,OAAO;AAEtE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLnD,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,8BAA8B;AAAA,YACtC,EAAE,MAAM,kCAAkC;AAAA,UAC5C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,iBAAiB;AAAA,YACzB,EAAE,MAAM,8BAA8B;AAAA,UACxC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,8BAA8B,CAAC;AAAA,QACjD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,oCAAoC,CAAC;AAAA,QACvD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,wBAAwB;AAAA,IAC3B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,cAAc;AAAA,QAChB;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,SAAS;AAAA,IACZ;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AA4CA,eAAsBoD,cACpB,aACA,SAMA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,aAA0B,WAAW,SAAS,UAAU;AAAA,IAC1D,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,aAAa,OAAO;AAE7D,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLpD,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,sBAAsB;AAAA,YAC9B,EAAE,MAAM,6BAA6B;AAAA,YACrC,EAAE,MAAM,iCAAiC;AAAA,UAC3C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,gBAAgB;AAAA,YACxB,EAAE,MAAM,6BAA6B;AAAA,UACvC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,QACtD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,uBAAuB;AAAA,IAC1B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,aAAa;AAAA,UACb,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe,SAAS;AAAA,IAC3B;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAwBA,eAAsBqD,iBACpB,KACA,WACA,SAMA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAUrD;AAAA,IACd;AAAA,MACE;AAAA,QACE,WAAW,EAAE,GAAG,WAAW,IAAI,IAAI;AAAA,QACnC,QAAQ,SAAS;AAAA,QACjB,sBAAsB,SAAS;AAAA,QAC/B,WAAW,SAAS;AAAA,MACtB;AAAA,MACA,CAAC,uBAAuB;AAAA,IAC1B;AAAA,IACA;AAAA,MACE;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,sBAAsB;AAAA,UAC9B,EAAE,MAAM,6BAA6B;AAAA,UACrC,EAAE,MAAM,iCAAiC;AAAA,QAC3C;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,gBAAgB;AAAA,UACxB,EAAE,MAAM,6BAA6B;AAAA,QACvC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,MAChD;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAmC,gBAAgB,OAAO;AAEhE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLA,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,sBAAsB;AAAA,YAC9B,EAAE,MAAM,6BAA6B;AAAA,YACrC,EAAE,MAAM,iCAAiC;AAAA,UAC3C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,gBAAgB;AAAA,YACxB,EAAE,MAAM,6BAA6B;AAAA,UACvC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,QACtD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,uBAAuB;AAAA,IAC1B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,EAAE,WAAW,OAAO;AAAA,QAC5C,0BAA0B;AAAA,UACxB,gBAAgB;AAAA,UAChB,QAAQ;AAAA,UACR,sBAAsB;AAAA,UACtB,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,OAAO,aAAa,SAAS;AAAA,IAChC;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAyKA,eAAsBsD,iBACpB,aACA,SACe;AAEf,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,aAA0B,WAAW,SAAS,UAAU;AAAA,IAC1D,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,gBAAgB,OAAO;AAEhE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAAA,EACjC,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,aAAa;AAAA,UACb,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe,SAAS;AAAA,IAC3B;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAsBA,eAAsBC,oBAAmB,aAAoC;AAE3E,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,YAAyB;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,mBAAmB,OAAO;AAEnE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAAA,EACjC,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,aAAa,OAAO;AAAA,QAChD,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa;AAAA,IAChB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAYA,eAAsBC,sBACpB,SACA,SAgBA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,SAAkB,WAAW,SAAS,UAAU;AAAA,IAClD,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,qBAAqB,OAAO;AAErE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLxD,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,yBAAyB;AAAA,YACjC,EAAE,MAAM,gCAAgC;AAAA,YACxC,EAAE,MAAM,oCAAoC;AAAA,UAC9C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,mBAAmB;AAAA,YAC3B,EAAE,MAAM,gCAAgC;AAAA,UAC1C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,QACnD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,sCAAsC,CAAC;AAAA,QACzD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,0BAA0B;AAAA,IAC7B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,SAAS;AAAA,UACT,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,WAAW,SAAS;AAAA,IACvB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAoBA,eAAsByD,gBACpB,SAWA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd;AAAA,MACE,QAAQ,SAAS;AAAA,MACjB,UAAU,SAAS;AAAA,MACnB,MAAM,SAAS;AAAA,MACf,QAAQ,SAAS;AAAA,MACjB,WAAW,SAAS;AAAA,IACtB;AAAA,IACA,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,eAAe,OAAO;AAE/D,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLzD,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,uBAAuB;AAAA,YAC/B,EAAE,MAAM,8BAA8B;AAAA,YACtC,EAAE,MAAM,kCAAkC;AAAA,UAC5C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,iBAAiB;AAAA,YACzB,EAAE,MAAM,8BAA8B;AAAA,UACxC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,8BAA8B,CAAC;AAAA,QACjD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,oCAAoC,CAAC;AAAA,QACvD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,wBAAwB;AAAA,IAC3B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B;AAAA,UACxB,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,WAAW;AAAA,QACb;AAAA,QACA,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,SAAS;AAAA,IACZ;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AA2CA,eAAsB0D,qBACpB,aAMA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,YAAyB;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,oBAAoB,OAAO;AAEpE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACL1D,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,sBAAsB;AAAA,YAC9B,EAAE,MAAM,6BAA6B;AAAA,YACrC,EAAE,MAAM,iCAAiC;AAAA,UAC3C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,gBAAgB;AAAA,YACxB,EAAE,MAAM,6BAA6B;AAAA,UACvC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,QACtD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,uBAAuB;AAAA,IAC1B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,aAAa,OAAO;AAAA,QAChD,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa;AAAA,IAChB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAWA,eAAsB2D,qBACpB,aAMA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,YAAyB;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,oBAAoB,OAAO;AAEpE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACL3D,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,sBAAsB;AAAA,YAC9B,EAAE,MAAM,6BAA6B;AAAA,YACrC,EAAE,MAAM,iCAAiC;AAAA,UAC3C;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,gBAAgB;AAAA,YACxB,EAAE,MAAM,6BAA6B;AAAA,UACvC;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,6BAA6B,CAAC;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mCAAmC,CAAC;AAAA,QACtD;AAAA,MACF,CAAC;AAAA,MACD,CAAC,uBAAuB;AAAA,IAC1B;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,aAAa,OAAO;AAAA,QAChD,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa;AAAA,IAChB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAuBO,SAAS4D,iBACd,SACwB;AAExB,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,SAAO,aAKL;AAAA,IACA,MAAM,OAAO,YAAoC;AAC/C,YAAM,UAAmC,gBAAgB;AAAA,QACvD,GAAG;AAAA,QACH,GAAI,WAAW,CAAC;AAAA,MAClB,CAAC;AAED,mBAAa,aAAa;AAC1B,UAAI;AACF,cAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,qBAAa,YAAY,MAAM;AAC/B,eAAO;AAAA,MACT,SAAS,KAAK;AACZ,qBAAa,UAAU,GAAG;AAC1B,cAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,oBAAoB,CAAC,UAA2C;AAC9D,YAAM,OAAO,CAAC,OAAO,OAAO;AAI5B,aAAO;AAAA,QACL,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO,OAAO,CAAC,EAAE;AAAA,QACjC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,qBAAqB,CAAC,EAAE,KAAK,MAA6C;AACxE,YAAM,kBAAkB;AAAA,QACtB5D,gBAAe,MAAM;AAAA,UACnB;AAAA,YACE,aAAa;AAAA,YACb,OAAO;AAAA,cACL,EAAE,MAAM,uBAAuB;AAAA,cAC/B,EAAE,MAAM,8BAA8B;AAAA,cACtC,EAAE,MAAM,kCAAkC;AAAA,YAC5C;AAAA,UACF;AAAA,UACA;AAAA,YACE,aAAa;AAAA,YACb,OAAO;AAAA,cACL,EAAE,MAAM,iBAAiB;AAAA,cACzB,EAAE,MAAM,8BAA8B;AAAA,YACxC;AAAA,UACF;AAAA,UACA;AAAA,YACE,aAAa;AAAA,YACb,OAAO,CAAC,EAAE,MAAM,8BAA8B,CAAC;AAAA,UACjD;AAAA,UACA;AAAA,YACE,aAAa;AAAA,YACb,OAAO,CAAC,EAAE,MAAM,oCAAoC,CAAC;AAAA,UACvD;AAAA,QACF,CAAC;AAAA,QACD,CAAC,wBAAwB;AAAA,MAC3B;AAEA,aAAO;AAAA,QACL,OAAO,iBAAiB;AAAA,QACxB,gBAAgB,iBAAiB;AAAA,MACnC;AAAA,IACF;AAAA,IACA,kBAAkB,CAAC,QAAiB;AAClC,YAAM,mBAAmB,kBAAkB,KAAK;AAAA,QAC9C,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,OAAO,OAAO;AAAA,QAC1C,yBAAyB;AAAA,MAC3B,CAAC;AAED,YAAM;AAAA,IACR;AAAA,IACA,cAAc;AAAA,IACd,qBAAqB,CAAC;AAAA,EACxB,CAAC;AACH;AAkMA,eAAsB6D,kBACpB,aAC+D;AAE/D,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU;AAAA,IACd,EAAE,YAAyB;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,QAAM,UAAmC,iBAAiB,OAAO;AAEjE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO,wCAAwC,OAAO,MAAM,CAAC,CAAC;AAAA,EAChE,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,aAAa,OAAO;AAAA,QAChD,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa;AAAA,IAChB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;;;AD9gLO,SAASC,iBACd,YAC0B;AAC1B,SAAO,CACL,WACA,YAEAA;AAAA,IACE;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AA2BO,SAASC,sBACd,YAC+B;AAC/B,SAAO,CACL,YACA,YAEAA;AAAA,IACE;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AA6BO,SAASC,sBACd,YAC+B;AAC/B,SAAO,CACL,YAKAA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AA8BO,SAASC,uBACd,YACgC;AAChC,SAAO,CAAC,YACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAsBO,SAASC,cAAa,YAA+C;AAC1E,SAAO,CAAC,aAAqB,YAC3BA;AAAA,IACE;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAgBO,SAASC,iBACd,YAC0B;AAC1B,SAAO,CACL,KACA,WACA,YAEAA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAqBO,SAASC,iBACd,YAC0B;AAC1B,SAAO,CAAC,aAAqB,YAC3BA;AAAA,IACE;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAcO,SAASC,oBACd,YAC6B;AAC7B,SAAO,CAAC,gBACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAYO,SAASC,sBACd,YAC+B;AAC/B,SAAO,CAAC,SAAmB,YACzBA;AAAA,IACE;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AA0BO,SAASC,gBACd,YACyB;AACzB,SAAO,CAAC,YACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAyBO,SAASC,qBACd,YAC8B;AAC9B,SAAO,CAAC,gBACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAeO,SAASC,qBACd,YAC8B;AAC9B,SAAO,CAAC,gBACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAeO,SAASC,iBACd,YAC0B;AAC1B,SAAO,CAAC,YACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAuBO,SAASC,kBACd,YAC2B;AAC3B,SAAO,CAAC,gBACNA;AAAA,IACE;AAAA;AAAA,IAEA,EAAE,WAAW;AAAA,EACf;AACJ;AAgBO,IAAM,iBAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,CAAC,UACCC;AAAA,IACEC,gBAAe,OAAO;AAAA,MACpB;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,mBAAmB;AAAA,UAC3B,EAAE,MAAM,0BAA0B;AAAA,UAClC,EAAE,MAAM,8BAA8B;AAAA,QACxC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,oBAAoB;AAAA,UAC5B,EAAE,MAAM,8BAA8B;AAAA,UACtC,EAAE,MAAM,4BAA4B;AAAA,UACpC,EAAE,MAAM,qBAAqB;AAAA,UAC7B,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,yCAAyC;AAAA,UACjD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,qBAAqB;AAAA,QAC/B;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,aAAa,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAAA,MACrE;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,0BAA0B,CAAC;AAAA,MAC7C;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,yDAAyD;AAAA,QACnE;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,MACnD;AAAA,IACF,CAAC;AAAA,EACH;AACJ,EAAwB;AACjB,IAAM,iBAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,CAAC,UACCP;AAAA,IACEC,gBAAe,OAAO;AAAA,MACpB;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,mBAAmB;AAAA,UAC3B,EAAE,MAAM,0BAA0B;AAAA,UAClC,EAAE,MAAM,8BAA8B;AAAA,QACxC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,oBAAoB;AAAA,UAC5B,EAAE,MAAM,8BAA8B;AAAA,UACtC,EAAE,MAAM,4BAA4B;AAAA,UACpC,EAAE,MAAM,qBAAqB;AAAA,UAC7B,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,yCAAyC;AAAA,UACjD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,qBAAqB;AAAA,QAC/B;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,aAAa,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAAA,MACrE;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,0BAA0B,CAAC;AAAA,MAC7C;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,yDAAyD;AAAA,QACnE;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,MACnD;AAAA,IACF,CAAC;AAAA,EACH;AACJ,EAAwB;AACjB,IAAM,iBAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,CAAC,UACCP;AAAA,IACEC,gBAAe,OAAO;AAAA,MACpB;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,mBAAmB;AAAA,UAC3B,EAAE,MAAM,0BAA0B;AAAA,UAClC,EAAE,MAAM,8BAA8B;AAAA,QACxC;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,oBAAoB;AAAA,UAC5B,EAAE,MAAM,8BAA8B;AAAA,UACtC,EAAE,MAAM,4BAA4B;AAAA,UACpC,EAAE,MAAM,qBAAqB;AAAA,UAC7B,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,+CAA+C;AAAA,UACvD,EAAE,MAAM,yCAAyC;AAAA,UACjD,EAAE,MAAM,0CAA0C;AAAA,UAClD,EAAE,MAAM,qBAAqB;AAAA,QAC/B;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,aAAa,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAAA,MACrE;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,0BAA0B,CAAC;AAAA,MAC7C;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO;AAAA,UACL;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,0DAA0D;AAAA,UAClE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,mDAAmD;AAAA,UAC3D,EAAE,MAAM,wDAAwD;AAAA,UAChE;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,uDAAuD;AAAA,UAC/D,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,wDAAwD;AAAA,UAChE,EAAE,MAAM,oDAAoD;AAAA,UAC5D,EAAE,MAAM,yDAAyD;AAAA,QACnE;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAaC;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,gCAAgC,CAAC;AAAA,MACnD;AAAA,IACF,CAAC;AAAA,EACH;AACJ,EAAwB;;;AGrtBxB,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAU3B,IAAMC,mBAEK,iCAAiBA,gBAAqB;AACjD,IAAMC,wBAGK,iCAAiBA,qBAA0B;AACtD,IAAMC,wBAGK,iCAAiBA,qBAA0B;AACtD,IAAMC,yBAGK,iCAAiBA,sBAA2B;AACvD,IAAMC,gBAEK,iCAAiBA,aAAkB;AAC9C,IAAMC,mBAEK,iCAAiBA,gBAAqB;AACjD,IAAMC,mBAEK,iCAAiBA,gBAAqB;AACjD,IAAMC,sBAGK,iCAAiBA,mBAAwB;AACpD,IAAMC,wBAGK,iCAAiBA,qBAA0B;AACtD,IAAMC,kBAEK,iCAAiBA,eAAoB;AAChD,IAAMC,uBAGK,iCAAiBA,oBAAyB;AACrD,IAAMC,uBAGK,iCAAiBA,oBAAyB;AACrD,IAAMC,mBAEK,iCAAiBA,gBAAqB;AACjD,IAAMC,oBAGK,iCAAiBA,iBAAsB;AAIlD,IAAMC,kBACX,kBAAkB,cAAoB;AAIjC,IAAMC,kBACX,kBAAkB,cAAoB;AAIjC,IAAMC,kBACX,kBAAkB,cAAoB;","names":["renameKeysFromRESTResponseToSDKResponse","transformRESTFloatToSDKFloat","transformRESTImageToSDKImage","transformRESTPageURLToSDKPageURL","transformRESTTimestampToSDKTimestamp","transformPaths","transformRESTVideoToSDKVideo","transformRESTVideoV2ToSDKVideoV2","payload","transformPaths","Origin","NodeType","WidthType","PluginContainerDataAlignment","ButtonDataType","Target","TextAlignment","LineStyle","Width","DividerDataAlignment","ViewMode","LayoutType","Orientation","Crop","ThumbnailsAlignment","GIFType","Source","StylesPosition","MapType","ViewRole","VoteRole","PollLayoutType","PollLayoutDirection","BackgroundType","DecorationType","FontType","Position","AspectRatio","Resizing","Placement","CardStylesType","Alignment","Layout","AppType","InitialExpandedItems","Direction","VerticalAlignment","NullValue","Status","ModerationStatusStatus","TotalDraftPostsGroupingField","WebhookIdentityType","Type","Field","Action","GetDraftPostsSort","SortOrder","createDraftPost","bulkCreateDraftPosts","bulkUpdateDraftPosts","listDeletedDraftPosts","getDraftPost","updateDraftPost","deleteDraftPost","removeFromTrashBin","bulkDeleteDraftPosts","listDraftPosts","getDeletedDraftPost","restoreFromTrashBin","queryDraftPosts","publishDraftPost","createDraftPost","bulkCreateDraftPosts","bulkUpdateDraftPosts","listDeletedDraftPosts","getDraftPost","updateDraftPost","deleteDraftPost","removeFromTrashBin","bulkDeleteDraftPosts","listDraftPosts","getDeletedDraftPost","restoreFromTrashBin","queryDraftPosts","publishDraftPost","renameKeysFromRESTResponseToSDKResponse","transformPaths","transformRESTImageToSDKImage","transformRESTTimestampToSDKTimestamp","transformRESTPageURLToSDKPageURL","transformRESTVideoToSDKVideo","transformRESTFloatToSDKFloat","transformRESTVideoV2ToSDKVideoV2","createDraftPost","bulkCreateDraftPosts","bulkUpdateDraftPosts","listDeletedDraftPosts","getDraftPost","updateDraftPost","deleteDraftPost","removeFromTrashBin","bulkDeleteDraftPosts","listDraftPosts","getDeletedDraftPost","restoreFromTrashBin","queryDraftPosts","publishDraftPost","onDraftCreated","onDraftDeleted","onDraftUpdated"]}