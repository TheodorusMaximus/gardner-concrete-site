import { NonNullablePaths } from '@wix/sdk-types';

interface ImportStatus {
    /** Import Id. */
    _id?: string;
    /** File name of wordpress xml file that is being imported. */
    fileName?: string;
    /** Status of the latest import. */
    status?: StatusWithLiterals;
    /** Total amount of entities to be imported. */
    importAmount?: number;
    /** Amount of entities imported successfully. */
    alreadyImportedAmount?: number;
    /** Amount of entities processed. */
    processedAmount?: number;
    /**
     * Url for the page that is being imported.
     * @maxLength 100
     */
    url?: string | null;
}
declare enum Status {
    UNKNOWN = "UNKNOWN",
    READY_TO_IMPORT = "READY_TO_IMPORT",
    STARTED = "STARTED",
    FAILED = "FAILED",
    DONE = "DONE",
    PARSING_URL = "PARSING_URL",
    NOT_FOUND = "NOT_FOUND"
}
/** @enumType */
type StatusWithLiterals = Status | 'UNKNOWN' | 'READY_TO_IMPORT' | 'STARTED' | 'FAILED' | 'DONE' | 'PARSING_URL' | 'NOT_FOUND';
interface StartImportRequest {
    /** Should publish the posts after import. */
    shouldPublish?: boolean | null;
}
interface StartImportResponse {
}
interface SubmitUrlForImportRequest {
    /**
     * Url to wordpress xml file.
     * @maxLength 100
     */
    url: string;
    /**
     * Domain of the site without www or https://.
     * @maxLength 100
     */
    siteDomain?: string | null;
}
interface SubmitUrlForImportResponse {
}
interface ValidateUrlForImportRequest {
    /**
     * Url for wordpress site.
     * @maxLength 100
     */
    url: string | null;
}
interface ValidateUrlForImportResponse {
    /** Number of posts. */
    totalPosts?: number | null;
    /**
     * Blog title.
     * @maxLength 100
     */
    blogTitle?: string | null;
}
interface DeleteNotImportedRequest {
}
interface DeleteNotImportedResponse {
}
interface GetImportStatusRequest {
}
interface GetImportStatusResponse {
    /** Details of import progress. */
    importStatus?: ImportStatus;
}
interface GetNotImportedPostsRequest {
}
interface GetNotImportedPostsResponse {
    /** Failed entities. */
    notImportedPosts?: Post[];
}
interface Post {
    /** The id of the post. */
    _id?: string;
    /** Title of the post. */
    title?: string;
    /** Url to posts in wordpress. */
    url?: string;
}
type WordpressImportNonNullablePaths = `_id` | `fileName` | `status` | `importAmount` | `alreadyImportedAmount` | `processedAmount`;
/**
 * Starts wordpress import process.
 * @public
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.StartImport
 */
declare function startImport(options?: StartImportOptions): Promise<void>;
interface StartImportOptions {
    /** Should publish the posts after import. */
    shouldPublish?: boolean | null;
}
/**
 * Submits wordpress import process from URL.
 * It will prepare wordpress data for import from the given URL.
 * Use "GetImportStatus" to get the status of the import process.
 * Once the import status becomes READY_TO_IMPORT, the import process can be started by invoking "StartImport".
 * @param url - Url to wordpress xml file.
 * @public
 * @requiredField url
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.SubmitUrlForImport
 */
declare function submitUrlForImport(url: string, options?: SubmitUrlForImportOptions): Promise<void>;
interface SubmitUrlForImportOptions {
    /**
     * Domain of the site without www or https://.
     * @maxLength 100
     */
    siteDomain?: string | null;
}
/** @param url - Url for wordpress site.
 * @public
 * @requiredField url
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.ValidateUrlForImport
 */
declare function validateUrlForImport(url: string): Promise<ValidateUrlForImportResponse>;
/** @public
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.DeleteNotImported
 */
declare function deleteNotImported(): Promise<void>;
/**
 * Gets the status of the import process.
 * @public
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.GetImportStatus
 */
declare function getImportStatus(): Promise<NonNullablePaths<GetImportStatusResponse, {
    [P in WordpressImportNonNullablePaths]: `importStatus.${P}`;
}[WordpressImportNonNullablePaths]>>;
/**
 * Gets the posts that were not yet imported either because of an error or because import is still in progress.
 * @public
 * @permissionId BLOG.IMPORT_FROM_EXTERNAL_SITES
 * @applicableIdentity APP
 * @fqn com.wix.blog.WordpressImportService.GetNotImportedPosts
 */
declare function getNotImportedPosts(): Promise<NonNullablePaths<GetNotImportedPostsResponse, `notImportedPosts` | `notImportedPosts.${number}._id` | `notImportedPosts.${number}.title` | `notImportedPosts.${number}.url`>>;

export { type DeleteNotImportedRequest, type DeleteNotImportedResponse, type GetImportStatusRequest, type GetImportStatusResponse, type GetNotImportedPostsRequest, type GetNotImportedPostsResponse, type ImportStatus, type Post, type StartImportOptions, type StartImportRequest, type StartImportResponse, Status, type StatusWithLiterals, type SubmitUrlForImportOptions, type SubmitUrlForImportRequest, type SubmitUrlForImportResponse, type ValidateUrlForImportRequest, type ValidateUrlForImportResponse, deleteNotImported, getImportStatus, getNotImportedPosts, startImport, submitUrlForImport, validateUrlForImport };
