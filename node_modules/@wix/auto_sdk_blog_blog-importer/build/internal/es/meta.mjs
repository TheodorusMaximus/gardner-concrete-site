// src/blog-v1-wordpress-import-blog-importer.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixBlogWordpressImportServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/xml-blog-importer",
        destPath: ""
      }
    ],
    _api_base_domain_: [
      {
        srcPath: "/_api/xml-blog-importer",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_blog_blog-importer";
function startImport(payload) {
  function __startImport({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "POST",
      methodFqn: "com.wix.blog.WordpressImportService.StartImport",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/wordpress-import",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __startImport;
}
function submitUrlForImport(payload) {
  function __submitUrlForImport({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "POST",
      methodFqn: "com.wix.blog.WordpressImportService.SubmitUrlForImport",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/prepare-wordpress-url-import",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __submitUrlForImport;
}
function validateUrlForImport(payload) {
  function __validateUrlForImport({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "POST",
      methodFqn: "com.wix.blog.WordpressImportService.ValidateUrlForImport",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/validate-wordpress-url-import",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __validateUrlForImport;
}
function deleteNotImported(payload) {
  function __deleteNotImported({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "DELETE",
      methodFqn: "com.wix.blog.WordpressImportService.DeleteNotImported",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/wordpress-import",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteNotImported;
}
function getImportStatus(payload) {
  function __getImportStatus({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "GET",
      methodFqn: "com.wix.blog.WordpressImportService.GetImportStatus",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/wordpress-import",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __getImportStatus;
}
function getNotImportedPosts(payload) {
  function __getNotImportedPosts({ host }) {
    const metadata = {
      entityFqdn: "wix.blog.v1.wordpress_import",
      method: "GET",
      methodFqn: "com.wix.blog.WordpressImportService.GetNotImportedPosts",
      packageName: PACKAGE_NAME,
      url: resolveComWixBlogWordpressImportServiceUrl({
        protoPath: "/v1/wordpress-import/posts/not-imported",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __getNotImportedPosts;
}

// src/blog-v1-wordpress-import-blog-importer.meta.ts
function startImport2() {
  const payload = {};
  const getRequestOptions = startImport(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/wordpress-import",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function submitUrlForImport2() {
  const payload = {};
  const getRequestOptions = submitUrlForImport(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/prepare-wordpress-url-import",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function validateUrlForImport2() {
  const payload = {};
  const getRequestOptions = validateUrlForImport(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/validate-wordpress-url-import",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteNotImported2() {
  const payload = {};
  const getRequestOptions = deleteNotImported(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/wordpress-import",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getImportStatus2() {
  const payload = {};
  const getRequestOptions = getImportStatus(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/wordpress-import",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getNotImportedPosts2() {
  const payload = {};
  const getRequestOptions = getNotImportedPosts(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/wordpress-import/posts/not-imported",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  deleteNotImported2 as deleteNotImported,
  getImportStatus2 as getImportStatus,
  getNotImportedPosts2 as getNotImportedPosts,
  startImport2 as startImport,
  submitUrlForImport2 as submitUrlForImport,
  validateUrlForImport2 as validateUrlForImport
};
//# sourceMappingURL=meta.mjs.map